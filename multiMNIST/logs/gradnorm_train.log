Script started.
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7777, 0.6287], device='cuda:0', requires_grad=True) train_loss=[1.4273628 1.6867273], train_acc=[0.52435 0.42965]
2/100: weight=tensor([0.7750, 0.6319], device='cuda:0', requires_grad=True) train_loss=[1.1099311 1.2760063], train_acc=[0.6283  0.56835]
4/100: weight=tensor([0.7733, 0.6341], device='cuda:0', requires_grad=True) train_loss=[0.72942984 0.8953893 ], train_acc=[0.7644 0.6993]
6/100: weight=tensor([0.7126, 0.7016], device='cuda:0', requires_grad=True) train_loss=[0.6162768  0.75981325], train_acc=[0.8017  0.74455]
8/100: weight=tensor([0.7382, 0.6745], device='cuda:0', requires_grad=True) train_loss=[0.5498343 0.6855071], train_acc=[0.82395 0.7759 ]
10/100: weight=tensor([0.7466, 0.6653], device='cuda:0', requires_grad=True) train_loss=[0.5038085  0.63985616], train_acc=[0.83715 0.78305]
12/100: weight=tensor([0.7271, 0.6865], device='cuda:0', requires_grad=True) train_loss=[0.4742321 0.5786942], train_acc=[0.8464  0.80785]
14/100: weight=tensor([0.8190, 0.5738], device='cuda:0', requires_grad=True) train_loss=[0.44863105 0.55763644], train_acc=[0.8559 0.8152]
16/100: weight=tensor([0.7346, 0.6784], device='cuda:0', requires_grad=True) train_loss=[0.4262614 0.5277107], train_acc=[0.86205 0.8216 ]
18/100: weight=tensor([0.7300, 0.6835], device='cuda:0', requires_grad=True) train_loss=[0.40945667 0.51323086], train_acc=[0.867  0.8247]
20/100: weight=tensor([0.7911, 0.6117], device='cuda:0', requires_grad=True) train_loss=[0.4167193  0.51284754], train_acc=[0.86395 0.82335]
22/100: weight=tensor([0.7404, 0.6722], device='cuda:0', requires_grad=True) train_loss=[0.39083478 0.4930645 ], train_acc=[0.87155 0.8335 ]
24/100: weight=tensor([0.7119, 0.7023], device='cuda:0', requires_grad=True) train_loss=[0.38722178 0.49855217], train_acc=[0.87365 0.8358 ]
26/100: weight=tensor([0.7365, 0.6764], device='cuda:0', requires_grad=True) train_loss=[0.37426668 0.4891693 ], train_acc=[0.87585 0.83615]
28/100: weight=tensor([0.7964, 0.6047], device='cuda:0', requires_grad=True) train_loss=[0.36678672 0.46456727], train_acc=[0.87805 0.84705]
30/100: weight=tensor([0.7541, 0.6568], device='cuda:0', requires_grad=True) train_loss=[0.3647827  0.45222244], train_acc=[0.8809  0.84765]
32/100: weight=tensor([0.7521, 0.6590], device='cuda:0', requires_grad=True) train_loss=[0.35493442 0.44938874], train_acc=[0.88345 0.85095]
34/100: weight=tensor([0.7360, 0.6770], device='cuda:0', requires_grad=True) train_loss=[0.35144255 0.43802828], train_acc=[0.88495 0.8543 ]
36/100: weight=tensor([0.7549, 0.6558], device='cuda:0', requires_grad=True) train_loss=[0.35783568 0.45155475], train_acc=[0.8818  0.85025]
38/100: weight=tensor([0.7644, 0.6447], device='cuda:0', requires_grad=True) train_loss=[0.3411496 0.4310185], train_acc=[0.8889 0.8576]
40/100: weight=tensor([0.7458, 0.6662], device='cuda:0', requires_grad=True) train_loss=[0.35114104 0.4366286 ], train_acc=[0.88325 0.85505]
42/100: weight=tensor([0.7367, 0.6762], device='cuda:0', requires_grad=True) train_loss=[0.33230156 0.42100066], train_acc=[0.8915 0.8618]
44/100: weight=tensor([0.7737, 0.6336], device='cuda:0', requires_grad=True) train_loss=[0.33144352 0.4109413 ], train_acc=[0.891   0.86335]
46/100: weight=tensor([0.7769, 0.6296], device='cuda:0', requires_grad=True) train_loss=[0.32993993 0.4055458 ], train_acc=[0.89185 0.8669 ]
48/100: weight=tensor([0.7643, 0.6449], device='cuda:0', requires_grad=True) train_loss=[0.32994664 0.40563035], train_acc=[0.89085 0.8666 ]
50/100: weight=tensor([0.7434, 0.6688], device='cuda:0', requires_grad=True) train_loss=[0.33885476 0.40888226], train_acc=[0.88815 0.8641 ]
52/100: weight=tensor([0.7643, 0.6449], device='cuda:0', requires_grad=True) train_loss=[0.3263214 0.4126832], train_acc=[0.8918 0.8656]
54/100: weight=tensor([0.7682, 0.6403], device='cuda:0', requires_grad=True) train_loss=[0.32797387 0.40273717], train_acc=[0.89095 0.86635]
56/100: weight=tensor([0.7613, 0.6484], device='cuda:0', requires_grad=True) train_loss=[0.32000476 0.4108731 ], train_acc=[0.89515 0.8654 ]
58/100: weight=tensor([0.7753, 0.6316], device='cuda:0', requires_grad=True) train_loss=[0.32093006 0.38844112], train_acc=[0.89655 0.87185]
60/100: weight=tensor([0.7567, 0.6537], device='cuda:0', requires_grad=True) train_loss=[0.31225392 0.40034983], train_acc=[0.897   0.86595]
62/100: weight=tensor([0.7384, 0.6744], device='cuda:0', requires_grad=True) train_loss=[0.31479096 0.41921613], train_acc=[0.897   0.86055]
64/100: weight=tensor([0.7904, 0.6126], device='cuda:0', requires_grad=True) train_loss=[0.30756134 0.38908052], train_acc=[0.89995 0.87175]
66/100: weight=tensor([0.7444, 0.6677], device='cuda:0', requires_grad=True) train_loss=[0.3135204  0.40103748], train_acc=[0.89835 0.8673 ]
68/100: weight=tensor([0.7370, 0.6759], device='cuda:0', requires_grad=True) train_loss=[0.30342105 0.39235032], train_acc=[0.9006  0.87005]
70/100: weight=tensor([0.7438, 0.6684], device='cuda:0', requires_grad=True) train_loss=[0.30290157 0.37867633], train_acc=[0.89895 0.87455]
72/100: weight=tensor([0.7263, 0.6874], device='cuda:0', requires_grad=True) train_loss=[0.30729067 0.39883173], train_acc=[0.8992 0.8686]
74/100: weight=tensor([0.7630, 0.6464], device='cuda:0', requires_grad=True) train_loss=[0.30999756 0.39670482], train_acc=[0.8991 0.8688]
76/100: weight=tensor([0.7675, 0.6410], device='cuda:0', requires_grad=True) train_loss=[0.30046517 0.37451202], train_acc=[0.9007 0.8759]
78/100: weight=tensor([0.7335, 0.6796], device='cuda:0', requires_grad=True) train_loss=[0.30590695 0.37676522], train_acc=[0.8998  0.87615]
80/100: weight=tensor([0.7853, 0.6191], device='cuda:0', requires_grad=True) train_loss=[0.3020205  0.37493333], train_acc=[0.9005  0.87635]
82/100: weight=tensor([0.7369, 0.6760], device='cuda:0', requires_grad=True) train_loss=[0.30737963 0.37369052], train_acc=[0.89845 0.87665]
84/100: weight=tensor([0.7780, 0.6283], device='cuda:0', requires_grad=True) train_loss=[0.29719013 0.37485602], train_acc=[0.90265 0.87705]
86/100: weight=tensor([0.7931, 0.6091], device='cuda:0', requires_grad=True) train_loss=[0.30006197 0.36994898], train_acc=[0.89995 0.878  ]
88/100: weight=tensor([0.7401, 0.6725], device='cuda:0', requires_grad=True) train_loss=[0.2957356  0.37648094], train_acc=[0.90385 0.8766 ]
90/100: weight=tensor([0.7762, 0.6304], device='cuda:0', requires_grad=True) train_loss=[0.2955649  0.37794134], train_acc=[0.9036  0.87545]
92/100: weight=tensor([0.7577, 0.6527], device='cuda:0', requires_grad=True) train_loss=[0.2971766  0.38186228], train_acc=[0.90265 0.875  ]
94/100: weight=tensor([0.7563, 0.6543], device='cuda:0', requires_grad=True) train_loss=[0.30044097 0.3661288 ], train_acc=[0.90075 0.87865]
96/100: weight=tensor([0.7837, 0.6211], device='cuda:0', requires_grad=True) train_loss=[0.29982653 0.38013852], train_acc=[0.90275 0.8743 ]
98/100: weight=tensor([0.7404, 0.6721], device='cuda:0', requires_grad=True) train_loss=[0.29521614 0.37465864], train_acc=[0.9019  0.87435]
100/100: weight=tensor([0.7310, 0.6824], device='cuda:0', requires_grad=True) train_loss=[0.28897232 0.36036476], train_acc=[0.90445 0.8799 ]
**** Time taken for mnist_0 = 5100.203006744385
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6957, 0.7183], device='cuda:0', requires_grad=True) train_loss=[1.330922 1.468351], train_acc=[0.55715 0.49355]
2/100: weight=tensor([0.7728, 0.6347], device='cuda:0', requires_grad=True) train_loss=[0.95118713 1.0751843 ], train_acc=[0.6907 0.6318]
4/100: weight=tensor([0.6906, 0.7233], device='cuda:0', requires_grad=True) train_loss=[0.66335523 0.76954883], train_acc=[0.7855 0.7421]
6/100: weight=tensor([0.6454, 0.7639], device='cuda:0', requires_grad=True) train_loss=[0.5623974  0.67020625], train_acc=[0.8168  0.77215]
8/100: weight=tensor([0.6989, 0.7152], device='cuda:0', requires_grad=True) train_loss=[0.5134959  0.61225796], train_acc=[0.83325 0.79635]
10/100: weight=tensor([0.6785, 0.7346], device='cuda:0', requires_grad=True) train_loss=[0.51120573 0.57455796], train_acc=[0.8346 0.8065]
12/100: weight=tensor([0.7453, 0.6667], device='cuda:0', requires_grad=True) train_loss=[0.48522824 0.54325694], train_acc=[0.84265 0.8181 ]
14/100: weight=tensor([0.6984, 0.7157], device='cuda:0', requires_grad=True) train_loss=[0.4319777 0.50408  ], train_acc=[0.858   0.83205]
16/100: weight=tensor([0.7660, 0.6429], device='cuda:0', requires_grad=True) train_loss=[0.41475132 0.4943785 ], train_acc=[0.8665  0.83355]
18/100: weight=tensor([0.6624, 0.7492], device='cuda:0', requires_grad=True) train_loss=[0.40069172 0.47154072], train_acc=[0.86935 0.84395]
20/100: weight=tensor([0.7081, 0.7061], device='cuda:0', requires_grad=True) train_loss=[0.41250485 0.46777877], train_acc=[0.86815 0.8447 ]
22/100: weight=tensor([0.7021, 0.7121], device='cuda:0', requires_grad=True) train_loss=[0.3847103  0.45089626], train_acc=[0.87485 0.84985]
24/100: weight=tensor([0.7151, 0.6990], device='cuda:0', requires_grad=True) train_loss=[0.36620083 0.4464532 ], train_acc=[0.88225 0.84955]
26/100: weight=tensor([0.7552, 0.6555], device='cuda:0', requires_grad=True) train_loss=[0.36079141 0.43765536], train_acc=[0.8818  0.85385]
28/100: weight=tensor([0.7187, 0.6953], device='cuda:0', requires_grad=True) train_loss=[0.3589733  0.45071194], train_acc=[0.88195 0.85035]
30/100: weight=tensor([0.7138, 0.7004], device='cuda:0', requires_grad=True) train_loss=[0.35694018 0.42673585], train_acc=[0.88315 0.85775]
32/100: weight=tensor([0.7516, 0.6596], device='cuda:0', requires_grad=True) train_loss=[0.35154963 0.41059452], train_acc=[0.8852 0.8625]
34/100: weight=tensor([0.7253, 0.6884], device='cuda:0', requires_grad=True) train_loss=[0.33893663 0.4133292 ], train_acc=[0.89025 0.86065]
36/100: weight=tensor([0.7376, 0.6752], device='cuda:0', requires_grad=True) train_loss=[0.3351389 0.4054981], train_acc=[0.8906  0.86405]
38/100: weight=tensor([0.7763, 0.6304], device='cuda:0', requires_grad=True) train_loss=[0.33084425 0.41611812], train_acc=[0.89155 0.8604 ]
40/100: weight=tensor([0.6968, 0.7173], device='cuda:0', requires_grad=True) train_loss=[0.33505738 0.39527115], train_acc=[0.89235 0.8679 ]
42/100: weight=tensor([0.7288, 0.6847], device='cuda:0', requires_grad=True) train_loss=[0.32137364 0.39617103], train_acc=[0.895   0.86605]
44/100: weight=tensor([0.6961, 0.7179], device='cuda:0', requires_grad=True) train_loss=[0.32007435 0.39744082], train_acc=[0.8958  0.86555]
46/100: weight=tensor([0.7230, 0.6909], device='cuda:0', requires_grad=True) train_loss=[0.3137032 0.3878425], train_acc=[0.8969  0.86955]
48/100: weight=tensor([0.7265, 0.6872], device='cuda:0', requires_grad=True) train_loss=[0.31596893 0.39649606], train_acc=[0.8977 0.8668]
50/100: weight=tensor([0.6879, 0.7259], device='cuda:0', requires_grad=True) train_loss=[0.31096688 0.38785914], train_acc=[0.89825 0.8677 ]
52/100: weight=tensor([0.7463, 0.6656], device='cuda:0', requires_grad=True) train_loss=[0.3194165  0.38967195], train_acc=[0.8963  0.86895]
54/100: weight=tensor([0.7014, 0.7128], device='cuda:0', requires_grad=True) train_loss=[0.3081326 0.3803583], train_acc=[0.89875 0.8703 ]
56/100: weight=tensor([0.7087, 0.7055], device='cuda:0', requires_grad=True) train_loss=[0.3062332  0.38322774], train_acc=[0.9013  0.87025]
58/100: weight=tensor([0.7099, 0.7043], device='cuda:0', requires_grad=True) train_loss=[0.30606228 0.37337124], train_acc=[0.89905 0.87395]
60/100: weight=tensor([0.7443, 0.6679], device='cuda:0', requires_grad=True) train_loss=[0.30527645 0.37838894], train_acc=[0.8995  0.87255]
62/100: weight=tensor([0.6968, 0.7172], device='cuda:0', requires_grad=True) train_loss=[0.3013273  0.37700066], train_acc=[0.90295 0.87355]
64/100: weight=tensor([0.7228, 0.6910], device='cuda:0', requires_grad=True) train_loss=[0.3208326  0.39634955], train_acc=[0.89425 0.86585]
66/100: weight=tensor([0.7356, 0.6774], device='cuda:0', requires_grad=True) train_loss=[0.29991785 0.37204483], train_acc=[0.9026 0.8738]
68/100: weight=tensor([0.7569, 0.6535], device='cuda:0', requires_grad=True) train_loss=[0.33978015 0.40237018], train_acc=[0.88935 0.8647 ]
70/100: weight=tensor([0.7180, 0.6961], device='cuda:0', requires_grad=True) train_loss=[0.29288244 0.37098545], train_acc=[0.90445 0.87415]
72/100: weight=tensor([0.7115, 0.7027], device='cuda:0', requires_grad=True) train_loss=[0.29477307 0.36648664], train_acc=[0.9043 0.8774]
74/100: weight=tensor([0.7374, 0.6755], device='cuda:0', requires_grad=True) train_loss=[0.29166666 0.37421477], train_acc=[0.90645 0.8742 ]
76/100: weight=tensor([0.7319, 0.6814], device='cuda:0', requires_grad=True) train_loss=[0.2871402  0.36181605], train_acc=[0.90715 0.8792 ]
78/100: weight=tensor([0.7356, 0.6774], device='cuda:0', requires_grad=True) train_loss=[0.2981355 0.3601599], train_acc=[0.90415 0.8794 ]
80/100: weight=tensor([0.7286, 0.6850], device='cuda:0', requires_grad=True) train_loss=[0.29066893 0.3615005 ], train_acc=[0.90555 0.87905]
82/100: weight=tensor([0.7537, 0.6573], device='cuda:0', requires_grad=True) train_loss=[0.28384343 0.36790007], train_acc=[0.9085 0.8762]
84/100: weight=tensor([0.7319, 0.6815], device='cuda:0', requires_grad=True) train_loss=[0.28705475 0.36088946], train_acc=[0.90685 0.8782 ]
86/100: weight=tensor([0.7361, 0.6768], device='cuda:0', requires_grad=True) train_loss=[0.28381237 0.35780472], train_acc=[0.907  0.8808]
88/100: weight=tensor([0.7242, 0.6896], device='cuda:0', requires_grad=True) train_loss=[0.29482794 0.36665735], train_acc=[0.90255 0.87755]
90/100: weight=tensor([0.7283, 0.6852], device='cuda:0', requires_grad=True) train_loss=[0.28105015 0.35342863], train_acc=[0.9076 0.8824]
92/100: weight=tensor([0.7202, 0.6938], device='cuda:0', requires_grad=True) train_loss=[0.28712925 0.3600639 ], train_acc=[0.9069 0.8798]
94/100: weight=tensor([0.7261, 0.6876], device='cuda:0', requires_grad=True) train_loss=[0.2814519  0.35710362], train_acc=[0.9094 0.8799]
96/100: weight=tensor([0.7348, 0.6783], device='cuda:0', requires_grad=True) train_loss=[0.28189382 0.35579622], train_acc=[0.9082 0.8817]
98/100: weight=tensor([0.7222, 0.6917], device='cuda:0', requires_grad=True) train_loss=[0.2850765  0.36134616], train_acc=[0.90815 0.8785 ]
100/100: weight=tensor([0.7086, 0.7056], device='cuda:0', requires_grad=True) train_loss=[0.27707556 0.37047496], train_acc=[0.91015 0.8753 ]
**** Time taken for mnist_1 = 3745.787781715393
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.8068, 0.5908], device='cuda:0', requires_grad=True) train_loss=[1.2747993 1.5487639], train_acc=[0.58035 0.47645]
2/100: weight=tensor([0.7220, 0.6919], device='cuda:0', requires_grad=True) train_loss=[0.9764533 1.183693 ], train_acc=[0.6814  0.60435]
4/100: weight=tensor([0.7173, 0.6968], device='cuda:0', requires_grad=True) train_loss=[0.7221206 0.896842 ], train_acc=[0.76965 0.7038 ]
6/100: weight=tensor([0.7073, 0.7069], device='cuda:0', requires_grad=True) train_loss=[0.5982547 0.7817165], train_acc=[0.80945 0.74195]
8/100: weight=tensor([0.7365, 0.6764], device='cuda:0', requires_grad=True) train_loss=[0.530012   0.67833537], train_acc=[0.8298 0.7805]
10/100: weight=tensor([0.7643, 0.6449], device='cuda:0', requires_grad=True) train_loss=[0.48672014 0.62172884], train_acc=[0.843   0.79665]
12/100: weight=tensor([0.7297, 0.6838], device='cuda:0', requires_grad=True) train_loss=[0.46272025 0.61083543], train_acc=[0.84895 0.7964 ]
14/100: weight=tensor([0.7311, 0.6822], device='cuda:0', requires_grad=True) train_loss=[0.4651553 0.5654821], train_acc=[0.84665 0.8138 ]
16/100: weight=tensor([0.7268, 0.6868], device='cuda:0', requires_grad=True) train_loss=[0.42596185 0.5305014 ], train_acc=[0.8635 0.826 ]
18/100: weight=tensor([0.7778, 0.6285], device='cuda:0', requires_grad=True) train_loss=[0.40972447 0.51909494], train_acc=[0.8672 0.8283]
20/100: weight=tensor([0.7570, 0.6535], device='cuda:0', requires_grad=True) train_loss=[0.3992955 0.5261405], train_acc=[0.8708 0.8236]
22/100: weight=tensor([0.7402, 0.6724], device='cuda:0', requires_grad=True) train_loss=[0.39758265 0.4994728 ], train_acc=[0.8702  0.83285]
24/100: weight=tensor([0.6911, 0.7228], device='cuda:0', requires_grad=True) train_loss=[0.3856717  0.47968486], train_acc=[0.87555 0.8412 ]
26/100: weight=tensor([0.7803, 0.6254], device='cuda:0', requires_grad=True) train_loss=[0.3717377  0.47203505], train_acc=[0.87875 0.8426 ]
28/100: weight=tensor([0.7695, 0.6387], device='cuda:0', requires_grad=True) train_loss=[0.36610714 0.48409185], train_acc=[0.88165 0.83895]
30/100: weight=tensor([0.7276, 0.6860], device='cuda:0', requires_grad=True) train_loss=[0.3851473  0.45422268], train_acc=[0.87525 0.84895]
32/100: weight=tensor([0.6818, 0.7316], device='cuda:0', requires_grad=True) train_loss=[0.36445826 0.4585642 ], train_acc=[0.88115 0.84795]
34/100: weight=tensor([0.7215, 0.6924], device='cuda:0', requires_grad=True) train_loss=[0.3667481  0.44838485], train_acc=[0.88105 0.85215]
36/100: weight=tensor([0.7461, 0.6658], device='cuda:0', requires_grad=True) train_loss=[0.35728762 0.43188903], train_acc=[0.88645 0.86005]
38/100: weight=tensor([0.7528, 0.6583], device='cuda:0', requires_grad=True) train_loss=[0.3490575  0.43596688], train_acc=[0.8862 0.8555]
40/100: weight=tensor([0.7151, 0.6991], device='cuda:0', requires_grad=True) train_loss=[0.34754276 0.42261878], train_acc=[0.88715 0.86305]
42/100: weight=tensor([0.7396, 0.6731], device='cuda:0', requires_grad=True) train_loss=[0.35136783 0.42391202], train_acc=[0.8852  0.86325]
44/100: weight=tensor([0.7017, 0.7125], device='cuda:0', requires_grad=True) train_loss=[0.33829382 0.406696  ], train_acc=[0.89065 0.86625]
46/100: weight=tensor([0.7284, 0.6851], device='cuda:0', requires_grad=True) train_loss=[0.33930892 0.41142106], train_acc=[0.8882  0.86555]
48/100: weight=tensor([0.6899, 0.7239], device='cuda:0', requires_grad=True) train_loss=[0.34280634 0.41650555], train_acc=[0.88885 0.86455]
50/100: weight=tensor([0.7385, 0.6742], device='cuda:0', requires_grad=True) train_loss=[0.347789   0.42100796], train_acc=[0.8876 0.8598]
52/100: weight=tensor([0.7399, 0.6727], device='cuda:0', requires_grad=True) train_loss=[0.3262391  0.40263256], train_acc=[0.89305 0.86655]
54/100: weight=tensor([0.7300, 0.6835], device='cuda:0', requires_grad=True) train_loss=[0.3324534 0.4000422], train_acc=[0.89075 0.86945]
56/100: weight=tensor([0.7076, 0.7067], device='cuda:0', requires_grad=True) train_loss=[0.335116   0.39001504], train_acc=[0.8909  0.87405]
58/100: weight=tensor([0.6848, 0.7287], device='cuda:0', requires_grad=True) train_loss=[0.3173517  0.39067474], train_acc=[0.89595 0.8723 ]
60/100: weight=tensor([0.7400, 0.6726], device='cuda:0', requires_grad=True) train_loss=[0.32910275 0.38754776], train_acc=[0.8909 0.8724]
62/100: weight=tensor([0.7316, 0.6818], device='cuda:0', requires_grad=True) train_loss=[0.3150557  0.37985635], train_acc=[0.8977  0.87465]
64/100: weight=tensor([0.7225, 0.6914], device='cuda:0', requires_grad=True) train_loss=[0.31007612 0.38420656], train_acc=[0.8995 0.8767]
66/100: weight=tensor([0.7189, 0.6951], device='cuda:0', requires_grad=True) train_loss=[0.311357   0.37991038], train_acc=[0.89955 0.87635]
68/100: weight=tensor([0.7601, 0.6498], device='cuda:0', requires_grad=True) train_loss=[0.30768335 0.37202018], train_acc=[0.90075 0.87785]
70/100: weight=tensor([0.6863, 0.7273], device='cuda:0', requires_grad=True) train_loss=[0.30897304 0.38180706], train_acc=[0.8997 0.8758]
72/100: weight=tensor([0.7402, 0.6724], device='cuda:0', requires_grad=True) train_loss=[0.31202233 0.38276422], train_acc=[0.89905 0.8747 ]
74/100: weight=tensor([0.7649, 0.6442], device='cuda:0', requires_grad=True) train_loss=[0.3137999  0.38674575], train_acc=[0.89815 0.8739 ]
76/100: weight=tensor([0.7515, 0.6597], device='cuda:0', requires_grad=True) train_loss=[0.3063798 0.3827046], train_acc=[0.9005  0.87565]
78/100: weight=tensor([0.7043, 0.7099], device='cuda:0', requires_grad=True) train_loss=[0.3024005 0.3669684], train_acc=[0.902   0.88025]
80/100: weight=tensor([0.7607, 0.6491], device='cuda:0', requires_grad=True) train_loss=[0.32691777 0.39784646], train_acc=[0.8938  0.86975]
82/100: weight=tensor([0.7693, 0.6389], device='cuda:0', requires_grad=True) train_loss=[0.30174646 0.3658317 ], train_acc=[0.90105 0.87985]
84/100: weight=tensor([0.7386, 0.6742], device='cuda:0', requires_grad=True) train_loss=[0.29370648 0.36280075], train_acc=[0.9051 0.8808]
86/100: weight=tensor([0.7484, 0.6633], device='cuda:0', requires_grad=True) train_loss=[0.30033937 0.36082447], train_acc=[0.90315 0.88265]
88/100: weight=tensor([0.7518, 0.6594], device='cuda:0', requires_grad=True) train_loss=[0.2916665  0.36240107], train_acc=[0.9058  0.88105]
90/100: weight=tensor([0.7543, 0.6565], device='cuda:0', requires_grad=True) train_loss=[0.29278156 0.37305355], train_acc=[0.90465 0.87705]
92/100: weight=tensor([0.7586, 0.6516], device='cuda:0', requires_grad=True) train_loss=[0.2896052  0.36494693], train_acc=[0.9063 0.881 ]
94/100: weight=tensor([0.7450, 0.6671], device='cuda:0', requires_grad=True) train_loss=[0.2961244 0.3650678], train_acc=[0.9043  0.88135]
96/100: weight=tensor([0.7523, 0.6588], device='cuda:0', requires_grad=True) train_loss=[0.28859577 0.3549156 ], train_acc=[0.90635 0.88455]
98/100: weight=tensor([0.7621, 0.6475], device='cuda:0', requires_grad=True) train_loss=[0.29117963 0.35353312], train_acc=[0.9051 0.8834]
100/100: weight=tensor([0.7380, 0.6748], device='cuda:0', requires_grad=True) train_loss=[0.29910558 0.36653343], train_acc=[0.9027  0.88115]
**** Time taken for mnist_2 = 3388.3082959651947
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6015, 0.7989], device='cuda:0', requires_grad=True) train_loss=[1.9406495 1.970987 ], train_acc=[0.3111 0.3207]
2/100: weight=tensor([0.6614, 0.7500], device='cuda:0', requires_grad=True) train_loss=[1.5297394 1.4574956], train_acc=[0.46555 0.4838 ]
4/100: weight=tensor([0.6402, 0.7682], device='cuda:0', requires_grad=True) train_loss=[0.9500024 0.977606 ], train_acc=[0.681  0.6678]
6/100: weight=tensor([0.6914, 0.7225], device='cuda:0', requires_grad=True) train_loss=[0.750658  0.7858422], train_acc=[0.74835 0.72735]
8/100: weight=tensor([0.6698, 0.7426], device='cuda:0', requires_grad=True) train_loss=[0.6523952 0.6914695], train_acc=[0.78375 0.76835]
10/100: weight=tensor([0.6519, 0.7583], device='cuda:0', requires_grad=True) train_loss=[0.61187893 0.6311434 ], train_acc=[0.79905 0.7894 ]
12/100: weight=tensor([0.6358, 0.7719], device='cuda:0', requires_grad=True) train_loss=[0.5749043  0.60414416], train_acc=[0.8084  0.79535]
14/100: weight=tensor([0.6044, 0.7967], device='cuda:0', requires_grad=True) train_loss=[0.52698445 0.5904292 ], train_acc=[0.826   0.80075]
16/100: weight=tensor([0.6116, 0.7911], device='cuda:0', requires_grad=True) train_loss=[0.50198287 0.5767911 ], train_acc=[0.834  0.7999]
18/100: weight=tensor([0.6177, 0.7864], device='cuda:0', requires_grad=True) train_loss=[0.4781136  0.51982456], train_acc=[0.84395 0.8255 ]
20/100: weight=tensor([0.6427, 0.7661], device='cuda:0', requires_grad=True) train_loss=[0.4620336  0.51773876], train_acc=[0.8512  0.82555]
22/100: weight=tensor([0.6570, 0.7539], device='cuda:0', requires_grad=True) train_loss=[0.4730053 0.4891569], train_acc=[0.8447 0.8336]
24/100: weight=tensor([0.6627, 0.7489], device='cuda:0', requires_grad=True) train_loss=[0.4405027  0.47603676], train_acc=[0.858   0.84045]
26/100: weight=tensor([0.5920, 0.8060], device='cuda:0', requires_grad=True) train_loss=[0.43310103 0.46627694], train_acc=[0.86115 0.84485]
28/100: weight=tensor([0.6062, 0.7953], device='cuda:0', requires_grad=True) train_loss=[0.43156976 0.44852853], train_acc=[0.85765 0.8496 ]
30/100: weight=tensor([0.6198, 0.7847], device='cuda:0', requires_grad=True) train_loss=[0.42144486 0.48368552], train_acc=[0.86205 0.83975]
32/100: weight=tensor([0.6137, 0.7895], device='cuda:0', requires_grad=True) train_loss=[0.4161633 0.4373259], train_acc=[0.86415 0.8536 ]
34/100: weight=tensor([0.6315, 0.7754], device='cuda:0', requires_grad=True) train_loss=[0.40361068 0.43005565], train_acc=[0.86885 0.854  ]
36/100: weight=tensor([0.5540, 0.8325], device='cuda:0', requires_grad=True) train_loss=[0.4058411  0.43163794], train_acc=[0.86765 0.85275]
38/100: weight=tensor([0.5983, 0.8013], device='cuda:0', requires_grad=True) train_loss=[0.4029652 0.4233087], train_acc=[0.86925 0.85755]
40/100: weight=tensor([0.6012, 0.7991], device='cuda:0', requires_grad=True) train_loss=[0.40531805 0.4214313 ], train_acc=[0.87075 0.85985]
42/100: weight=tensor([0.6146, 0.7888], device='cuda:0', requires_grad=True) train_loss=[0.39334717 0.43139318], train_acc=[0.8725 0.8577]
44/100: weight=tensor([0.5878, 0.8090], device='cuda:0', requires_grad=True) train_loss=[0.3963075 0.416256 ], train_acc=[0.8695 0.8588]
46/100: weight=tensor([0.6392, 0.7691], device='cuda:0', requires_grad=True) train_loss=[0.38674432 0.41620198], train_acc=[0.87485 0.8614 ]
48/100: weight=tensor([0.6378, 0.7702], device='cuda:0', requires_grad=True) train_loss=[0.3829923 0.4021414], train_acc=[0.87525 0.86585]
50/100: weight=tensor([0.6212, 0.7837], device='cuda:0', requires_grad=True) train_loss=[0.38825247 0.3902159 ], train_acc=[0.8751 0.8692]
52/100: weight=tensor([0.6382, 0.7698], device='cuda:0', requires_grad=True) train_loss=[0.37743452 0.38806692], train_acc=[0.87745 0.87095]
54/100: weight=tensor([0.6061, 0.7954], device='cuda:0', requires_grad=True) train_loss=[0.3696106  0.38293606], train_acc=[0.8812 0.871 ]
56/100: weight=tensor([0.6111, 0.7916], device='cuda:0', requires_grad=True) train_loss=[0.37065557 0.38815153], train_acc=[0.8797 0.8708]
58/100: weight=tensor([0.6292, 0.7772], device='cuda:0', requires_grad=True) train_loss=[0.36453906 0.38074484], train_acc=[0.88275 0.8727 ]
60/100: weight=tensor([0.5980, 0.8015], device='cuda:0', requires_grad=True) train_loss=[0.36366388 0.38912234], train_acc=[0.88245 0.87005]
62/100: weight=tensor([0.6290, 0.7774], device='cuda:0', requires_grad=True) train_loss=[0.37185815 0.37632212], train_acc=[0.8788 0.8736]
64/100: weight=tensor([0.6574, 0.7536], device='cuda:0', requires_grad=True) train_loss=[0.37621394 0.38903713], train_acc=[0.8786  0.86985]
66/100: weight=tensor([0.6222, 0.7828], device='cuda:0', requires_grad=True) train_loss=[0.3596494  0.36436146], train_acc=[0.8846  0.87755]
68/100: weight=tensor([0.6157, 0.7880], device='cuda:0', requires_grad=True) train_loss=[0.3600151  0.36682382], train_acc=[0.8836  0.87555]
70/100: weight=tensor([0.6548, 0.7558], device='cuda:0', requires_grad=True) train_loss=[0.36853328 0.358833  ], train_acc=[0.8808  0.87995]
72/100: weight=tensor([0.6761, 0.7368], device='cuda:0', requires_grad=True) train_loss=[0.35069916 0.3703708 ], train_acc=[0.88715 0.8741 ]
74/100: weight=tensor([0.6218, 0.7832], device='cuda:0', requires_grad=True) train_loss=[0.35610962 0.36459285], train_acc=[0.88645 0.87905]
76/100: weight=tensor([0.6050, 0.7962], device='cuda:0', requires_grad=True) train_loss=[0.35340175 0.36780393], train_acc=[0.8873 0.8772]
78/100: weight=tensor([0.6339, 0.7734], device='cuda:0', requires_grad=True) train_loss=[0.3435563  0.35300052], train_acc=[0.8904  0.88185]
80/100: weight=tensor([0.6610, 0.7504], device='cuda:0', requires_grad=True) train_loss=[0.3490682 0.3553237], train_acc=[0.88905 0.88135]
82/100: weight=tensor([0.6588, 0.7523], device='cuda:0', requires_grad=True) train_loss=[0.34377727 0.34804168], train_acc=[0.889   0.88525]
84/100: weight=tensor([0.6634, 0.7482], device='cuda:0', requires_grad=True) train_loss=[0.33832568 0.368294  ], train_acc=[0.8911  0.87805]
86/100: weight=tensor([0.6357, 0.7720], device='cuda:0', requires_grad=True) train_loss=[0.34203756 0.3462912 ], train_acc=[0.8894 0.8842]
88/100: weight=tensor([0.6460, 0.7633], device='cuda:0', requires_grad=True) train_loss=[0.34784427 0.33999404], train_acc=[0.89045 0.886  ]
90/100: weight=tensor([0.6650, 0.7468], device='cuda:0', requires_grad=True) train_loss=[0.33796516 0.35257038], train_acc=[0.89235 0.88345]
92/100: weight=tensor([0.5950, 0.8038], device='cuda:0', requires_grad=True) train_loss=[0.33273745 0.3421666 ], train_acc=[0.8929 0.8844]
94/100: weight=tensor([0.6431, 0.7658], device='cuda:0', requires_grad=True) train_loss=[0.33053362 0.35380182], train_acc=[0.89295 0.88195]
96/100: weight=tensor([0.6325, 0.7745], device='cuda:0', requires_grad=True) train_loss=[0.32767934 0.34118176], train_acc=[0.8945 0.8885]
98/100: weight=tensor([0.6557, 0.7550], device='cuda:0', requires_grad=True) train_loss=[0.32977036 0.33809522], train_acc=[0.89535 0.88695]
100/100: weight=tensor([0.6347, 0.7728], device='cuda:0', requires_grad=True) train_loss=[0.32978475 0.33478302], train_acc=[0.89575 0.88805]
**** Time taken for mnist_3 = 3235.13139462471
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.5905, 0.8070], device='cuda:0', requires_grad=True) train_loss=[1.4354162 1.5582662], train_acc=[0.50815 0.46815]
2/100: weight=tensor([0.6414, 0.7672], device='cuda:0', requires_grad=True) train_loss=[1.0099285 1.1293087], train_acc=[0.66815 0.6218 ]
4/100: weight=tensor([0.6773, 0.7357], device='cuda:0', requires_grad=True) train_loss=[0.7371581  0.81932575], train_acc=[0.76055 0.7215 ]
6/100: weight=tensor([0.6785, 0.7346], device='cuda:0', requires_grad=True) train_loss=[0.6121442 0.7414148], train_acc=[0.8025 0.7533]
8/100: weight=tensor([0.6351, 0.7724], device='cuda:0', requires_grad=True) train_loss=[0.5450069  0.64601034], train_acc=[0.8262  0.78295]
10/100: weight=tensor([0.6633, 0.7483], device='cuda:0', requires_grad=True) train_loss=[0.50822383 0.5964726 ], train_acc=[0.83715 0.8009 ]
12/100: weight=tensor([0.6320, 0.7750], device='cuda:0', requires_grad=True) train_loss=[0.49118507 0.55250233], train_acc=[0.83995 0.81295]
14/100: weight=tensor([0.6630, 0.7486], device='cuda:0', requires_grad=True) train_loss=[0.4502836  0.52497727], train_acc=[0.8537 0.8235]
16/100: weight=tensor([0.6662, 0.7458], device='cuda:0', requires_grad=True) train_loss=[0.4352388  0.50314176], train_acc=[0.8585 0.8326]
18/100: weight=tensor([0.7108, 0.7034], device='cuda:0', requires_grad=True) train_loss=[0.42061186 0.48331684], train_acc=[0.8627 0.8373]
20/100: weight=tensor([0.6442, 0.7648], device='cuda:0', requires_grad=True) train_loss=[0.41321266 0.4965181 ], train_acc=[0.86515 0.83515]
22/100: weight=tensor([0.7230, 0.6908], device='cuda:0', requires_grad=True) train_loss=[0.4156139  0.45897546], train_acc=[0.865  0.8448]
24/100: weight=tensor([0.6499, 0.7600], device='cuda:0', requires_grad=True) train_loss=[0.4204096  0.46091133], train_acc=[0.8624  0.84575]
26/100: weight=tensor([0.6455, 0.7638], device='cuda:0', requires_grad=True) train_loss=[0.39212602 0.4478266 ], train_acc=[0.8714 0.8471]
28/100: weight=tensor([0.6865, 0.7271], device='cuda:0', requires_grad=True) train_loss=[0.3816621  0.43925768], train_acc=[0.87675 0.8525 ]
30/100: weight=tensor([0.6829, 0.7305], device='cuda:0', requires_grad=True) train_loss=[0.37501284 0.44243333], train_acc=[0.8767  0.85075]
32/100: weight=tensor([0.6447, 0.7645], device='cuda:0', requires_grad=True) train_loss=[0.3649682  0.42771643], train_acc=[0.88085 0.85575]
34/100: weight=tensor([0.6649, 0.7470], device='cuda:0', requires_grad=True) train_loss=[0.35927773 0.43363404], train_acc=[0.8821  0.85445]
36/100: weight=tensor([0.6527, 0.7576], device='cuda:0', requires_grad=True) train_loss=[0.3623295  0.41157335], train_acc=[0.87915 0.86145]
38/100: weight=tensor([0.5912, 0.8065], device='cuda:0', requires_grad=True) train_loss=[0.35306108 0.41929612], train_acc=[0.8829  0.86085]
40/100: weight=tensor([0.6441, 0.7650], device='cuda:0', requires_grad=True) train_loss=[0.35347506 0.4091746 ], train_acc=[0.88325 0.86385]
42/100: weight=tensor([0.6955, 0.7185], device='cuda:0', requires_grad=True) train_loss=[0.3489964 0.4025368], train_acc=[0.88465 0.86425]
44/100: weight=tensor([0.7022, 0.7120], device='cuda:0', requires_grad=True) train_loss=[0.34900874 0.3983841 ], train_acc=[0.88525 0.8668 ]
46/100: weight=tensor([0.6896, 0.7242], device='cuda:0', requires_grad=True) train_loss=[0.350487   0.40738297], train_acc=[0.88565 0.8639 ]
48/100: weight=tensor([0.6766, 0.7363], device='cuda:0', requires_grad=True) train_loss=[0.33538082 0.4096672 ], train_acc=[0.891  0.8627]
50/100: weight=tensor([0.7349, 0.6781], device='cuda:0', requires_grad=True) train_loss=[0.33591986 0.40866578], train_acc=[0.8924  0.86355]
52/100: weight=tensor([0.6192, 0.7853], device='cuda:0', requires_grad=True) train_loss=[0.34192696 0.38859028], train_acc=[0.88645 0.8689 ]
54/100: weight=tensor([0.6527, 0.7576], device='cuda:0', requires_grad=True) train_loss=[0.34370634 0.38604188], train_acc=[0.8888  0.86915]
56/100: weight=tensor([0.6335, 0.7737], device='cuda:0', requires_grad=True) train_loss=[0.3372486 0.38078  ], train_acc=[0.8893  0.87335]
58/100: weight=tensor([0.7062, 0.7080], device='cuda:0', requires_grad=True) train_loss=[0.32693443 0.38329485], train_acc=[0.89475 0.8706 ]
60/100: weight=tensor([0.6589, 0.7522], device='cuda:0', requires_grad=True) train_loss=[0.33855116 0.38175857], train_acc=[0.88965 0.8718 ]
62/100: weight=tensor([0.6551, 0.7556], device='cuda:0', requires_grad=True) train_loss=[0.32375687 0.37940782], train_acc=[0.89505 0.8737 ]
64/100: weight=tensor([0.6790, 0.7342], device='cuda:0', requires_grad=True) train_loss=[0.3412293  0.37152496], train_acc=[0.8884  0.87635]
66/100: weight=tensor([0.6854, 0.7281], device='cuda:0', requires_grad=True) train_loss=[0.3196463  0.36904156], train_acc=[0.89495 0.87655]
68/100: weight=tensor([0.6377, 0.7703], device='cuda:0', requires_grad=True) train_loss=[0.32216552 0.39296937], train_acc=[0.89555 0.8691 ]
70/100: weight=tensor([0.7042, 0.7100], device='cuda:0', requires_grad=True) train_loss=[0.3214125 0.3649927], train_acc=[0.8939 0.8783]
72/100: weight=tensor([0.6372, 0.7707], device='cuda:0', requires_grad=True) train_loss=[0.33323526 0.37645018], train_acc=[0.8901  0.87375]
74/100: weight=tensor([0.6601, 0.7512], device='cuda:0', requires_grad=True) train_loss=[0.3171104  0.36492667], train_acc=[0.8959 0.8802]
76/100: weight=tensor([0.6827, 0.7307], device='cuda:0', requires_grad=True) train_loss=[0.31405872 0.36253667], train_acc=[0.8963  0.87895]
78/100: weight=tensor([0.7351, 0.6780], device='cuda:0', requires_grad=True) train_loss=[0.3157637  0.35784325], train_acc=[0.89515 0.8816 ]
80/100: weight=tensor([0.7019, 0.7123], device='cuda:0', requires_grad=True) train_loss=[0.3079024  0.36205012], train_acc=[0.8987  0.88145]
82/100: weight=tensor([0.6922, 0.7217], device='cuda:0', requires_grad=True) train_loss=[0.31039172 0.38654914], train_acc=[0.8976  0.87225]
84/100: weight=tensor([0.6694, 0.7429], device='cuda:0', requires_grad=True) train_loss=[0.31225184 0.35631126], train_acc=[0.8962 0.881 ]
86/100: weight=tensor([0.6454, 0.7638], device='cuda:0', requires_grad=True) train_loss=[0.31199178 0.35237998], train_acc=[0.8961 0.883 ]
88/100: weight=tensor([0.6474, 0.7621], device='cuda:0', requires_grad=True) train_loss=[0.3073201 0.3628986], train_acc=[0.89925 0.88065]
90/100: weight=tensor([0.7002, 0.7139], device='cuda:0', requires_grad=True) train_loss=[0.31896222 0.3562041 ], train_acc=[0.8953  0.88155]
92/100: weight=tensor([0.6668, 0.7453], device='cuda:0', requires_grad=True) train_loss=[0.30396307 0.34942624], train_acc=[0.9013  0.88295]
94/100: weight=tensor([0.7315, 0.6819], device='cuda:0', requires_grad=True) train_loss=[0.30923998 0.37383923], train_acc=[0.89865 0.87685]
96/100: weight=tensor([0.6807, 0.7325], device='cuda:0', requires_grad=True) train_loss=[0.3047293  0.36278197], train_acc=[0.8996 0.8776]
98/100: weight=tensor([0.6765, 0.7364], device='cuda:0', requires_grad=True) train_loss=[0.32365954 0.3522021 ], train_acc=[0.8925 0.8851]
100/100: weight=tensor([0.7129, 0.7013], device='cuda:0', requires_grad=True) train_loss=[0.30418566 0.36383802], train_acc=[0.89905 0.87805]
**** Time taken for mnist_4 = 3237.1419570446014
**** Time taken for mnist = 18706.664781570435
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6263, 0.7796], device='cuda:0', requires_grad=True) train_loss=[1.354204  1.4178259], train_acc=[0.49585 0.4841 ]
2/100: weight=tensor([0.6688, 0.7434], device='cuda:0', requires_grad=True) train_loss=[1.118715  1.1518005], train_acc=[0.56935 0.584  ]
4/100: weight=tensor([0.6620, 0.7495], device='cuda:0', requires_grad=True) train_loss=[0.92414045 0.96467894], train_acc=[0.65815 0.6421 ]
6/100: weight=tensor([0.6759, 0.7370], device='cuda:0', requires_grad=True) train_loss=[0.835998  0.8804014], train_acc=[0.674  0.6719]
8/100: weight=tensor([0.7183, 0.6957], device='cuda:0', requires_grad=True) train_loss=[0.77453417 0.8229398 ], train_acc=[0.70905 0.69435]
10/100: weight=tensor([0.7090, 0.7053], device='cuda:0', requires_grad=True) train_loss=[0.76639044 0.7762131 ], train_acc=[0.70865 0.71545]
12/100: weight=tensor([0.7426, 0.6697], device='cuda:0', requires_grad=True) train_loss=[0.73179543 0.7581858 ], train_acc=[0.7245 0.7213]
14/100: weight=tensor([0.6930, 0.7210], device='cuda:0', requires_grad=True) train_loss=[0.7166217  0.75353533], train_acc=[0.72755 0.7203 ]
16/100: weight=tensor([0.7414, 0.6711], device='cuda:0', requires_grad=True) train_loss=[0.6988631  0.72784483], train_acc=[0.73825 0.7329 ]
18/100: weight=tensor([0.7244, 0.6894], device='cuda:0', requires_grad=True) train_loss=[0.68683773 0.7101312 ], train_acc=[0.74315 0.73915]
20/100: weight=tensor([0.6360, 0.7717], device='cuda:0', requires_grad=True) train_loss=[0.66470563 0.69948596], train_acc=[0.75215 0.74   ]
22/100: weight=tensor([0.6623, 0.7493], device='cuda:0', requires_grad=True) train_loss=[0.66805255 0.6929656 ], train_acc=[0.7503 0.7466]
24/100: weight=tensor([0.6672, 0.7449], device='cuda:0', requires_grad=True) train_loss=[0.6474688 0.6717532], train_acc=[0.7588 0.753 ]
26/100: weight=tensor([0.7039, 0.7103], device='cuda:0', requires_grad=True) train_loss=[0.63923234 0.66145265], train_acc=[0.7629 0.7562]
28/100: weight=tensor([0.7381, 0.6747], device='cuda:0', requires_grad=True) train_loss=[0.64550114 0.6754965 ], train_acc=[0.76035 0.7488 ]
30/100: weight=tensor([0.7431, 0.6692], device='cuda:0', requires_grad=True) train_loss=[0.65412134 0.64953256], train_acc=[0.7568 0.7616]
32/100: weight=tensor([0.7327, 0.6805], device='cuda:0', requires_grad=True) train_loss=[0.6145469  0.64325976], train_acc=[0.77235 0.76305]
34/100: weight=tensor([0.7387, 0.6740], device='cuda:0', requires_grad=True) train_loss=[0.60563666 0.63821536], train_acc=[0.77855 0.76105]
36/100: weight=tensor([0.7257, 0.6880], device='cuda:0', requires_grad=True) train_loss=[0.6086206 0.6363421], train_acc=[0.7723  0.77035]
38/100: weight=tensor([0.7004, 0.7137], device='cuda:0', requires_grad=True) train_loss=[0.59802645 0.62782997], train_acc=[0.7826  0.77055]
40/100: weight=tensor([0.7561, 0.6545], device='cuda:0', requires_grad=True) train_loss=[0.5910232 0.6231749], train_acc=[0.7859 0.7665]
42/100: weight=tensor([0.7174, 0.6967], device='cuda:0', requires_grad=True) train_loss=[0.5904363 0.6304324], train_acc=[0.7818  0.77125]
44/100: weight=tensor([0.6907, 0.7231], device='cuda:0', requires_grad=True) train_loss=[0.5838011 0.6053871], train_acc=[0.78345 0.77845]
46/100: weight=tensor([0.6993, 0.7148], device='cuda:0', requires_grad=True) train_loss=[0.5874944 0.6051229], train_acc=[0.7818 0.7782]
48/100: weight=tensor([0.6628, 0.7488], device='cuda:0', requires_grad=True) train_loss=[0.57206273 0.6037719 ], train_acc=[0.7937 0.7777]
50/100: weight=tensor([0.7212, 0.6927], device='cuda:0', requires_grad=True) train_loss=[0.5716506 0.5990723], train_acc=[0.78985 0.7828 ]
52/100: weight=tensor([0.6550, 0.7556], device='cuda:0', requires_grad=True) train_loss=[0.5668674  0.61423576], train_acc=[0.79345 0.76975]
54/100: weight=tensor([0.7140, 0.7001], device='cuda:0', requires_grad=True) train_loss=[0.5675029 0.5982103], train_acc=[0.79035 0.7799 ]
56/100: weight=tensor([0.7305, 0.6829], device='cuda:0', requires_grad=True) train_loss=[0.5577897 0.598246 ], train_acc=[0.79545 0.78115]
58/100: weight=tensor([0.7105, 0.7037], device='cuda:0', requires_grad=True) train_loss=[0.56417936 0.5874193 ], train_acc=[0.7936 0.7874]
60/100: weight=tensor([0.6839, 0.7296], device='cuda:0', requires_grad=True) train_loss=[0.5630178  0.58529603], train_acc=[0.79365 0.78425]
62/100: weight=tensor([0.7255, 0.6883], device='cuda:0', requires_grad=True) train_loss=[0.5627231  0.59377486], train_acc=[0.79365 0.7771 ]
64/100: weight=tensor([0.6901, 0.7238], device='cuda:0', requires_grad=True) train_loss=[0.5502263 0.5789322], train_acc=[0.79665 0.78695]
66/100: weight=tensor([0.7388, 0.6739], device='cuda:0', requires_grad=True) train_loss=[0.55458045 0.58463156], train_acc=[0.7948  0.78585]
68/100: weight=tensor([0.7547, 0.6560], device='cuda:0', requires_grad=True) train_loss=[0.5566996 0.5840434], train_acc=[0.79285 0.78975]
70/100: weight=tensor([0.7142, 0.6999], device='cuda:0', requires_grad=True) train_loss=[0.56662697 0.5715484 ], train_acc=[0.79585 0.79255]
72/100: weight=tensor([0.7421, 0.6703], device='cuda:0', requires_grad=True) train_loss=[0.5437871 0.5736873], train_acc=[0.79915 0.79165]
74/100: weight=tensor([0.7249, 0.6888], device='cuda:0', requires_grad=True) train_loss=[0.5473401 0.5665158], train_acc=[0.80095 0.79195]
76/100: weight=tensor([0.6782, 0.7349], device='cuda:0', requires_grad=True) train_loss=[0.54508555 0.5703042 ], train_acc=[0.7985  0.78965]
78/100: weight=tensor([0.7105, 0.7037], device='cuda:0', requires_grad=True) train_loss=[0.53806806 0.57032555], train_acc=[0.8011 0.7909]
80/100: weight=tensor([0.7437, 0.6685], device='cuda:0', requires_grad=True) train_loss=[0.5391396 0.5688434], train_acc=[0.8041 0.7924]
82/100: weight=tensor([0.7378, 0.6750], device='cuda:0', requires_grad=True) train_loss=[0.5379372 0.5709667], train_acc=[0.80095 0.79305]
84/100: weight=tensor([0.7009, 0.7133], device='cuda:0', requires_grad=True) train_loss=[0.55986917 0.56793946], train_acc=[0.7917  0.79225]
86/100: weight=tensor([0.7547, 0.6561], device='cuda:0', requires_grad=True) train_loss=[0.5436289 0.5650613], train_acc=[0.79895 0.79525]
88/100: weight=tensor([0.6692, 0.7431], device='cuda:0', requires_grad=True) train_loss=[0.5591105  0.55734587], train_acc=[0.7925 0.7976]
90/100: weight=tensor([0.6686, 0.7436], device='cuda:0', requires_grad=True) train_loss=[0.5269752  0.55903196], train_acc=[0.8067  0.79475]
92/100: weight=tensor([0.6870, 0.7266], device='cuda:0', requires_grad=True) train_loss=[0.5346476 0.5572672], train_acc=[0.8035  0.79755]
94/100: weight=tensor([0.7054, 0.7088], device='cuda:0', requires_grad=True) train_loss=[0.5489424 0.5584058], train_acc=[0.7965  0.79565]
96/100: weight=tensor([0.7019, 0.7123], device='cuda:0', requires_grad=True) train_loss=[0.5362798 0.5581415], train_acc=[0.80345 0.7939 ]
98/100: weight=tensor([0.7087, 0.7055], device='cuda:0', requires_grad=True) train_loss=[0.52265316 0.55678606], train_acc=[0.8082 0.796 ]
100/100: weight=tensor([0.6963, 0.7177], device='cuda:0', requires_grad=True) train_loss=[0.53806317 0.56018037], train_acc=[0.8006  0.79435]
**** Time taken for fashion_0 = 3239.679131746292
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7007, 0.7134], device='cuda:0', requires_grad=True) train_loss=[1.3485117 1.4177027], train_acc=[0.50425 0.4648 ]
2/100: weight=tensor([0.6611, 0.7503], device='cuda:0', requires_grad=True) train_loss=[1.0741612 1.1658016], train_acc=[0.6046 0.5637]
4/100: weight=tensor([0.6623, 0.7493], device='cuda:0', requires_grad=True) train_loss=[0.9389167 0.9951014], train_acc=[0.65215 0.63255]
6/100: weight=tensor([0.6927, 0.7212], device='cuda:0', requires_grad=True) train_loss=[0.88741505 0.90353936], train_acc=[0.673  0.6679]
8/100: weight=tensor([0.6416, 0.7670], device='cuda:0', requires_grad=True) train_loss=[0.8083181  0.84123814], train_acc=[0.7051  0.68745]
10/100: weight=tensor([0.7143, 0.6999], device='cuda:0', requires_grad=True) train_loss=[0.78546065 0.8143058 ], train_acc=[0.70705 0.69655]
12/100: weight=tensor([0.6629, 0.7487], device='cuda:0', requires_grad=True) train_loss=[0.763283  0.7590741], train_acc=[0.7197 0.7229]
14/100: weight=tensor([0.6591, 0.7521], device='cuda:0', requires_grad=True) train_loss=[0.73170394 0.73094743], train_acc=[0.7304  0.73105]
16/100: weight=tensor([0.6664, 0.7456], device='cuda:0', requires_grad=True) train_loss=[0.7235176 0.7088108], train_acc=[0.7326 0.7394]
18/100: weight=tensor([0.6386, 0.7695], device='cuda:0', requires_grad=True) train_loss=[0.6936009 0.7027426], train_acc=[0.74785 0.7435 ]
20/100: weight=tensor([0.6735, 0.7392], device='cuda:0', requires_grad=True) train_loss=[0.6772991 0.7020116], train_acc=[0.75265 0.74085]
22/100: weight=tensor([0.6611, 0.7503], device='cuda:0', requires_grad=True) train_loss=[0.66884965 0.6831777 ], train_acc=[0.7557  0.75265]
24/100: weight=tensor([0.6519, 0.7583], device='cuda:0', requires_grad=True) train_loss=[0.65628505 0.6797187 ], train_acc=[0.7582  0.74765]
26/100: weight=tensor([0.6993, 0.7148], device='cuda:0', requires_grad=True) train_loss=[0.6531545 0.6640357], train_acc=[0.75775 0.75705]
28/100: weight=tensor([0.7087, 0.7055], device='cuda:0', requires_grad=True) train_loss=[0.65557736 0.655586  ], train_acc=[0.7633  0.76375]
30/100: weight=tensor([0.6677, 0.7444], device='cuda:0', requires_grad=True) train_loss=[0.6451042 0.6430924], train_acc=[0.7612  0.76565]
32/100: weight=tensor([0.6746, 0.7382], device='cuda:0', requires_grad=True) train_loss=[0.62867427 0.62983704], train_acc=[0.76965 0.7707 ]
34/100: weight=tensor([0.7213, 0.6926], device='cuda:0', requires_grad=True) train_loss=[0.6252667 0.6321382], train_acc=[0.77345 0.7695 ]
36/100: weight=tensor([0.6523, 0.7580], device='cuda:0', requires_grad=True) train_loss=[0.62238246 0.6186632 ], train_acc=[0.7735 0.7754]
38/100: weight=tensor([0.6780, 0.7350], device='cuda:0', requires_grad=True) train_loss=[0.61235994 0.62362283], train_acc=[0.778   0.77385]
40/100: weight=tensor([0.6754, 0.7374], device='cuda:0', requires_grad=True) train_loss=[0.61267704 0.6568367 ], train_acc=[0.7758  0.76055]
42/100: weight=tensor([0.6851, 0.7285], device='cuda:0', requires_grad=True) train_loss=[0.6061721 0.6120024], train_acc=[0.77865 0.77835]
44/100: weight=tensor([0.7162, 0.6979], device='cuda:0', requires_grad=True) train_loss=[0.59827733 0.61508304], train_acc=[0.7822 0.775 ]
46/100: weight=tensor([0.6641, 0.7476], device='cuda:0', requires_grad=True) train_loss=[0.6095263 0.6042578], train_acc=[0.7767  0.78155]
48/100: weight=tensor([0.6671, 0.7450], device='cuda:0', requires_grad=True) train_loss=[0.59518963 0.6125396 ], train_acc=[0.78285 0.77815]
50/100: weight=tensor([0.7018, 0.7124], device='cuda:0', requires_grad=True) train_loss=[0.59365636 0.59838784], train_acc=[0.78635 0.78355]
52/100: weight=tensor([0.7128, 0.7014], device='cuda:0', requires_grad=True) train_loss=[0.5911904 0.5990455], train_acc=[0.7839  0.78375]
54/100: weight=tensor([0.7067, 0.7075], device='cuda:0', requires_grad=True) train_loss=[0.5896855 0.5956654], train_acc=[0.78745 0.7827 ]
56/100: weight=tensor([0.7028, 0.7114], device='cuda:0', requires_grad=True) train_loss=[0.59141845 0.59520274], train_acc=[0.7836 0.7842]
58/100: weight=tensor([0.6538, 0.7567], device='cuda:0', requires_grad=True) train_loss=[0.5802022 0.5894928], train_acc=[0.7883 0.7871]
60/100: weight=tensor([0.6905, 0.7233], device='cuda:0', requires_grad=True) train_loss=[0.58410877 0.59245706], train_acc=[0.78585 0.78565]
62/100: weight=tensor([0.6908, 0.7230], device='cuda:0', requires_grad=True) train_loss=[0.5820906 0.6403211], train_acc=[0.7868  0.75845]
64/100: weight=tensor([0.6852, 0.7283], device='cuda:0', requires_grad=True) train_loss=[0.59272295 0.5947487 ], train_acc=[0.7864  0.78355]
66/100: weight=tensor([0.6838, 0.7297], device='cuda:0', requires_grad=True) train_loss=[0.57596403 0.58115226], train_acc=[0.7899 0.7884]
68/100: weight=tensor([0.6532, 0.7572], device='cuda:0', requires_grad=True) train_loss=[0.58113027 0.58441347], train_acc=[0.78505 0.79115]
70/100: weight=tensor([0.6550, 0.7557], device='cuda:0', requires_grad=True) train_loss=[0.5802046  0.57838315], train_acc=[0.78465 0.79205]
72/100: weight=tensor([0.6720, 0.7405], device='cuda:0', requires_grad=True) train_loss=[0.5819148 0.5787244], train_acc=[0.78685 0.7899 ]
74/100: weight=tensor([0.6762, 0.7367], device='cuda:0', requires_grad=True) train_loss=[0.58357036 0.5932701 ], train_acc=[0.7875 0.7808]
76/100: weight=tensor([0.6498, 0.7601], device='cuda:0', requires_grad=True) train_loss=[0.5759277  0.57251006], train_acc=[0.78875 0.793  ]
78/100: weight=tensor([0.6654, 0.7465], device='cuda:0', requires_grad=True) train_loss=[0.5883123 0.575033 ], train_acc=[0.78355 0.7908 ]
80/100: weight=tensor([0.6997, 0.7144], device='cuda:0', requires_grad=True) train_loss=[0.56187    0.57137495], train_acc=[0.7939 0.7946]
82/100: weight=tensor([0.6907, 0.7231], device='cuda:0', requires_grad=True) train_loss=[0.5698628 0.5764368], train_acc=[0.7895 0.7888]
84/100: weight=tensor([0.6989, 0.7152], device='cuda:0', requires_grad=True) train_loss=[0.5723289 0.5738696], train_acc=[0.79145 0.7929 ]
86/100: weight=tensor([0.7178, 0.6963], device='cuda:0', requires_grad=True) train_loss=[0.56010175 0.56937474], train_acc=[0.7975  0.79415]
88/100: weight=tensor([0.6860, 0.7276], device='cuda:0', requires_grad=True) train_loss=[0.55884194 0.5653076 ], train_acc=[0.79555 0.79445]
90/100: weight=tensor([0.6839, 0.7295], device='cuda:0', requires_grad=True) train_loss=[0.5643631 0.5698293], train_acc=[0.79415 0.79205]
92/100: weight=tensor([0.6245, 0.7810], device='cuda:0', requires_grad=True) train_loss=[0.5541604  0.56065214], train_acc=[0.7958 0.7974]
94/100: weight=tensor([0.6795, 0.7337], device='cuda:0', requires_grad=True) train_loss=[0.55342406 0.5597841 ], train_acc=[0.79675 0.7975 ]
96/100: weight=tensor([0.6732, 0.7394], device='cuda:0', requires_grad=True) train_loss=[0.5585665  0.56112486], train_acc=[0.79595 0.79555]
98/100: weight=tensor([0.6612, 0.7502], device='cuda:0', requires_grad=True) train_loss=[0.5503012  0.56024045], train_acc=[0.7984 0.7969]
100/100: weight=tensor([0.6787, 0.7344], device='cuda:0', requires_grad=True) train_loss=[0.5550208  0.56280804], train_acc=[0.80005 0.79695]
**** Time taken for fashion_1 = 3239.546348810196
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.8080, 0.5892], device='cuda:0', requires_grad=True) train_loss=[1.2522537 1.3945509], train_acc=[0.5396  0.51025]
2/100: weight=tensor([0.7299, 0.6836], device='cuda:0', requires_grad=True) train_loss=[1.0105121 1.0833963], train_acc=[0.6222  0.60945]
4/100: weight=tensor([0.7395, 0.6731], device='cuda:0', requires_grad=True) train_loss=[0.8792371  0.92111874], train_acc=[0.6683 0.6635]
6/100: weight=tensor([0.6820, 0.7314], device='cuda:0', requires_grad=True) train_loss=[0.8255879  0.85931456], train_acc=[0.6878  0.68555]
8/100: weight=tensor([0.6305, 0.7762], device='cuda:0', requires_grad=True) train_loss=[0.80869573 0.79801977], train_acc=[0.6917  0.70435]
10/100: weight=tensor([0.6981, 0.7160], device='cuda:0', requires_grad=True) train_loss=[0.7568125  0.76652896], train_acc=[0.71315 0.71525]
12/100: weight=tensor([0.7084, 0.7058], device='cuda:0', requires_grad=True) train_loss=[0.7279576  0.75263405], train_acc=[0.7248 0.7231]
14/100: weight=tensor([0.6906, 0.7232], device='cuda:0', requires_grad=True) train_loss=[0.74220324 0.757523  ], train_acc=[0.7195  0.71655]
16/100: weight=tensor([0.7113, 0.7029], device='cuda:0', requires_grad=True) train_loss=[0.74818593 0.7156748 ], train_acc=[0.7185 0.7346]
18/100: weight=tensor([0.6933, 0.7206], device='cuda:0', requires_grad=True) train_loss=[0.6951269 0.7008981], train_acc=[0.7378 0.7354]
20/100: weight=tensor([0.6696, 0.7427], device='cuda:0', requires_grad=True) train_loss=[0.68499464 0.6839685 ], train_acc=[0.7411  0.74625]
22/100: weight=tensor([0.6856, 0.7280], device='cuda:0', requires_grad=True) train_loss=[0.67631185 0.6791735 ], train_acc=[0.74335 0.74365]
24/100: weight=tensor([0.6646, 0.7472], device='cuda:0', requires_grad=True) train_loss=[0.67232347 0.67598873], train_acc=[0.746   0.75005]
26/100: weight=tensor([0.6515, 0.7586], device='cuda:0', requires_grad=True) train_loss=[0.65125066 0.6792203 ], train_acc=[0.75535 0.745  ]
28/100: weight=tensor([0.6207, 0.7841], device='cuda:0', requires_grad=True) train_loss=[0.6585408  0.65979487], train_acc=[0.75735 0.75055]
30/100: weight=tensor([0.6448, 0.7644], device='cuda:0', requires_grad=True) train_loss=[0.6421386 0.6438007], train_acc=[0.75975 0.7598 ]
32/100: weight=tensor([0.6892, 0.7245], device='cuda:0', requires_grad=True) train_loss=[0.6396811 0.6486156], train_acc=[0.75975 0.75645]
34/100: weight=tensor([0.6681, 0.7441], device='cuda:0', requires_grad=True) train_loss=[0.6347897 0.6338272], train_acc=[0.7621  0.76675]
36/100: weight=tensor([0.6543, 0.7562], device='cuda:0', requires_grad=True) train_loss=[0.6290749 0.6472855], train_acc=[0.76365 0.75945]
38/100: weight=tensor([0.6580, 0.7530], device='cuda:0', requires_grad=True) train_loss=[0.61510766 0.6222956 ], train_acc=[0.76875 0.7684 ]
40/100: weight=tensor([0.6826, 0.7308], device='cuda:0', requires_grad=True) train_loss=[0.62470084 0.6229609 ], train_acc=[0.7675 0.7661]
42/100: weight=tensor([0.6370, 0.7708], device='cuda:0', requires_grad=True) train_loss=[0.6106558 0.6275784], train_acc=[0.7707  0.76985]
44/100: weight=tensor([0.6625, 0.7491], device='cuda:0', requires_grad=True) train_loss=[0.61468434 0.61914206], train_acc=[0.7723 0.7725]
46/100: weight=tensor([0.6963, 0.7177], device='cuda:0', requires_grad=True) train_loss=[0.6083859 0.604457 ], train_acc=[0.77215 0.7773 ]
48/100: weight=tensor([0.6676, 0.7445], device='cuda:0', requires_grad=True) train_loss=[0.618812  0.6329002], train_acc=[0.76985 0.7694 ]
50/100: weight=tensor([0.6720, 0.7406], device='cuda:0', requires_grad=True) train_loss=[0.59365463 0.6134744 ], train_acc=[0.7768  0.76905]
52/100: weight=tensor([0.6409, 0.7676], device='cuda:0', requires_grad=True) train_loss=[0.5929397  0.59544677], train_acc=[0.78125 0.77915]
54/100: weight=tensor([0.6657, 0.7462], device='cuda:0', requires_grad=True) train_loss=[0.59143597 0.5936945 ], train_acc=[0.77835 0.78165]
56/100: weight=tensor([0.6902, 0.7237], device='cuda:0', requires_grad=True) train_loss=[0.5950294  0.60684294], train_acc=[0.77845 0.77395]
58/100: weight=tensor([0.6625, 0.7491], device='cuda:0', requires_grad=True) train_loss=[0.59154314 0.5992778 ], train_acc=[0.7796 0.7741]
60/100: weight=tensor([0.6446, 0.7645], device='cuda:0', requires_grad=True) train_loss=[0.5880841 0.5881322], train_acc=[0.78    0.78435]
62/100: weight=tensor([0.6909, 0.7230], device='cuda:0', requires_grad=True) train_loss=[0.58067346 0.58986163], train_acc=[0.784   0.78015]
64/100: weight=tensor([0.6158, 0.7879], device='cuda:0', requires_grad=True) train_loss=[0.5948865  0.59119225], train_acc=[0.78065 0.7801 ]
66/100: weight=tensor([0.6899, 0.7239], device='cuda:0', requires_grad=True) train_loss=[0.5869503 0.5932004], train_acc=[0.78255 0.782  ]
68/100: weight=tensor([0.6355, 0.7721], device='cuda:0', requires_grad=True) train_loss=[0.5856499 0.587535 ], train_acc=[0.7836  0.78445]
70/100: weight=tensor([0.5998, 0.8001], device='cuda:0', requires_grad=True) train_loss=[0.5813947 0.5774388], train_acc=[0.78195 0.78715]
72/100: weight=tensor([0.6683, 0.7439], device='cuda:0', requires_grad=True) train_loss=[0.57282394 0.577809  ], train_acc=[0.78575 0.78895]
74/100: weight=tensor([0.6783, 0.7348], device='cuda:0', requires_grad=True) train_loss=[0.5760166  0.57565325], train_acc=[0.78685 0.79035]
76/100: weight=tensor([0.6458, 0.7635], device='cuda:0', requires_grad=True) train_loss=[0.566071   0.57802826], train_acc=[0.78885 0.7857 ]
78/100: weight=tensor([0.6893, 0.7245], device='cuda:0', requires_grad=True) train_loss=[0.5725093 0.5697925], train_acc=[0.79035 0.7923 ]
80/100: weight=tensor([0.6526, 0.7577], device='cuda:0', requires_grad=True) train_loss=[0.5594889 0.569169 ], train_acc=[0.79325 0.7901 ]
82/100: weight=tensor([0.6318, 0.7751], device='cuda:0', requires_grad=True) train_loss=[0.56385636 0.5840963 ], train_acc=[0.79125 0.78425]
84/100: weight=tensor([0.6625, 0.7490], device='cuda:0', requires_grad=True) train_loss=[0.5777189  0.57214373], train_acc=[0.78525 0.79115]
86/100: weight=tensor([0.6408, 0.7677], device='cuda:0', requires_grad=True) train_loss=[0.5721382  0.56747067], train_acc=[0.7867  0.79075]
88/100: weight=tensor([0.6641, 0.7476], device='cuda:0', requires_grad=True) train_loss=[0.5607326 0.5654739], train_acc=[0.7908 0.7913]
90/100: weight=tensor([0.6493, 0.7606], device='cuda:0', requires_grad=True) train_loss=[0.5562306 0.5641341], train_acc=[0.7933  0.79495]
92/100: weight=tensor([0.6737, 0.7390], device='cuda:0', requires_grad=True) train_loss=[0.5714083  0.56165814], train_acc=[0.7899  0.79665]
94/100: weight=tensor([0.6237, 0.7817], device='cuda:0', requires_grad=True) train_loss=[0.57028085 0.58256286], train_acc=[0.7898 0.7862]
96/100: weight=tensor([0.6533, 0.7571], device='cuda:0', requires_grad=True) train_loss=[0.5561311 0.5658177], train_acc=[0.7946 0.7883]
98/100: weight=tensor([0.6296, 0.7769], device='cuda:0', requires_grad=True) train_loss=[0.562814  0.5780328], train_acc=[0.79255 0.7867 ]
100/100: weight=tensor([0.6528, 0.7575], device='cuda:0', requires_grad=True) train_loss=[0.54985446 0.55772173], train_acc=[0.79545 0.7947 ]
**** Time taken for fashion_2 = 3240.409909725189
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6787, 0.7345], device='cuda:0', requires_grad=True) train_loss=[1.482495  1.4475292], train_acc=[0.4699  0.45985]
2/100: weight=tensor([0.7267, 0.6870], device='cuda:0', requires_grad=True) train_loss=[1.113469  1.1917703], train_acc=[0.5807  0.56385]
4/100: weight=tensor([0.6018, 0.7986], device='cuda:0', requires_grad=True) train_loss=[0.9612926 1.0076131], train_acc=[0.6317 0.6326]
6/100: weight=tensor([0.6019, 0.7986], device='cuda:0', requires_grad=True) train_loss=[0.88059133 0.90105265], train_acc=[0.6675  0.67095]
8/100: weight=tensor([0.6375, 0.7705], device='cuda:0', requires_grad=True) train_loss=[0.8308216 0.8389989], train_acc=[0.68605 0.6878 ]
10/100: weight=tensor([0.6751, 0.7377], device='cuda:0', requires_grad=True) train_loss=[0.7932251  0.81284606], train_acc=[0.7012  0.69885]
12/100: weight=tensor([0.5932, 0.8051], device='cuda:0', requires_grad=True) train_loss=[0.8082745  0.80675554], train_acc=[0.6922 0.699 ]
14/100: weight=tensor([0.6228, 0.7824], device='cuda:0', requires_grad=True) train_loss=[0.8368352  0.76881385], train_acc=[0.67945 0.7141 ]
16/100: weight=tensor([0.5753, 0.8179], device='cuda:0', requires_grad=True) train_loss=[0.7539439  0.78437483], train_acc=[0.71395 0.7093 ]
18/100: weight=tensor([0.5660, 0.8244], device='cuda:0', requires_grad=True) train_loss=[0.7225569 0.7371307], train_acc=[0.7284  0.72165]
20/100: weight=tensor([0.5622, 0.8270], device='cuda:0', requires_grad=True) train_loss=[0.7279947  0.72282934], train_acc=[0.7277  0.72865]
22/100: weight=tensor([0.6257, 0.7801], device='cuda:0', requires_grad=True) train_loss=[0.70309216 0.70768636], train_acc=[0.7349 0.7355]
24/100: weight=tensor([0.6679, 0.7443], device='cuda:0', requires_grad=True) train_loss=[0.69238913 0.7108692 ], train_acc=[0.7424  0.73355]
26/100: weight=tensor([0.5974, 0.8020], device='cuda:0', requires_grad=True) train_loss=[0.68812555 0.696428  ], train_acc=[0.74105 0.74315]
28/100: weight=tensor([0.6170, 0.7869], device='cuda:0', requires_grad=True) train_loss=[0.690172 0.72002 ], train_acc=[0.74145 0.73695]
30/100: weight=tensor([0.6429, 0.7660], device='cuda:0', requires_grad=True) train_loss=[0.66923   0.6758219], train_acc=[0.7473 0.7503]
32/100: weight=tensor([0.6409, 0.7676], device='cuda:0', requires_grad=True) train_loss=[0.67343265 0.66654444], train_acc=[0.7487 0.7527]
34/100: weight=tensor([0.5797, 0.8148], device='cuda:0', requires_grad=True) train_loss=[0.6695049  0.67322236], train_acc=[0.7481  0.74595]
36/100: weight=tensor([0.5812, 0.8138], device='cuda:0', requires_grad=True) train_loss=[0.66599804 0.66295594], train_acc=[0.7519 0.7526]
38/100: weight=tensor([0.6019, 0.7986], device='cuda:0', requires_grad=True) train_loss=[0.67353773 0.6812823 ], train_acc=[0.7435 0.7438]
40/100: weight=tensor([0.6165, 0.7874], device='cuda:0', requires_grad=True) train_loss=[0.6526036  0.65612686], train_acc=[0.755  0.7511]
42/100: weight=tensor([0.6670, 0.7451], device='cuda:0', requires_grad=True) train_loss=[0.6464376 0.6353066], train_acc=[0.7582 0.7623]
44/100: weight=tensor([0.6191, 0.7853], device='cuda:0', requires_grad=True) train_loss=[0.63392925 0.63114744], train_acc=[0.7642 0.7669]
46/100: weight=tensor([0.5930, 0.8052], device='cuda:0', requires_grad=True) train_loss=[0.6559832  0.65422285], train_acc=[0.75635 0.7555 ]
48/100: weight=tensor([0.6207, 0.7840], device='cuda:0', requires_grad=True) train_loss=[0.6353153 0.6295504], train_acc=[0.76525 0.7678 ]
50/100: weight=tensor([0.6022, 0.7984], device='cuda:0', requires_grad=True) train_loss=[0.6199543  0.62644583], train_acc=[0.76995 0.76945]
52/100: weight=tensor([0.6541, 0.7564], device='cuda:0', requires_grad=True) train_loss=[0.6266729 0.6303049], train_acc=[0.76485 0.7685 ]
54/100: weight=tensor([0.5669, 0.8238], device='cuda:0', requires_grad=True) train_loss=[0.62424755 0.61830264], train_acc=[0.76795 0.77485]
56/100: weight=tensor([0.6066, 0.7950], device='cuda:0', requires_grad=True) train_loss=[0.6209583 0.6287566], train_acc=[0.76955 0.76415]
58/100: weight=tensor([0.5775, 0.8164], device='cuda:0', requires_grad=True) train_loss=[0.6156604  0.61070234], train_acc=[0.7699 0.7757]
60/100: weight=tensor([0.6291, 0.7774], device='cuda:0', requires_grad=True) train_loss=[0.60975724 0.61280924], train_acc=[0.7725  0.77485]
62/100: weight=tensor([0.6368, 0.7710], device='cuda:0', requires_grad=True) train_loss=[0.62148386 0.61222243], train_acc=[0.76905 0.77545]
64/100: weight=tensor([0.5940, 0.8044], device='cuda:0', requires_grad=True) train_loss=[0.60710156 0.61448836], train_acc=[0.77495 0.7724 ]
66/100: weight=tensor([0.6111, 0.7916], device='cuda:0', requires_grad=True) train_loss=[0.60443467 0.6070349 ], train_acc=[0.77735 0.7761 ]
68/100: weight=tensor([0.6439, 0.7651], device='cuda:0', requires_grad=True) train_loss=[0.6071322  0.60996616], train_acc=[0.776   0.77735]
70/100: weight=tensor([0.5929, 0.8052], device='cuda:0', requires_grad=True) train_loss=[0.60122675 0.61422634], train_acc=[0.77725 0.769  ]
72/100: weight=tensor([0.6313, 0.7755], device='cuda:0', requires_grad=True) train_loss=[0.5989841 0.6022292], train_acc=[0.7778  0.77905]
74/100: weight=tensor([0.6329, 0.7742], device='cuda:0', requires_grad=True) train_loss=[0.6009348 0.6055041], train_acc=[0.7763  0.77625]
76/100: weight=tensor([0.5889, 0.8082], device='cuda:0', requires_grad=True) train_loss=[0.5947189  0.59880203], train_acc=[0.77935 0.77965]
78/100: weight=tensor([0.6324, 0.7747], device='cuda:0', requires_grad=True) train_loss=[0.6196688 0.6089955], train_acc=[0.7696  0.77285]
80/100: weight=tensor([0.6394, 0.7689], device='cuda:0', requires_grad=True) train_loss=[0.59551185 0.5871149 ], train_acc=[0.78015 0.7837 ]
82/100: weight=tensor([0.6098, 0.7925], device='cuda:0', requires_grad=True) train_loss=[0.5946588 0.6025159], train_acc=[0.7808 0.7742]
84/100: weight=tensor([0.6241, 0.7813], device='cuda:0', requires_grad=True) train_loss=[0.6014723  0.60305566], train_acc=[0.77945 0.77885]
86/100: weight=tensor([0.6352, 0.7723], device='cuda:0', requires_grad=True) train_loss=[0.59302694 0.607108  ], train_acc=[0.7809 0.777 ]
88/100: weight=tensor([0.6339, 0.7734], device='cuda:0', requires_grad=True) train_loss=[0.5863728 0.583669 ], train_acc=[0.7833 0.7817]
90/100: weight=tensor([0.6124, 0.7905], device='cuda:0', requires_grad=True) train_loss=[0.5878585 0.5917236], train_acc=[0.78505 0.78195]
92/100: weight=tensor([0.6496, 0.7603], device='cuda:0', requires_grad=True) train_loss=[0.5854335 0.6100972], train_acc=[0.7848  0.77545]
94/100: weight=tensor([0.6345, 0.7729], device='cuda:0', requires_grad=True) train_loss=[0.5944257 0.597393 ], train_acc=[0.7777  0.78195]
96/100: weight=tensor([0.6176, 0.7865], device='cuda:0', requires_grad=True) train_loss=[0.58653295 0.5806453 ], train_acc=[0.78325 0.78725]
98/100: weight=tensor([0.6327, 0.7744], device='cuda:0', requires_grad=True) train_loss=[0.5829764  0.57511103], train_acc=[0.7845  0.78885]
100/100: weight=tensor([0.6063, 0.7952], device='cuda:0', requires_grad=True) train_loss=[0.6108833  0.57896817], train_acc=[0.77   0.7865]
**** Time taken for fashion_3 = 3022.209960460663
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7398, 0.6728], device='cuda:0', requires_grad=True) train_loss=[1.2005361 1.2738712], train_acc=[0.551  0.5357]
2/100: weight=tensor([0.7231, 0.6908], device='cuda:0', requires_grad=True) train_loss=[1.0070778 1.0673838], train_acc=[0.62445 0.60965]
4/100: weight=tensor([0.7300, 0.6834], device='cuda:0', requires_grad=True) train_loss=[0.92868334 0.93575335], train_acc=[0.6593  0.65335]
6/100: weight=tensor([0.7943, 0.6075], device='cuda:0', requires_grad=True) train_loss=[0.8158814 0.8704282], train_acc=[0.6954  0.68055]
8/100: weight=tensor([0.7600, 0.6499], device='cuda:0', requires_grad=True) train_loss=[0.78084314 0.835055  ], train_acc=[0.7072  0.68905]
10/100: weight=tensor([0.7805, 0.6251], device='cuda:0', requires_grad=True) train_loss=[0.7244273 0.7792623], train_acc=[0.7305  0.70575]
12/100: weight=tensor([0.7678, 0.6407], device='cuda:0', requires_grad=True) train_loss=[0.7174987 0.7756517], train_acc=[0.7356 0.7177]
14/100: weight=tensor([0.7211, 0.6928], device='cuda:0', requires_grad=True) train_loss=[0.7172441 0.7428255], train_acc=[0.73375 0.7282 ]
16/100: weight=tensor([0.7768, 0.6298], device='cuda:0', requires_grad=True) train_loss=[0.6806772 0.7366886], train_acc=[0.7468 0.7244]
18/100: weight=tensor([0.8160, 0.5781], device='cuda:0', requires_grad=True) train_loss=[0.6693981 0.7204456], train_acc=[0.75155 0.73675]
20/100: weight=tensor([0.7307, 0.6827], device='cuda:0', requires_grad=True) train_loss=[0.6546956 0.7080025], train_acc=[0.7565  0.74195]
22/100: weight=tensor([0.7566, 0.6539], device='cuda:0', requires_grad=True) train_loss=[0.6498767 0.7014849], train_acc=[0.7552  0.74305]
24/100: weight=tensor([0.7372, 0.6757], device='cuda:0', requires_grad=True) train_loss=[0.6539408 0.7169164], train_acc=[0.75505 0.727  ]
26/100: weight=tensor([0.7524, 0.6587], device='cuda:0', requires_grad=True) train_loss=[0.65102905 0.6938886 ], train_acc=[0.75925 0.7523 ]
28/100: weight=tensor([0.7263, 0.6874], device='cuda:0', requires_grad=True) train_loss=[0.6216644 0.6763546], train_acc=[0.76855 0.7554 ]
30/100: weight=tensor([0.7590, 0.6510], device='cuda:0', requires_grad=True) train_loss=[0.61458725 0.6693738 ], train_acc=[0.7703 0.7561]
32/100: weight=tensor([0.7637, 0.6455], device='cuda:0', requires_grad=True) train_loss=[0.6531562 0.6710484], train_acc=[0.7545  0.75255]
34/100: weight=tensor([0.7384, 0.6744], device='cuda:0', requires_grad=True) train_loss=[0.6111369 0.6600865], train_acc=[0.7715 0.7576]
36/100: weight=tensor([0.7629, 0.6466], device='cuda:0', requires_grad=True) train_loss=[0.6062658  0.65311265], train_acc=[0.7744  0.76335]
38/100: weight=tensor([0.7841, 0.6207], device='cuda:0', requires_grad=True) train_loss=[0.61226577 0.6631452 ], train_acc=[0.7723 0.753 ]
40/100: weight=tensor([0.7518, 0.6594], device='cuda:0', requires_grad=True) train_loss=[0.60410637 0.64370006], train_acc=[0.7771  0.76715]
42/100: weight=tensor([0.7324, 0.6808], device='cuda:0', requires_grad=True) train_loss=[0.59956175 0.6465203 ], train_acc=[0.7803 0.7671]
44/100: weight=tensor([0.7479, 0.6638], device='cuda:0', requires_grad=True) train_loss=[0.58854336 0.6532409 ], train_acc=[0.782  0.7616]
46/100: weight=tensor([0.7647, 0.6444], device='cuda:0', requires_grad=True) train_loss=[0.58733934 0.6420333 ], train_acc=[0.78115 0.76695]
48/100: weight=tensor([0.7754, 0.6315], device='cuda:0', requires_grad=True) train_loss=[0.5975441 0.6306788], train_acc=[0.77975 0.76765]
50/100: weight=tensor([0.7641, 0.6451], device='cuda:0', requires_grad=True) train_loss=[0.5998667 0.644556 ], train_acc=[0.77765 0.76085]
52/100: weight=tensor([0.7569, 0.6535], device='cuda:0', requires_grad=True) train_loss=[0.5802294  0.62811154], train_acc=[0.78405 0.76945]
54/100: weight=tensor([0.7617, 0.6479], device='cuda:0', requires_grad=True) train_loss=[0.5756677  0.61815524], train_acc=[0.786   0.77545]
56/100: weight=tensor([0.7467, 0.6651], device='cuda:0', requires_grad=True) train_loss=[0.5916751  0.61839634], train_acc=[0.77965 0.7761 ]
58/100: weight=tensor([0.7337, 0.6795], device='cuda:0', requires_grad=True) train_loss=[0.5764438 0.6270054], train_acc=[0.784   0.76535]
60/100: weight=tensor([0.7734, 0.6339], device='cuda:0', requires_grad=True) train_loss=[0.58197916 0.62477154], train_acc=[0.7819 0.7738]
62/100: weight=tensor([0.7769, 0.6297], device='cuda:0', requires_grad=True) train_loss=[0.5770227 0.6102011], train_acc=[0.78385 0.7778 ]
64/100: weight=tensor([0.7059, 0.7083], device='cuda:0', requires_grad=True) train_loss=[0.5720988 0.614329 ], train_acc=[0.78485 0.77485]
66/100: weight=tensor([0.7192, 0.6948], device='cuda:0', requires_grad=True) train_loss=[0.57121724 0.61193043], train_acc=[0.78715 0.77605]
68/100: weight=tensor([0.7410, 0.6715], device='cuda:0', requires_grad=True) train_loss=[0.56740564 0.60918903], train_acc=[0.7905  0.77755]
70/100: weight=tensor([0.7729, 0.6345], device='cuda:0', requires_grad=True) train_loss=[0.5852918  0.61821526], train_acc=[0.78135 0.7712 ]
72/100: weight=tensor([0.7387, 0.6741], device='cuda:0', requires_grad=True) train_loss=[0.5614201 0.6065577], train_acc=[0.7936  0.78115]
74/100: weight=tensor([0.7485, 0.6631], device='cuda:0', requires_grad=True) train_loss=[0.55545145 0.6039905 ], train_acc=[0.79305 0.77955]
76/100: weight=tensor([0.7778, 0.6286], device='cuda:0', requires_grad=True) train_loss=[0.56840295 0.6097184 ], train_acc=[0.7864  0.77995]
78/100: weight=tensor([0.7415, 0.6709], device='cuda:0', requires_grad=True) train_loss=[0.5630828  0.61101884], train_acc=[0.7949  0.77795]
80/100: weight=tensor([0.7514, 0.6599], device='cuda:0', requires_grad=True) train_loss=[0.55790067 0.59955573], train_acc=[0.792  0.7826]
82/100: weight=tensor([0.7702, 0.6379], device='cuda:0', requires_grad=True) train_loss=[0.56103987 0.59348524], train_acc=[0.7902 0.7833]
84/100: weight=tensor([0.7263, 0.6874], device='cuda:0', requires_grad=True) train_loss=[0.5624838 0.5984553], train_acc=[0.79045 0.77955]
86/100: weight=tensor([0.7481, 0.6636], device='cuda:0', requires_grad=True) train_loss=[0.571102  0.5906607], train_acc=[0.78685 0.78505]
88/100: weight=tensor([0.7784, 0.6278], device='cuda:0', requires_grad=True) train_loss=[0.56397605 0.59563214], train_acc=[0.7905  0.78225]
90/100: weight=tensor([0.7942, 0.6076], device='cuda:0', requires_grad=True) train_loss=[0.5588612 0.5921201], train_acc=[0.79175 0.78505]
92/100: weight=tensor([0.7499, 0.6616], device='cuda:0', requires_grad=True) train_loss=[0.55658555 0.59583634], train_acc=[0.7969  0.78165]
94/100: weight=tensor([0.7241, 0.6897], device='cuda:0', requires_grad=True) train_loss=[0.5484604 0.5904643], train_acc=[0.7973  0.78615]
96/100: weight=tensor([0.6919, 0.7220], device='cuda:0', requires_grad=True) train_loss=[0.5547168 0.6019589], train_acc=[0.794  0.7817]
98/100: weight=tensor([0.7630, 0.6464], device='cuda:0', requires_grad=True) train_loss=[0.5574122 0.5805641], train_acc=[0.7901  0.78895]
100/100: weight=tensor([0.7440, 0.6681], device='cuda:0', requires_grad=True) train_loss=[0.54569983 0.58402663], train_acc=[0.79555 0.78955]
**** Time taken for fashion_4 = 2861.4790081977844
**** Time taken for fashion = 15603.375761270523
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.5957, 0.8032], device='cuda:0', requires_grad=True) train_loss=[1.6120702 1.1388099], train_acc=[0.4544  0.57825]
2/100: weight=tensor([0.6810, 0.7323], device='cuda:0', requires_grad=True) train_loss=[1.1842731 0.948083 ], train_acc=[0.60545 0.6489 ]
4/100: weight=tensor([0.6455, 0.7637], device='cuda:0', requires_grad=True) train_loss=[0.8168665  0.80580276], train_acc=[0.7274 0.7003]
6/100: weight=tensor([0.6250, 0.7806], device='cuda:0', requires_grad=True) train_loss=[0.67535424 0.7249707 ], train_acc=[0.7798  0.73355]
8/100: weight=tensor([0.5800, 0.8146], device='cuda:0', requires_grad=True) train_loss=[0.6106668 0.6828299], train_acc=[0.79915 0.7462 ]
10/100: weight=tensor([0.6352, 0.7723], device='cuda:0', requires_grad=True) train_loss=[0.55634326 0.6641159 ], train_acc=[0.81785 0.75265]
12/100: weight=tensor([0.5966, 0.8025], device='cuda:0', requires_grad=True) train_loss=[0.5152577 0.6320625], train_acc=[0.83365 0.7632 ]
14/100: weight=tensor([0.6500, 0.7599], device='cuda:0', requires_grad=True) train_loss=[0.496573   0.63372034], train_acc=[0.8368 0.7632]
16/100: weight=tensor([0.6534, 0.7570], device='cuda:0', requires_grad=True) train_loss=[0.46212375 0.6100555 ], train_acc=[0.8494 0.7707]
18/100: weight=tensor([0.6228, 0.7824], device='cuda:0', requires_grad=True) train_loss=[0.44078514 0.6123372 ], train_acc=[0.8585  0.76695]
20/100: weight=tensor([0.5499, 0.8352], device='cuda:0', requires_grad=True) train_loss=[0.46763158 0.58967   ], train_acc=[0.84815 0.7826 ]
22/100: weight=tensor([0.6103, 0.7922], device='cuda:0', requires_grad=True) train_loss=[0.41472444 0.5984055 ], train_acc=[0.86535 0.777  ]
24/100: weight=tensor([0.6091, 0.7931], device='cuda:0', requires_grad=True) train_loss=[0.40372863 0.59486234], train_acc=[0.8683  0.77245]
26/100: weight=tensor([0.5756, 0.8178], device='cuda:0', requires_grad=True) train_loss=[0.3929261 0.5650502], train_acc=[0.87285 0.79075]
28/100: weight=tensor([0.6666, 0.7454], device='cuda:0', requires_grad=True) train_loss=[0.38277707 0.56745654], train_acc=[0.87705 0.7873 ]
30/100: weight=tensor([0.6390, 0.7692], device='cuda:0', requires_grad=True) train_loss=[0.37159026 0.56674904], train_acc=[0.8807 0.7876]
32/100: weight=tensor([0.6437, 0.7653], device='cuda:0', requires_grad=True) train_loss=[0.35968485 0.5547702 ], train_acc=[0.88505 0.79575]
34/100: weight=tensor([0.6380, 0.7700], device='cuda:0', requires_grad=True) train_loss=[0.35060492 0.552096  ], train_acc=[0.88615 0.79435]
36/100: weight=tensor([0.6123, 0.7906], device='cuda:0', requires_grad=True) train_loss=[0.35846823 0.5433133 ], train_acc=[0.88305 0.79835]
38/100: weight=tensor([0.6427, 0.7661], device='cuda:0', requires_grad=True) train_loss=[0.3335421 0.5465133], train_acc=[0.89335 0.7962 ]
40/100: weight=tensor([0.5782, 0.8159], device='cuda:0', requires_grad=True) train_loss=[0.32822135 0.53204   ], train_acc=[0.89545 0.8021 ]
42/100: weight=tensor([0.6534, 0.7570], device='cuda:0', requires_grad=True) train_loss=[0.32794008 0.548182  ], train_acc=[0.8943  0.79365]
44/100: weight=tensor([0.6091, 0.7931], device='cuda:0', requires_grad=True) train_loss=[0.3167546  0.53360856], train_acc=[0.8981  0.79975]
46/100: weight=tensor([0.6393, 0.7690], device='cuda:0', requires_grad=True) train_loss=[0.3216287 0.5290211], train_acc=[0.8958  0.80365]
48/100: weight=tensor([0.6878, 0.7259], device='cuda:0', requires_grad=True) train_loss=[0.3073909 0.5479527], train_acc=[0.902  0.7908]
50/100: weight=tensor([0.6895, 0.7243], device='cuda:0', requires_grad=True) train_loss=[0.3054458  0.52461237], train_acc=[0.9018 0.8061]
52/100: weight=tensor([0.6832, 0.7302], device='cuda:0', requires_grad=True) train_loss=[0.305406 0.517543], train_acc=[0.9008 0.8069]
54/100: weight=tensor([0.6363, 0.7715], device='cuda:0', requires_grad=True) train_loss=[0.29771578 0.5182313 ], train_acc=[0.905   0.80425]
56/100: weight=tensor([0.6812, 0.7321], device='cuda:0', requires_grad=True) train_loss=[0.29677966 0.5110381 ], train_acc=[0.9056 0.8091]
58/100: weight=tensor([0.6202, 0.7845], device='cuda:0', requires_grad=True) train_loss=[0.28886127 0.5289357 ], train_acc=[0.90845 0.79865]
60/100: weight=tensor([0.6380, 0.7700], device='cuda:0', requires_grad=True) train_loss=[0.29256845 0.51473045], train_acc=[0.90495 0.8057 ]
62/100: weight=tensor([0.7159, 0.6982], device='cuda:0', requires_grad=True) train_loss=[0.28499478 0.50678426], train_acc=[0.9098  0.81025]
64/100: weight=tensor([0.6807, 0.7325], device='cuda:0', requires_grad=True) train_loss=[0.27744216 0.5063043 ], train_acc=[0.91085 0.8139 ]
66/100: weight=tensor([0.6821, 0.7313], device='cuda:0', requires_grad=True) train_loss=[0.27904898 0.5004898 ], train_acc=[0.91025 0.8143 ]
68/100: weight=tensor([0.7089, 0.7053], device='cuda:0', requires_grad=True) train_loss=[0.29573557 0.5026106 ], train_acc=[0.90385 0.8133 ]
70/100: weight=tensor([0.6784, 0.7347], device='cuda:0', requires_grad=True) train_loss=[0.28082052 0.49597016], train_acc=[0.9105 0.8164]
72/100: weight=tensor([0.6624, 0.7491], device='cuda:0', requires_grad=True) train_loss=[0.2727608 0.5039102], train_acc=[0.914  0.8121]
74/100: weight=tensor([0.6524, 0.7579], device='cuda:0', requires_grad=True) train_loss=[0.27062362 0.49823478], train_acc=[0.9121  0.81365]
76/100: weight=tensor([0.7304, 0.6830], device='cuda:0', requires_grad=True) train_loss=[0.2625713 0.5012766], train_acc=[0.916   0.81385]
78/100: weight=tensor([0.6988, 0.7154], device='cuda:0', requires_grad=True) train_loss=[0.26593497 0.4963216 ], train_acc=[0.91415 0.8157 ]
80/100: weight=tensor([0.7143, 0.6998], device='cuda:0', requires_grad=True) train_loss=[0.2594058  0.50234175], train_acc=[0.91695 0.81355]
82/100: weight=tensor([0.7278, 0.6858], device='cuda:0', requires_grad=True) train_loss=[0.2617863  0.48885298], train_acc=[0.9171 0.8189]
84/100: weight=tensor([0.6650, 0.7469], device='cuda:0', requires_grad=True) train_loss=[0.26794425 0.48979315], train_acc=[0.9137  0.81725]
86/100: weight=tensor([0.6588, 0.7523], device='cuda:0', requires_grad=True) train_loss=[0.27355534 0.49649888], train_acc=[0.91415 0.8171 ]
88/100: weight=tensor([0.6958, 0.7182], device='cuda:0', requires_grad=True) train_loss=[0.2616526  0.49600095], train_acc=[0.9173 0.8161]
90/100: weight=tensor([0.7410, 0.6715], device='cuda:0', requires_grad=True) train_loss=[0.29321975 0.48601133], train_acc=[0.905   0.82005]
92/100: weight=tensor([0.7352, 0.6779], device='cuda:0', requires_grad=True) train_loss=[0.2609591  0.48152336], train_acc=[0.91755 0.82075]
94/100: weight=tensor([0.7090, 0.7052], device='cuda:0', requires_grad=True) train_loss=[0.25191393 0.47998455], train_acc=[0.91925 0.8227 ]
96/100: weight=tensor([0.6732, 0.7394], device='cuda:0', requires_grad=True) train_loss=[0.24816632 0.48267993], train_acc=[0.92105 0.8213 ]
98/100: weight=tensor([0.6939, 0.7201], device='cuda:0', requires_grad=True) train_loss=[0.2521273 0.4870753], train_acc=[0.9201 0.8194]
100/100: weight=tensor([0.6802, 0.7331], device='cuda:0', requires_grad=True) train_loss=[0.24541204 0.4733682 ], train_acc=[0.9217  0.82415]
**** Time taken for fashion_and_mnist_0 = 2842.002498626709
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6927, 0.7212], device='cuda:0', requires_grad=True) train_loss=[1.3318123 1.0693113], train_acc=[0.53615 0.6142 ]
2/100: weight=tensor([0.6940, 0.7200], device='cuda:0', requires_grad=True) train_loss=[0.9790577 0.8816302], train_acc=[0.6745  0.68505]
4/100: weight=tensor([0.6527, 0.7576], device='cuda:0', requires_grad=True) train_loss=[0.75745356 0.8415542 ], train_acc=[0.7463 0.678 ]
6/100: weight=tensor([0.6509, 0.7591], device='cuda:0', requires_grad=True) train_loss=[0.63327944 0.7221949 ], train_acc=[0.78985 0.7348 ]
8/100: weight=tensor([0.5794, 0.8150], device='cuda:0', requires_grad=True) train_loss=[0.57339436 0.69345015], train_acc=[0.815  0.7481]
10/100: weight=tensor([0.6470, 0.7625], device='cuda:0', requires_grad=True) train_loss=[0.51986545 0.6653982 ], train_acc=[0.8308 0.7483]
12/100: weight=tensor([0.6211, 0.7837], device='cuda:0', requires_grad=True) train_loss=[0.47989964 0.6737213 ], train_acc=[0.84775 0.74925]
14/100: weight=tensor([0.6071, 0.7946], device='cuda:0', requires_grad=True) train_loss=[0.4831026 0.6384208], train_acc=[0.84315 0.76675]
16/100: weight=tensor([0.6990, 0.7151], device='cuda:0', requires_grad=True) train_loss=[0.43028656 0.61692554], train_acc=[0.8622  0.77235]
18/100: weight=tensor([0.5429, 0.8398], device='cuda:0', requires_grad=True) train_loss=[0.42596456 0.62580025], train_acc=[0.8622 0.7604]
20/100: weight=tensor([0.6815, 0.7318], device='cuda:0', requires_grad=True) train_loss=[0.38869095 0.58183104], train_acc=[0.8774  0.78175]
22/100: weight=tensor([0.6623, 0.7493], device='cuda:0', requires_grad=True) train_loss=[0.38464773 0.5687151 ], train_acc=[0.87825 0.7909 ]
24/100: weight=tensor([0.6445, 0.7646], device='cuda:0', requires_grad=True) train_loss=[0.39092022 0.5649548 ], train_acc=[0.8762  0.79115]
26/100: weight=tensor([0.6037, 0.7972], device='cuda:0', requires_grad=True) train_loss=[0.3653272  0.56444174], train_acc=[0.8839  0.79145]
28/100: weight=tensor([0.6750, 0.7378], device='cuda:0', requires_grad=True) train_loss=[0.36166686 0.5603135 ], train_acc=[0.8852 0.7919]
30/100: weight=tensor([0.6240, 0.7814], device='cuda:0', requires_grad=True) train_loss=[0.39367798 0.5679676 ], train_acc=[0.87145 0.7916 ]
32/100: weight=tensor([0.5978, 0.8016], device='cuda:0', requires_grad=True) train_loss=[0.34743342 0.54286367], train_acc=[0.8853  0.80195]
34/100: weight=tensor([0.6528, 0.7575], device='cuda:0', requires_grad=True) train_loss=[0.3279513 0.5337702], train_acc=[0.89595 0.80455]
36/100: weight=tensor([0.6446, 0.7645], device='cuda:0', requires_grad=True) train_loss=[0.32244414 0.52747977], train_acc=[0.896   0.80415]
38/100: weight=tensor([0.6709, 0.7416], device='cuda:0', requires_grad=True) train_loss=[0.3186917 0.5435121], train_acc=[0.8985  0.79845]
40/100: weight=tensor([0.6207, 0.7841], device='cuda:0', requires_grad=True) train_loss=[0.31392425 0.52298796], train_acc=[0.8988  0.80725]
42/100: weight=tensor([0.6344, 0.7730], device='cuda:0', requires_grad=True) train_loss=[0.32867166 0.52167743], train_acc=[0.89305 0.8086 ]
44/100: weight=tensor([0.5665, 0.8241], device='cuda:0', requires_grad=True) train_loss=[0.3111077 0.5215181], train_acc=[0.8975 0.8058]
46/100: weight=tensor([0.5887, 0.8083], device='cuda:0', requires_grad=True) train_loss=[0.2993223 0.5259063], train_acc=[0.90485 0.80625]
48/100: weight=tensor([0.6401, 0.7683], device='cuda:0', requires_grad=True) train_loss=[0.30665407 0.5165414 ], train_acc=[0.90195 0.81125]
50/100: weight=tensor([0.6694, 0.7429], device='cuda:0', requires_grad=True) train_loss=[0.29595128 0.5164653 ], train_acc=[0.9032  0.81065]
52/100: weight=tensor([0.6350, 0.7725], device='cuda:0', requires_grad=True) train_loss=[0.2930272  0.51083887], train_acc=[0.90815 0.81285]
54/100: weight=tensor([0.6773, 0.7357], device='cuda:0', requires_grad=True) train_loss=[0.2915162  0.50216514], train_acc=[0.9059 0.8152]
56/100: weight=tensor([0.6750, 0.7378], device='cuda:0', requires_grad=True) train_loss=[0.29520875 0.505783  ], train_acc=[0.9028  0.81405]
58/100: weight=tensor([0.6798, 0.7334], device='cuda:0', requires_grad=True) train_loss=[0.293685   0.50137347], train_acc=[0.9052  0.81605]
60/100: weight=tensor([0.6365, 0.7713], device='cuda:0', requires_grad=True) train_loss=[0.2831618  0.50550014], train_acc=[0.90785 0.8115 ]
62/100: weight=tensor([0.6657, 0.7462], device='cuda:0', requires_grad=True) train_loss=[0.27175602 0.5044647 ], train_acc=[0.91325 0.8159 ]
64/100: weight=tensor([0.6721, 0.7404], device='cuda:0', requires_grad=True) train_loss=[0.28822926 0.49963748], train_acc=[0.90595 0.81615]
66/100: weight=tensor([0.6645, 0.7472], device='cuda:0', requires_grad=True) train_loss=[0.28298682 0.51560944], train_acc=[0.90875 0.81   ]
68/100: weight=tensor([0.6281, 0.7781], device='cuda:0', requires_grad=True) train_loss=[0.27096087 0.505387  ], train_acc=[0.9128 0.8137]
70/100: weight=tensor([0.6567, 0.7541], device='cuda:0', requires_grad=True) train_loss=[0.27249372 0.5038022 ], train_acc=[0.91265 0.8139 ]
72/100: weight=tensor([0.6532, 0.7572], device='cuda:0', requires_grad=True) train_loss=[0.27520144 0.50498325], train_acc=[0.91045 0.81605]
74/100: weight=tensor([0.6694, 0.7429], device='cuda:0', requires_grad=True) train_loss=[0.27129602 0.49078292], train_acc=[0.9123  0.82095]
76/100: weight=tensor([0.6154, 0.7882], device='cuda:0', requires_grad=True) train_loss=[0.267269   0.49208394], train_acc=[0.91205 0.81705]
78/100: weight=tensor([0.6224, 0.7827], device='cuda:0', requires_grad=True) train_loss=[0.2617394  0.49668726], train_acc=[0.91505 0.81755]
80/100: weight=tensor([0.6352, 0.7723], device='cuda:0', requires_grad=True) train_loss=[0.26636896 0.4857738 ], train_acc=[0.91345 0.8218 ]
82/100: weight=tensor([0.6632, 0.7484], device='cuda:0', requires_grad=True) train_loss=[0.2683469 0.5008379], train_acc=[0.9116 0.8119]
84/100: weight=tensor([0.6177, 0.7864], device='cuda:0', requires_grad=True) train_loss=[0.26098347 0.48545352], train_acc=[0.9162 0.8227]
86/100: weight=tensor([0.6425, 0.7663], device='cuda:0', requires_grad=True) train_loss=[0.25937518 0.49208915], train_acc=[0.9153 0.8191]
88/100: weight=tensor([0.6353, 0.7723], device='cuda:0', requires_grad=True) train_loss=[0.25594932 0.49275744], train_acc=[0.9181 0.82  ]
90/100: weight=tensor([0.6826, 0.7308], device='cuda:0', requires_grad=True) train_loss=[0.2606071  0.47878933], train_acc=[0.9169 0.8237]
92/100: weight=tensor([0.6613, 0.7501], device='cuda:0', requires_grad=True) train_loss=[0.27722815 0.4782444 ], train_acc=[0.9118  0.82585]
94/100: weight=tensor([0.6630, 0.7486], device='cuda:0', requires_grad=True) train_loss=[0.2630183  0.47667107], train_acc=[0.91475 0.82455]
96/100: weight=tensor([0.6569, 0.7539], device='cuda:0', requires_grad=True) train_loss=[0.2748484  0.49884248], train_acc=[0.91055 0.81635]
98/100: weight=tensor([0.6736, 0.7391], device='cuda:0', requires_grad=True) train_loss=[0.26009047 0.4808846 ], train_acc=[0.9153 0.8248]
100/100: weight=tensor([0.6978, 0.7163], device='cuda:0', requires_grad=True) train_loss=[0.25490314 0.475645  ], train_acc=[0.9171 0.824 ]
**** Time taken for fashion_and_mnist_1 = 1758.9548590183258
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7987, 0.6018], device='cuda:0', requires_grad=True) train_loss=[1.3492368 1.1641282], train_acc=[0.5464  0.56075]
2/100: weight=tensor([0.7110, 0.7032], device='cuda:0', requires_grad=True) train_loss=[1.0199033  0.98548913], train_acc=[0.66525 0.6504 ]
4/100: weight=tensor([0.6528, 0.7575], device='cuda:0', requires_grad=True) train_loss=[0.7685188  0.81926566], train_acc=[0.7513  0.69475]
6/100: weight=tensor([0.6377, 0.7703], device='cuda:0', requires_grad=True) train_loss=[0.67661715 0.7744604 ], train_acc=[0.779   0.70655]
8/100: weight=tensor([0.6405, 0.7680], device='cuda:0', requires_grad=True) train_loss=[0.60234135 0.73808724], train_acc=[0.8041  0.72865]
10/100: weight=tensor([0.5764, 0.8171], device='cuda:0', requires_grad=True) train_loss=[0.55894804 0.7440349 ], train_acc=[0.82115 0.72465]
12/100: weight=tensor([0.6141, 0.7892], device='cuda:0', requires_grad=True) train_loss=[0.5389032 0.7037994], train_acc=[0.82475 0.7394 ]
14/100: weight=tensor([0.6176, 0.7865], device='cuda:0', requires_grad=True) train_loss=[0.51287055 0.67612875], train_acc=[0.83525 0.7508 ]
16/100: weight=tensor([0.6271, 0.7790], device='cuda:0', requires_grad=True) train_loss=[0.4987909 0.6499781], train_acc=[0.83895 0.7556 ]
18/100: weight=tensor([0.5803, 0.8144], device='cuda:0', requires_grad=True) train_loss=[0.4673615 0.6501131], train_acc=[0.85105 0.75805]
20/100: weight=tensor([0.5755, 0.8178], device='cuda:0', requires_grad=True) train_loss=[0.45523795 0.61806685], train_acc=[0.85265 0.77055]
22/100: weight=tensor([0.6260, 0.7798], device='cuda:0', requires_grad=True) train_loss=[0.43602043 0.6194968 ], train_acc=[0.8615  0.77305]
24/100: weight=tensor([0.6091, 0.7931], device='cuda:0', requires_grad=True) train_loss=[0.41377014 0.60010767], train_acc=[0.86835 0.77985]
26/100: weight=tensor([0.6374, 0.7706], device='cuda:0', requires_grad=True) train_loss=[0.4336971  0.59692717], train_acc=[0.8592  0.77785]
28/100: weight=tensor([0.5948, 0.8039], device='cuda:0', requires_grad=True) train_loss=[0.39166203 0.5963806 ], train_acc=[0.87645 0.77925]
30/100: weight=tensor([0.6143, 0.7891], device='cuda:0', requires_grad=True) train_loss=[0.3875183  0.57186735], train_acc=[0.8781  0.78955]
32/100: weight=tensor([0.6215, 0.7834], device='cuda:0', requires_grad=True) train_loss=[0.3847797 0.5707608], train_acc=[0.87695 0.78985]
34/100: weight=tensor([0.6400, 0.7683], device='cuda:0', requires_grad=True) train_loss=[0.36973864 0.55897236], train_acc=[0.88455 0.7952 ]
36/100: weight=tensor([0.6317, 0.7752], device='cuda:0', requires_grad=True) train_loss=[0.36938572 0.55969536], train_acc=[0.88425 0.79475]
38/100: weight=tensor([0.5725, 0.8199], device='cuda:0', requires_grad=True) train_loss=[0.35933703 0.5531649 ], train_acc=[0.88685 0.7949 ]
40/100: weight=tensor([0.6090, 0.7932], device='cuda:0', requires_grad=True) train_loss=[0.35315686 0.54290277], train_acc=[0.89025 0.80185]
42/100: weight=tensor([0.5873, 0.8094], device='cuda:0', requires_grad=True) train_loss=[0.35054806 0.537693  ], train_acc=[0.8883  0.80315]
44/100: weight=tensor([0.6176, 0.7865], device='cuda:0', requires_grad=True) train_loss=[0.34073746 0.5404356 ], train_acc=[0.8932 0.8016]
46/100: weight=tensor([0.6075, 0.7943], device='cuda:0', requires_grad=True) train_loss=[0.34390703 0.539613  ], train_acc=[0.89115 0.7993 ]
48/100: weight=tensor([0.6286, 0.7777], device='cuda:0', requires_grad=True) train_loss=[0.3462082  0.53441465], train_acc=[0.89135 0.8055 ]
50/100: weight=tensor([0.6119, 0.7910], device='cuda:0', requires_grad=True) train_loss=[0.33776078 0.5394286 ], train_acc=[0.8956 0.8033]
52/100: weight=tensor([0.5527, 0.8334], device='cuda:0', requires_grad=True) train_loss=[0.32783735 0.5203979 ], train_acc=[0.8975 0.81  ]
54/100: weight=tensor([0.6243, 0.7812], device='cuda:0', requires_grad=True) train_loss=[0.321573   0.51534444], train_acc=[0.9004 0.8125]
56/100: weight=tensor([0.6503, 0.7597], device='cuda:0', requires_grad=True) train_loss=[0.3165836 0.5331471], train_acc=[0.90205 0.8073 ]
58/100: weight=tensor([0.5783, 0.8158], device='cuda:0', requires_grad=True) train_loss=[0.32682973 0.5342829 ], train_acc=[0.8968  0.80195]
60/100: weight=tensor([0.5301, 0.8479], device='cuda:0', requires_grad=True) train_loss=[0.31822506 0.51144016], train_acc=[0.9024 0.8129]
62/100: weight=tensor([0.5863, 0.8101], device='cuda:0', requires_grad=True) train_loss=[0.32832903 0.50846106], train_acc=[0.89665 0.8137 ]
64/100: weight=tensor([0.6037, 0.7972], device='cuda:0', requires_grad=True) train_loss=[0.3234863 0.5137186], train_acc=[0.8968 0.8129]
66/100: weight=tensor([0.5982, 0.8013], device='cuda:0', requires_grad=True) train_loss=[0.31076378 0.5067789 ], train_acc=[0.9015 0.8159]
68/100: weight=tensor([0.5563, 0.8310], device='cuda:0', requires_grad=True) train_loss=[0.30317712 0.5039503 ], train_acc=[0.90635 0.81615]
70/100: weight=tensor([0.5723, 0.8200], device='cuda:0', requires_grad=True) train_loss=[0.30714554 0.5040223 ], train_acc=[0.90395 0.81675]
72/100: weight=tensor([0.5906, 0.8070], device='cuda:0', requires_grad=True) train_loss=[0.30779153 0.50187117], train_acc=[0.90225 0.8168 ]
74/100: weight=tensor([0.6101, 0.7923], device='cuda:0', requires_grad=True) train_loss=[0.32141972 0.50157756], train_acc=[0.8977 0.8181]
76/100: weight=tensor([0.5931, 0.8051], device='cuda:0', requires_grad=True) train_loss=[0.30225036 0.5000014 ], train_acc=[0.9049 0.817 ]
78/100: weight=tensor([0.6180, 0.7862], device='cuda:0', requires_grad=True) train_loss=[0.32272768 0.49602607], train_acc=[0.89715 0.81805]
80/100: weight=tensor([0.5326, 0.8464], device='cuda:0', requires_grad=True) train_loss=[0.3037089  0.49601027], train_acc=[0.9048 0.8192]
82/100: weight=tensor([0.6237, 0.7817], device='cuda:0', requires_grad=True) train_loss=[0.29630122 0.5013389 ], train_acc=[0.90765 0.81535]
84/100: weight=tensor([0.6049, 0.7963], device='cuda:0', requires_grad=True) train_loss=[0.2978796 0.5020729], train_acc=[0.9055 0.8156]
86/100: weight=tensor([0.6115, 0.7912], device='cuda:0', requires_grad=True) train_loss=[0.29701218 0.5010539 ], train_acc=[0.90735 0.81685]
88/100: weight=tensor([0.6010, 0.7992], device='cuda:0', requires_grad=True) train_loss=[0.29362163 0.5042322 ], train_acc=[0.9089 0.816 ]
90/100: weight=tensor([0.5775, 0.8164], device='cuda:0', requires_grad=True) train_loss=[0.29695544 0.48537546], train_acc=[0.9065 0.8248]
92/100: weight=tensor([0.6177, 0.7864], device='cuda:0', requires_grad=True) train_loss=[0.28664967 0.48763847], train_acc=[0.91115 0.8222 ]
94/100: weight=tensor([0.5665, 0.8241], device='cuda:0', requires_grad=True) train_loss=[0.29829463 0.48135522], train_acc=[0.90605 0.8248 ]
96/100: weight=tensor([0.6352, 0.7724], device='cuda:0', requires_grad=True) train_loss=[0.3052434 0.4869142], train_acc=[0.9045 0.821 ]
98/100: weight=tensor([0.5769, 0.8168], device='cuda:0', requires_grad=True) train_loss=[0.2874253  0.48216146], train_acc=[0.91025 0.82385]
100/100: weight=tensor([0.6281, 0.7781], device='cuda:0', requires_grad=True) train_loss=[0.30794534 0.49154046], train_acc=[0.9017 0.8214]
**** Time taken for fashion_and_mnist_2 = 1764.7747249603271
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7937, 0.6083], device='cuda:0', requires_grad=True) train_loss=[1.6032248 1.2974054], train_acc=[0.4468  0.53185]
2/100: weight=tensor([0.7898, 0.6133], device='cuda:0', requires_grad=True) train_loss=[1.1826916 1.0205635], train_acc=[0.59605 0.627  ]
4/100: weight=tensor([0.6184, 0.7859], device='cuda:0', requires_grad=True) train_loss=[0.9102653  0.85562414], train_acc=[0.6919  0.68705]
6/100: weight=tensor([0.7086, 0.7056], device='cuda:0', requires_grad=True) train_loss=[0.77827454 0.82235634], train_acc=[0.73545 0.69495]
8/100: weight=tensor([0.6151, 0.7884], device='cuda:0', requires_grad=True) train_loss=[0.6973685  0.75414884], train_acc=[0.77115 0.72285]
10/100: weight=tensor([0.6375, 0.7704], device='cuda:0', requires_grad=True) train_loss=[0.6497972 0.7177444], train_acc=[0.78415 0.73275]
12/100: weight=tensor([0.5755, 0.8178], device='cuda:0', requires_grad=True) train_loss=[0.6073898 0.7168388], train_acc=[0.8    0.7344]
14/100: weight=tensor([0.5509, 0.8346], device='cuda:0', requires_grad=True) train_loss=[0.6220954 0.690716 ], train_acc=[0.7918  0.74475]
16/100: weight=tensor([0.5817, 0.8134], device='cuda:0', requires_grad=True) train_loss=[0.53787863 0.679027  ], train_acc=[0.8265 0.7521]
18/100: weight=tensor([0.5394, 0.8421], device='cuda:0', requires_grad=True) train_loss=[0.54552656 0.6589088 ], train_acc=[0.819  0.7563]
20/100: weight=tensor([0.5066, 0.8622], device='cuda:0', requires_grad=True) train_loss=[0.51429605 0.6477032 ], train_acc=[0.8333  0.76145]
22/100: weight=tensor([0.4904, 0.8715], device='cuda:0', requires_grad=True) train_loss=[0.48805016 0.6342222 ], train_acc=[0.8427 0.7647]
24/100: weight=tensor([0.4964, 0.8681], device='cuda:0', requires_grad=True) train_loss=[0.4819774  0.62622577], train_acc=[0.8439 0.7679]
26/100: weight=tensor([0.5159, 0.8567], device='cuda:0', requires_grad=True) train_loss=[0.45085865 0.60991323], train_acc=[0.853  0.7738]
28/100: weight=tensor([0.5183, 0.8552], device='cuda:0', requires_grad=True) train_loss=[0.44474727 0.590953  ], train_acc=[0.8556 0.7834]
30/100: weight=tensor([0.4934, 0.8698], device='cuda:0', requires_grad=True) train_loss=[0.43856454 0.58505654], train_acc=[0.85675 0.78305]
32/100: weight=tensor([0.4984, 0.8670], device='cuda:0', requires_grad=True) train_loss=[0.44671896 0.5779831 ], train_acc=[0.85365 0.7835 ]
34/100: weight=tensor([0.5037, 0.8639], device='cuda:0', requires_grad=True) train_loss=[0.42879757 0.5823158 ], train_acc=[0.85895 0.78045]
36/100: weight=tensor([0.5382, 0.8428], device='cuda:0', requires_grad=True) train_loss=[0.41053185 0.5741029 ], train_acc=[0.86755 0.7882 ]
38/100: weight=tensor([0.5632, 0.8263], device='cuda:0', requires_grad=True) train_loss=[0.40541053 0.57131445], train_acc=[0.86715 0.7863 ]
40/100: weight=tensor([0.5056, 0.8628], device='cuda:0', requires_grad=True) train_loss=[0.39276454 0.5737122 ], train_acc=[0.87095 0.7882 ]
42/100: weight=tensor([0.4674, 0.8841], device='cuda:0', requires_grad=True) train_loss=[0.39286873 0.5471595 ], train_acc=[0.8723 0.7959]
44/100: weight=tensor([0.5777, 0.8162], device='cuda:0', requires_grad=True) train_loss=[0.40676206 0.56163925], train_acc=[0.8655 0.7918]
46/100: weight=tensor([0.4613, 0.8872], device='cuda:0', requires_grad=True) train_loss=[0.37869185 0.5456454 ], train_acc=[0.876   0.79815]
48/100: weight=tensor([0.5122, 0.8589], device='cuda:0', requires_grad=True) train_loss=[0.38419485 0.54302645], train_acc=[0.87615 0.7994 ]
50/100: weight=tensor([0.5370, 0.8436], device='cuda:0', requires_grad=True) train_loss=[0.37825066 0.53135294], train_acc=[0.87845 0.8027 ]
52/100: weight=tensor([0.4989, 0.8667], device='cuda:0', requires_grad=True) train_loss=[0.37089908 0.5267313 ], train_acc=[0.8808  0.80395]
54/100: weight=tensor([0.4560, 0.8900], device='cuda:0', requires_grad=True) train_loss=[0.36963847 0.52898324], train_acc=[0.88055 0.8045 ]
56/100: weight=tensor([0.4752, 0.8799], device='cuda:0', requires_grad=True) train_loss=[0.3651531 0.5203884], train_acc=[0.8821  0.80835]
58/100: weight=tensor([0.5098, 0.8603], device='cuda:0', requires_grad=True) train_loss=[0.36911672 0.5143806 ], train_acc=[0.8811 0.8101]
60/100: weight=tensor([0.5144, 0.8576], device='cuda:0', requires_grad=True) train_loss=[0.370262   0.54224116], train_acc=[0.8786  0.80215]
62/100: weight=tensor([0.4584, 0.8888], device='cuda:0', requires_grad=True) train_loss=[0.37895545 0.5124032 ], train_acc=[0.8737  0.80975]
64/100: weight=tensor([0.5196, 0.8544], device='cuda:0', requires_grad=True) train_loss=[0.35013628 0.5202242 ], train_acc=[0.8874  0.80635]
66/100: weight=tensor([0.4478, 0.8941], device='cuda:0', requires_grad=True) train_loss=[0.3466592  0.50826114], train_acc=[0.8906  0.81185]
68/100: weight=tensor([0.5770, 0.8168], device='cuda:0', requires_grad=True) train_loss=[0.34565747 0.510072  ], train_acc=[0.88725 0.8142 ]
70/100: weight=tensor([0.5069, 0.8620], device='cuda:0', requires_grad=True) train_loss=[0.3511772  0.50211596], train_acc=[0.88665 0.81435]
72/100: weight=tensor([0.4439, 0.8961], device='cuda:0', requires_grad=True) train_loss=[0.34274128 0.5006427 ], train_acc=[0.88885 0.81615]
74/100: weight=tensor([0.5229, 0.8524], device='cuda:0', requires_grad=True) train_loss=[0.34723705 0.5097485 ], train_acc=[0.88865 0.8102 ]
76/100: weight=tensor([0.5183, 0.8552], device='cuda:0', requires_grad=True) train_loss=[0.36560398 0.5294562 ], train_acc=[0.8801 0.8048]
78/100: weight=tensor([0.5596, 0.8288], device='cuda:0', requires_grad=True) train_loss=[0.3373915 0.5146436], train_acc=[0.8921  0.81175]
80/100: weight=tensor([0.4953, 0.8687], device='cuda:0', requires_grad=True) train_loss=[0.32965925 0.49035645], train_acc=[0.8946 0.8212]
82/100: weight=tensor([0.5052, 0.8630], device='cuda:0', requires_grad=True) train_loss=[0.32431087 0.49316958], train_acc=[0.8961  0.81705]
84/100: weight=tensor([0.4929, 0.8701], device='cuda:0', requires_grad=True) train_loss=[0.3284242 0.5020347], train_acc=[0.89515 0.81825]
86/100: weight=tensor([0.4881, 0.8728], device='cuda:0', requires_grad=True) train_loss=[0.32498658 0.48974344], train_acc=[0.89555 0.8199 ]
88/100: weight=tensor([0.4685, 0.8834], device='cuda:0', requires_grad=True) train_loss=[0.32074475 0.4927123 ], train_acc=[0.897  0.8199]
90/100: weight=tensor([0.4761, 0.8794], device='cuda:0', requires_grad=True) train_loss=[0.32024184 0.49122712], train_acc=[0.89745 0.82105]
92/100: weight=tensor([0.5327, 0.8463], device='cuda:0', requires_grad=True) train_loss=[0.3215247 0.487705 ], train_acc=[0.8961  0.82305]
94/100: weight=tensor([0.4890, 0.8723], device='cuda:0', requires_grad=True) train_loss=[0.3197235 0.497628 ], train_acc=[0.89715 0.8179 ]
96/100: weight=tensor([0.4848, 0.8746], device='cuda:0', requires_grad=True) train_loss=[0.32536834 0.49389523], train_acc=[0.89535 0.8204 ]
98/100: weight=tensor([0.5123, 0.8588], device='cuda:0', requires_grad=True) train_loss=[0.31395236 0.48607066], train_acc=[0.89915 0.82635]
100/100: weight=tensor([0.5552, 0.8317], device='cuda:0', requires_grad=True) train_loss=[0.3189768  0.50232714], train_acc=[0.89815 0.81305]
**** Time taken for fashion_and_mnist_3 = 1769.0774495601654
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.8387, 0.5446], device='cuda:0', requires_grad=True) train_loss=[1.3383685 1.3299841], train_acc=[0.5408  0.51075]
2/100: weight=tensor([0.7972, 0.6038], device='cuda:0', requires_grad=True) train_loss=[1.0320874 1.1033839], train_acc=[0.65765 0.58405]
4/100: weight=tensor([0.7866, 0.6175], device='cuda:0', requires_grad=True) train_loss=[0.7278445 0.8669822], train_acc=[0.7577  0.68675]
6/100: weight=tensor([0.7501, 0.6613], device='cuda:0', requires_grad=True) train_loss=[0.6512937  0.80600303], train_acc=[0.788  0.7027]
8/100: weight=tensor([0.7575, 0.6528], device='cuda:0', requires_grad=True) train_loss=[0.541065  0.7461116], train_acc=[0.82315 0.7245 ]
10/100: weight=tensor([0.7436, 0.6687], device='cuda:0', requires_grad=True) train_loss=[0.49350673 0.71437275], train_acc=[0.8419 0.7389]
12/100: weight=tensor([0.7435, 0.6687], device='cuda:0', requires_grad=True) train_loss=[0.4877475 0.6979854], train_acc=[0.8394  0.74545]
14/100: weight=tensor([0.7633, 0.6460], device='cuda:0', requires_grad=True) train_loss=[0.42542833 0.6760988 ], train_acc=[0.8658 0.7522]
16/100: weight=tensor([0.6874, 0.7263], device='cuda:0', requires_grad=True) train_loss=[0.4143728  0.65959305], train_acc=[0.8706  0.75535]
18/100: weight=tensor([0.6781, 0.7350], device='cuda:0', requires_grad=True) train_loss=[0.40918776 0.64339215], train_acc=[0.86865 0.7559 ]
20/100: weight=tensor([0.6903, 0.7235], device='cuda:0', requires_grad=True) train_loss=[0.3863242 0.6313003], train_acc=[0.87775 0.7694 ]
22/100: weight=tensor([0.7041, 0.7101], device='cuda:0', requires_grad=True) train_loss=[0.3807056  0.60499644], train_acc=[0.87865 0.77535]
24/100: weight=tensor([0.7095, 0.7047], device='cuda:0', requires_grad=True) train_loss=[0.39616436 0.6095062 ], train_acc=[0.87115 0.774  ]
26/100: weight=tensor([0.7399, 0.6727], device='cuda:0', requires_grad=True) train_loss=[0.36570802 0.5928029 ], train_acc=[0.88245 0.7791 ]
28/100: weight=tensor([0.7047, 0.7095], device='cuda:0', requires_grad=True) train_loss=[0.34488982 0.58606523], train_acc=[0.89105 0.78385]
30/100: weight=tensor([0.6814, 0.7319], device='cuda:0', requires_grad=True) train_loss=[0.3534992 0.587852 ], train_acc=[0.887   0.78125]
32/100: weight=tensor([0.6915, 0.7224], device='cuda:0', requires_grad=True) train_loss=[0.33282748 0.59662855], train_acc=[0.89455 0.77985]
34/100: weight=tensor([0.7318, 0.6815], device='cuda:0', requires_grad=True) train_loss=[0.35870674 0.5754823 ], train_acc=[0.88485 0.7883 ]
36/100: weight=tensor([0.7168, 0.6973], device='cuda:0', requires_grad=True) train_loss=[0.33480084 0.5815712 ], train_acc=[0.8927 0.7847]
38/100: weight=tensor([0.7151, 0.6990], device='cuda:0', requires_grad=True) train_loss=[0.32374725 0.5741418 ], train_acc=[0.8978  0.78695]
40/100: weight=tensor([0.6946, 0.7194], device='cuda:0', requires_grad=True) train_loss=[0.31747586 0.5550974 ], train_acc=[0.89915 0.7949 ]
42/100: weight=tensor([0.6174, 0.7866], device='cuda:0', requires_grad=True) train_loss=[0.32204115 0.6014961 ], train_acc=[0.8974 0.7671]
44/100: weight=tensor([0.6403, 0.7681], device='cuda:0', requires_grad=True) train_loss=[0.3222279 0.5413755], train_acc=[0.8974  0.80075]
46/100: weight=tensor([0.7147, 0.6995], device='cuda:0', requires_grad=True) train_loss=[0.33288625 0.5520745 ], train_acc=[0.8929 0.7973]
48/100: weight=tensor([0.6556, 0.7551], device='cuda:0', requires_grad=True) train_loss=[0.35306355 0.53991413], train_acc=[0.8848  0.80425]
50/100: weight=tensor([0.6791, 0.7341], device='cuda:0', requires_grad=True) train_loss=[0.33457607 0.5575824 ], train_acc=[0.8925  0.79825]
52/100: weight=tensor([0.7077, 0.7065], device='cuda:0', requires_grad=True) train_loss=[0.3172583 0.547075 ], train_acc=[0.8979  0.80185]
54/100: weight=tensor([0.6777, 0.7353], device='cuda:0', requires_grad=True) train_loss=[0.32011235 0.5271407 ], train_acc=[0.8948 0.8068]
56/100: weight=tensor([0.6486, 0.7611], device='cuda:0', requires_grad=True) train_loss=[0.2966598 0.5497043], train_acc=[0.9066 0.7997]
58/100: weight=tensor([0.6884, 0.7253], device='cuda:0', requires_grad=True) train_loss=[0.29960743 0.53711504], train_acc=[0.9015 0.8042]
60/100: weight=tensor([0.6950, 0.7190], device='cuda:0', requires_grad=True) train_loss=[0.289397  0.5339795], train_acc=[0.9074 0.8019]
62/100: weight=tensor([0.6035, 0.7974], device='cuda:0', requires_grad=True) train_loss=[0.29678297 0.5320107 ], train_acc=[0.90505 0.80615]
64/100: weight=tensor([0.6407, 0.7678], device='cuda:0', requires_grad=True) train_loss=[0.31112733 0.5399157 ], train_acc=[0.90205 0.79815]
66/100: weight=tensor([0.6584, 0.7527], device='cuda:0', requires_grad=True) train_loss=[0.31528234 0.5370083 ], train_acc=[0.89935 0.8004 ]
68/100: weight=tensor([0.6725, 0.7401], device='cuda:0', requires_grad=True) train_loss=[0.28635532 0.52697456], train_acc=[0.90725 0.81005]
70/100: weight=tensor([0.6112, 0.7914], device='cuda:0', requires_grad=True) train_loss=[0.2859577  0.51006657], train_acc=[0.9068  0.81455]
72/100: weight=tensor([0.6757, 0.7371], device='cuda:0', requires_grad=True) train_loss=[0.27928185 0.53336954], train_acc=[0.9131 0.8022]
74/100: weight=tensor([0.6387, 0.7695], device='cuda:0', requires_grad=True) train_loss=[0.2835337 0.5163951], train_acc=[0.9091 0.8113]
76/100: weight=tensor([0.6646, 0.7472], device='cuda:0', requires_grad=True) train_loss=[0.28137678 0.5158054 ], train_acc=[0.90755 0.8106 ]
78/100: weight=tensor([0.6643, 0.7475], device='cuda:0', requires_grad=True) train_loss=[0.28514948 0.5110857 ], train_acc=[0.90795 0.8139 ]
80/100: weight=tensor([0.6576, 0.7534], device='cuda:0', requires_grad=True) train_loss=[0.27405736 0.515429  ], train_acc=[0.9132 0.811 ]
82/100: weight=tensor([0.6951, 0.7190], device='cuda:0', requires_grad=True) train_loss=[0.2739226 0.5181985], train_acc=[0.91305 0.809  ]
84/100: weight=tensor([0.6455, 0.7638], device='cuda:0', requires_grad=True) train_loss=[0.28817225 0.5090157 ], train_acc=[0.905   0.81395]
86/100: weight=tensor([0.6784, 0.7347], device='cuda:0', requires_grad=True) train_loss=[0.2696372 0.5049145], train_acc=[0.914   0.81905]
88/100: weight=tensor([0.6702, 0.7422], device='cuda:0', requires_grad=True) train_loss=[0.2746072 0.5012157], train_acc=[0.91155 0.8178 ]
90/100: weight=tensor([0.6795, 0.7336], device='cuda:0', requires_grad=True) train_loss=[0.27175078 0.50054467], train_acc=[0.91225 0.81825]
92/100: weight=tensor([0.6619, 0.7496], device='cuda:0', requires_grad=True) train_loss=[0.26926905 0.51248944], train_acc=[0.91375 0.81505]
94/100: weight=tensor([0.7164, 0.6977], device='cuda:0', requires_grad=True) train_loss=[0.27583393 0.50149125], train_acc=[0.91175 0.82075]
96/100: weight=tensor([0.6340, 0.7734], device='cuda:0', requires_grad=True) train_loss=[0.2801221 0.5065093], train_acc=[0.9099  0.81575]
98/100: weight=tensor([0.6634, 0.7482], device='cuda:0', requires_grad=True) train_loss=[0.26645073 0.49174646], train_acc=[0.9152 0.8209]
100/100: weight=tensor([0.6439, 0.7651], device='cuda:0', requires_grad=True) train_loss=[0.29466835 0.49361113], train_acc=[0.90685 0.82175]
**** Time taken for fashion_and_mnist_4 = 1770.1133530139923
**** Time taken for fashion_and_mnist = 9905.26910686493

Script started.
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6489, 0.7609], device='cuda:0', requires_grad=True) train_loss=[1.4855639 1.5383534], train_acc=[0.4923 0.4711]
2/100: weight=tensor([0.6787, 0.7345], device='cuda:0', requires_grad=True) train_loss=[1.0552523 1.0864338], train_acc=[0.64115 0.63085]
4/100: weight=tensor([0.7210, 0.6930], device='cuda:0', requires_grad=True) train_loss=[0.73400474 0.8055692 ], train_acc=[0.7569 0.7269]
6/100: weight=tensor([0.7315, 0.6819], device='cuda:0', requires_grad=True) train_loss=[0.60422486 0.70171744], train_acc=[0.8026 0.7613]
8/100: weight=tensor([0.7019, 0.7123], device='cuda:0', requires_grad=True) train_loss=[0.55143595 0.61419195], train_acc=[0.8195  0.79025]
10/100: weight=tensor([0.7419, 0.6705], device='cuda:0', requires_grad=True) train_loss=[0.51600266 0.5977571 ], train_acc=[0.82905 0.7989 ]
12/100: weight=tensor([0.7363, 0.6767], device='cuda:0', requires_grad=True) train_loss=[0.4767198  0.56004316], train_acc=[0.8443  0.80715]
14/100: weight=tensor([0.7069, 0.7073], device='cuda:0', requires_grad=True) train_loss=[0.4533133 0.5298577], train_acc=[0.85165 0.8236 ]
16/100: weight=tensor([0.7568, 0.6536], device='cuda:0', requires_grad=True) train_loss=[0.43864757 0.5138908 ], train_acc=[0.85535 0.82755]
18/100: weight=tensor([0.7068, 0.7075], device='cuda:0', requires_grad=True) train_loss=[0.42506003 0.50468177], train_acc=[0.86105 0.8318 ]
20/100: weight=tensor([0.7185, 0.6956], device='cuda:0', requires_grad=True) train_loss=[0.41074932 0.4824513 ], train_acc=[0.86515 0.8357 ]
22/100: weight=tensor([0.7017, 0.7125], device='cuda:0', requires_grad=True) train_loss=[0.40722686 0.4641659 ], train_acc=[0.8652 0.847 ]
24/100: weight=tensor([0.7574, 0.6529], device='cuda:0', requires_grad=True) train_loss=[0.40081865 0.4703369 ], train_acc=[0.8699  0.84365]
26/100: weight=tensor([0.7380, 0.6748], device='cuda:0', requires_grad=True) train_loss=[0.3805307  0.46117374], train_acc=[0.8775 0.8446]
28/100: weight=tensor([0.7247, 0.6890], device='cuda:0', requires_grad=True) train_loss=[0.3793785  0.43163148], train_acc=[0.87485 0.8562 ]
30/100: weight=tensor([0.7722, 0.6353], device='cuda:0', requires_grad=True) train_loss=[0.3635744  0.43220434], train_acc=[0.88135 0.8566 ]
32/100: weight=tensor([0.7266, 0.6871], device='cuda:0', requires_grad=True) train_loss=[0.39467913 0.44219348], train_acc=[0.873   0.85135]
34/100: weight=tensor([0.7407, 0.6718], device='cuda:0', requires_grad=True) train_loss=[0.36388382 0.4373991 ], train_acc=[0.88055 0.85455]
36/100: weight=tensor([0.7479, 0.6638], device='cuda:0', requires_grad=True) train_loss=[0.35203373 0.41220886], train_acc=[0.8853  0.86195]
38/100: weight=tensor([0.7602, 0.6496], device='cuda:0', requires_grad=True) train_loss=[0.34358698 0.41154814], train_acc=[0.88855 0.8612 ]
40/100: weight=tensor([0.7272, 0.6864], device='cuda:0', requires_grad=True) train_loss=[0.34868574 0.40511236], train_acc=[0.88685 0.86285]
42/100: weight=tensor([0.7601, 0.6498], device='cuda:0', requires_grad=True) train_loss=[0.3348896  0.39774817], train_acc=[0.8898 0.8665]
44/100: weight=tensor([0.7420, 0.6704], device='cuda:0', requires_grad=True) train_loss=[0.34227052 0.40621564], train_acc=[0.88875 0.8658 ]
46/100: weight=tensor([0.7582, 0.6520], device='cuda:0', requires_grad=True) train_loss=[0.33342963 0.3933572 ], train_acc=[0.88945 0.8688 ]
48/100: weight=tensor([0.7409, 0.6716], device='cuda:0', requires_grad=True) train_loss=[0.32562348 0.4057739 ], train_acc=[0.8931 0.8656]
50/100: weight=tensor([0.7060, 0.7082], device='cuda:0', requires_grad=True) train_loss=[0.33080837 0.40469354], train_acc=[0.8922 0.8645]
52/100: weight=tensor([0.7571, 0.6533], device='cuda:0', requires_grad=True) train_loss=[0.3212801  0.38875717], train_acc=[0.893  0.8681]
54/100: weight=tensor([0.8054, 0.5927], device='cuda:0', requires_grad=True) train_loss=[0.3468536 0.3909043], train_acc=[0.88655 0.8696 ]
56/100: weight=tensor([0.7579, 0.6524], device='cuda:0', requires_grad=True) train_loss=[0.3368026  0.38244486], train_acc=[0.8903  0.87025]
58/100: weight=tensor([0.7601, 0.6499], device='cuda:0', requires_grad=True) train_loss=[0.31131276 0.3744376 ], train_acc=[0.8973 0.8754]
60/100: weight=tensor([0.8011, 0.5986], device='cuda:0', requires_grad=True) train_loss=[0.31271124 0.369052  ], train_acc=[0.89915 0.8761 ]
62/100: weight=tensor([0.7613, 0.6484], device='cuda:0', requires_grad=True) train_loss=[0.3193262  0.39339462], train_acc=[0.89635 0.86935]
64/100: weight=tensor([0.7553, 0.6554], device='cuda:0', requires_grad=True) train_loss=[0.3098989 0.3766445], train_acc=[0.89785 0.8741 ]
66/100: weight=tensor([0.7224, 0.6914], device='cuda:0', requires_grad=True) train_loss=[0.312113   0.36879024], train_acc=[0.8978  0.87745]
68/100: weight=tensor([0.7381, 0.6747], device='cuda:0', requires_grad=True) train_loss=[0.3030682  0.37683854], train_acc=[0.8995 0.874 ]
70/100: weight=tensor([0.7378, 0.6750], device='cuda:0', requires_grad=True) train_loss=[0.29833484 0.36338967], train_acc=[0.90205 0.8777 ]
72/100: weight=tensor([0.7318, 0.6815], device='cuda:0', requires_grad=True) train_loss=[0.29745266 0.401133  ], train_acc=[0.90275 0.8659 ]
74/100: weight=tensor([0.7281, 0.6855], device='cuda:0', requires_grad=True) train_loss=[0.300347   0.35570124], train_acc=[0.90075 0.881  ]
76/100: weight=tensor([0.7633, 0.6460], device='cuda:0', requires_grad=True) train_loss=[0.29425174 0.36089912], train_acc=[0.90265 0.88035]
78/100: weight=tensor([0.7388, 0.6739], device='cuda:0', requires_grad=True) train_loss=[0.29483864 0.35645375], train_acc=[0.90325 0.88065]
80/100: weight=tensor([0.7871, 0.6168], device='cuda:0', requires_grad=True) train_loss=[0.2981103 0.3551322], train_acc=[0.9025 0.8813]
82/100: weight=tensor([0.7451, 0.6669], device='cuda:0', requires_grad=True) train_loss=[0.29662588 0.35839778], train_acc=[0.90285 0.8793 ]
84/100: weight=tensor([0.7456, 0.6664], device='cuda:0', requires_grad=True) train_loss=[0.3022882  0.35491833], train_acc=[0.9024  0.88175]
86/100: weight=tensor([0.7292, 0.6843], device='cuda:0', requires_grad=True) train_loss=[0.28795424 0.35207465], train_acc=[0.90595 0.88215]
88/100: weight=tensor([0.7493, 0.6622], device='cuda:0', requires_grad=True) train_loss=[0.2950995 0.3696598], train_acc=[0.90445 0.87635]
90/100: weight=tensor([0.7503, 0.6611], device='cuda:0', requires_grad=True) train_loss=[0.28417304 0.34889206], train_acc=[0.9059 0.8833]
92/100: weight=tensor([0.7448, 0.6672], device='cuda:0', requires_grad=True) train_loss=[0.29415295 0.37513044], train_acc=[0.9033  0.87545]
94/100: weight=tensor([0.7231, 0.6908], device='cuda:0', requires_grad=True) train_loss=[0.29079828 0.35351625], train_acc=[0.9045  0.88285]
96/100: weight=tensor([0.7281, 0.6855], device='cuda:0', requires_grad=True) train_loss=[0.28463528 0.34748203], train_acc=[0.9068  0.88325]
98/100: weight=tensor([0.7440, 0.6682], device='cuda:0', requires_grad=True) train_loss=[0.2840693  0.35145864], train_acc=[0.9075  0.88305]
100/100: weight=tensor([0.7353, 0.6778], device='cuda:0', requires_grad=True) train_loss=[0.29197302 0.3510872 ], train_acc=[0.90395 0.8825 ]
**** Time taken for mnist_0 = 3538.386879682541
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6253, 0.7804], device='cuda:0', requires_grad=True) train_loss=[1.4337592 1.4770422], train_acc=[0.51985 0.4973 ]
2/100: weight=tensor([0.6708, 0.7417], device='cuda:0', requires_grad=True) train_loss=[1.0560055 1.059242 ], train_acc=[0.6464 0.6429]
4/100: weight=tensor([0.6617, 0.7498], device='cuda:0', requires_grad=True) train_loss=[0.69644254 0.766971  ], train_acc=[0.77045 0.7415 ]
6/100: weight=tensor([0.6594, 0.7518], device='cuda:0', requires_grad=True) train_loss=[0.60025567 0.6607583 ], train_acc=[0.80285 0.77865]
8/100: weight=tensor([0.6880, 0.7257], device='cuda:0', requires_grad=True) train_loss=[0.5441404  0.59661156], train_acc=[0.8234 0.8028]
10/100: weight=tensor([0.6005, 0.7996], device='cuda:0', requires_grad=True) train_loss=[0.5151492  0.57725185], train_acc=[0.8323  0.80865]
12/100: weight=tensor([0.6472, 0.7623], device='cuda:0', requires_grad=True) train_loss=[0.4925544  0.55520976], train_acc=[0.83845 0.81395]
14/100: weight=tensor([0.6611, 0.7503], device='cuda:0', requires_grad=True) train_loss=[0.49564034 0.5337623 ], train_acc=[0.8375  0.82225]
16/100: weight=tensor([0.6668, 0.7453], device='cuda:0', requires_grad=True) train_loss=[0.4534157  0.49761665], train_acc=[0.8513  0.83345]
18/100: weight=tensor([0.6301, 0.7765], device='cuda:0', requires_grad=True) train_loss=[0.44638458 0.47914544], train_acc=[0.855  0.8402]
20/100: weight=tensor([0.6973, 0.7168], device='cuda:0', requires_grad=True) train_loss=[0.43302315 0.46726787], train_acc=[0.858   0.84325]
22/100: weight=tensor([0.6561, 0.7547], device='cuda:0', requires_grad=True) train_loss=[0.41571635 0.4602627 ], train_acc=[0.86495 0.84555]
24/100: weight=tensor([0.6388, 0.7694], device='cuda:0', requires_grad=True) train_loss=[0.41136917 0.4587614 ], train_acc=[0.8659  0.84595]
26/100: weight=tensor([0.6649, 0.7469], device='cuda:0', requires_grad=True) train_loss=[0.39478174 0.44057134], train_acc=[0.8711  0.85205]
28/100: weight=tensor([0.6327, 0.7744], device='cuda:0', requires_grad=True) train_loss=[0.39041638 0.4266179 ], train_acc=[0.8724 0.8584]
30/100: weight=tensor([0.6515, 0.7586], device='cuda:0', requires_grad=True) train_loss=[0.39145818 0.42044017], train_acc=[0.8751  0.85925]
32/100: weight=tensor([0.6711, 0.7414], device='cuda:0', requires_grad=True) train_loss=[0.37447318 0.4238655 ], train_acc=[0.8784 0.8589]
34/100: weight=tensor([0.5973, 0.8020], device='cuda:0', requires_grad=True) train_loss=[0.3731258 0.4192028], train_acc=[0.8783  0.86065]
36/100: weight=tensor([0.6843, 0.7292], device='cuda:0', requires_grad=True) train_loss=[0.40554592 0.43497714], train_acc=[0.86685 0.8545 ]
38/100: weight=tensor([0.6405, 0.7679], device='cuda:0', requires_grad=True) train_loss=[0.37332448 0.3971262 ], train_acc=[0.8771  0.86595]
40/100: weight=tensor([0.6675, 0.7446], device='cuda:0', requires_grad=True) train_loss=[0.35597602 0.40133533], train_acc=[0.8831 0.8678]
42/100: weight=tensor([0.6376, 0.7704], device='cuda:0', requires_grad=True) train_loss=[0.35180265 0.39575538], train_acc=[0.88305 0.86845]
44/100: weight=tensor([0.6820, 0.7313], device='cuda:0', requires_grad=True) train_loss=[0.35530746 0.3907805 ], train_acc=[0.8824 0.871 ]
46/100: weight=tensor([0.5980, 0.8015], device='cuda:0', requires_grad=True) train_loss=[0.34505698 0.39041224], train_acc=[0.8888 0.8694]
48/100: weight=tensor([0.6593, 0.7518], device='cuda:0', requires_grad=True) train_loss=[0.35862008 0.39591357], train_acc=[0.88305 0.86675]
50/100: weight=tensor([0.6443, 0.7648], device='cuda:0', requires_grad=True) train_loss=[0.34064868 0.38448104], train_acc=[0.88775 0.8687 ]
52/100: weight=tensor([0.6571, 0.7538], device='cuda:0', requires_grad=True) train_loss=[0.3361623  0.37409523], train_acc=[0.89105 0.87545]
54/100: weight=tensor([0.6661, 0.7459], device='cuda:0', requires_grad=True) train_loss=[0.3370198 0.4038637], train_acc=[0.88925 0.863  ]
56/100: weight=tensor([0.6057, 0.7957], device='cuda:0', requires_grad=True) train_loss=[0.3364831  0.37485385], train_acc=[0.8906 0.875 ]
58/100: weight=tensor([0.6544, 0.7562], device='cuda:0', requires_grad=True) train_loss=[0.33253327 0.37680453], train_acc=[0.8924  0.87495]
60/100: weight=tensor([0.6102, 0.7922], device='cuda:0', requires_grad=True) train_loss=[0.3490645  0.38073602], train_acc=[0.885  0.8707]
62/100: weight=tensor([0.6474, 0.7622], device='cuda:0', requires_grad=True) train_loss=[0.32885638 0.37639695], train_acc=[0.89295 0.87365]
64/100: weight=tensor([0.6727, 0.7399], device='cuda:0', requires_grad=True) train_loss=[0.32308292 0.36842415], train_acc=[0.8949 0.8785]
66/100: weight=tensor([0.6432, 0.7657], device='cuda:0', requires_grad=True) train_loss=[0.37015104 0.3703367 ], train_acc=[0.88175 0.8781 ]
68/100: weight=tensor([0.6320, 0.7750], device='cuda:0', requires_grad=True) train_loss=[0.3206031 0.3600861], train_acc=[0.8965  0.88085]
70/100: weight=tensor([0.6536, 0.7568], device='cuda:0', requires_grad=True) train_loss=[0.31892875 0.35890782], train_acc=[0.89665 0.88065]
72/100: weight=tensor([0.6504, 0.7596], device='cuda:0', requires_grad=True) train_loss=[0.3190306  0.36106783], train_acc=[0.8969  0.87885]
74/100: weight=tensor([0.6509, 0.7592], device='cuda:0', requires_grad=True) train_loss=[0.32141423 0.35481215], train_acc=[0.89435 0.88285]
76/100: weight=tensor([0.5994, 0.8005], device='cuda:0', requires_grad=True) train_loss=[0.3270417 0.3516929], train_acc=[0.8918  0.88275]
78/100: weight=tensor([0.6600, 0.7513], device='cuda:0', requires_grad=True) train_loss=[0.3203717  0.35336286], train_acc=[0.8959  0.88255]
80/100: weight=tensor([0.6793, 0.7338], device='cuda:0', requires_grad=True) train_loss=[0.31087124 0.3521239 ], train_acc=[0.8978  0.88355]
82/100: weight=tensor([0.6617, 0.7498], device='cuda:0', requires_grad=True) train_loss=[0.31546617 0.3498049 ], train_acc=[0.8976  0.88475]
84/100: weight=tensor([0.6467, 0.7627], device='cuda:0', requires_grad=True) train_loss=[0.313529   0.35090595], train_acc=[0.89785 0.8851 ]
86/100: weight=tensor([0.6520, 0.7582], device='cuda:0', requires_grad=True) train_loss=[0.30950645 0.34823224], train_acc=[0.89905 0.8857 ]
88/100: weight=tensor([0.6398, 0.7685], device='cuda:0', requires_grad=True) train_loss=[0.31493756 0.35176855], train_acc=[0.89695 0.88615]
90/100: weight=tensor([0.6533, 0.7571], device='cuda:0', requires_grad=True) train_loss=[0.3118292 0.3441818], train_acc=[0.8984  0.88705]
92/100: weight=tensor([0.5950, 0.8037], device='cuda:0', requires_grad=True) train_loss=[0.3083309  0.34234244], train_acc=[0.8983  0.88575]
94/100: weight=tensor([0.6810, 0.7323], device='cuda:0', requires_grad=True) train_loss=[0.31264275 0.36466965], train_acc=[0.8977  0.88105]
96/100: weight=tensor([0.6012, 0.7991], device='cuda:0', requires_grad=True) train_loss=[0.30420467 0.3419372 ], train_acc=[0.8991  0.88725]
98/100: weight=tensor([0.6459, 0.7634], device='cuda:0', requires_grad=True) train_loss=[0.30517   0.3522971], train_acc=[0.9008  0.88455]
100/100: weight=tensor([0.5955, 0.8034], device='cuda:0', requires_grad=True) train_loss=[0.3075874 0.3396441], train_acc=[0.89965 0.88745]
**** Time taken for mnist_1 = 3586.2426404953003
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7090, 0.7052], device='cuda:0', requires_grad=True) train_loss=[1.2185044 1.46049  ], train_acc=[0.59135 0.50185]
2/100: weight=tensor([0.6877, 0.7260], device='cuda:0', requires_grad=True) train_loss=[0.8901515 1.0147417], train_acc=[0.7061  0.65655]
4/100: weight=tensor([0.7172, 0.6969], device='cuda:0', requires_grad=True) train_loss=[0.64864504 0.77165234], train_acc=[0.7848  0.74295]
6/100: weight=tensor([0.7338, 0.6794], device='cuda:0', requires_grad=True) train_loss=[0.5733522  0.67903936], train_acc=[0.81065 0.7718 ]
8/100: weight=tensor([0.6447, 0.7644], device='cuda:0', requires_grad=True) train_loss=[0.50925505 0.6095107 ], train_acc=[0.8347  0.79535]
10/100: weight=tensor([0.7462, 0.6658], device='cuda:0', requires_grad=True) train_loss=[0.4798954  0.56799984], train_acc=[0.8426  0.80925]
12/100: weight=tensor([0.6820, 0.7313], device='cuda:0', requires_grad=True) train_loss=[0.45288908 0.5457355 ], train_acc=[0.85095 0.81585]
14/100: weight=tensor([0.6958, 0.7183], device='cuda:0', requires_grad=True) train_loss=[0.45583382 0.52535075], train_acc=[0.84935 0.82255]
16/100: weight=tensor([0.6188, 0.7856], device='cuda:0', requires_grad=True) train_loss=[0.40978864 0.5009825 ], train_acc=[0.8642 0.8303]
18/100: weight=tensor([0.6553, 0.7554], device='cuda:0', requires_grad=True) train_loss=[0.39844462 0.4750999 ], train_acc=[0.8673 0.8399]
20/100: weight=tensor([0.7019, 0.7123], device='cuda:0', requires_grad=True) train_loss=[0.38657254 0.46704286], train_acc=[0.8714  0.84545]
22/100: weight=tensor([0.7113, 0.7029], device='cuda:0', requires_grad=True) train_loss=[0.38476613 0.46322286], train_acc=[0.87275 0.8418 ]
24/100: weight=tensor([0.6851, 0.7284], device='cuda:0', requires_grad=True) train_loss=[0.3792259  0.44483185], train_acc=[0.87435 0.85105]
26/100: weight=tensor([0.6951, 0.7189], device='cuda:0', requires_grad=True) train_loss=[0.3729186 0.4467959], train_acc=[0.87635 0.84945]
28/100: weight=tensor([0.6464, 0.7630], device='cuda:0', requires_grad=True) train_loss=[0.35362408 0.42943698], train_acc=[0.8831 0.8558]
30/100: weight=tensor([0.6385, 0.7697], device='cuda:0', requires_grad=True) train_loss=[0.35243654 0.42348963], train_acc=[0.883   0.85695]
32/100: weight=tensor([0.7207, 0.6932], device='cuda:0', requires_grad=True) train_loss=[0.34810162 0.42075184], train_acc=[0.88435 0.8574 ]
34/100: weight=tensor([0.6431, 0.7658], device='cuda:0', requires_grad=True) train_loss=[0.34043446 0.4200564 ], train_acc=[0.88745 0.86055]
36/100: weight=tensor([0.6667, 0.7453], device='cuda:0', requires_grad=True) train_loss=[0.3365886  0.40125072], train_acc=[0.8885 0.8649]
38/100: weight=tensor([0.6817, 0.7316], device='cuda:0', requires_grad=True) train_loss=[0.35071585 0.4319366 ], train_acc=[0.88535 0.85515]
40/100: weight=tensor([0.7187, 0.6954], device='cuda:0', requires_grad=True) train_loss=[0.34044594 0.4023271 ], train_acc=[0.88725 0.86355]
42/100: weight=tensor([0.6781, 0.7349], device='cuda:0', requires_grad=True) train_loss=[0.32824534 0.3942006 ], train_acc=[0.893  0.8668]
44/100: weight=tensor([0.6711, 0.7413], device='cuda:0', requires_grad=True) train_loss=[0.32165638 0.3897266 ], train_acc=[0.894  0.8668]
46/100: weight=tensor([0.7096, 0.7046], device='cuda:0', requires_grad=True) train_loss=[0.32702005 0.38382164], train_acc=[0.89295 0.86865]
48/100: weight=tensor([0.6674, 0.7447], device='cuda:0', requires_grad=True) train_loss=[0.32082698 0.39218664], train_acc=[0.8934 0.8661]
50/100: weight=tensor([0.6789, 0.7343], device='cuda:0', requires_grad=True) train_loss=[0.32481793 0.38761464], train_acc=[0.89335 0.86895]
52/100: weight=tensor([0.6826, 0.7308], device='cuda:0', requires_grad=True) train_loss=[0.31053972 0.37563094], train_acc=[0.8973 0.8723]
54/100: weight=tensor([0.7088, 0.7054], device='cuda:0', requires_grad=True) train_loss=[0.30930984 0.37283275], train_acc=[0.8982 0.8742]
56/100: weight=tensor([0.6875, 0.7262], device='cuda:0', requires_grad=True) train_loss=[0.31470963 0.37483934], train_acc=[0.89695 0.87185]
58/100: weight=tensor([0.6772, 0.7358], device='cuda:0', requires_grad=True) train_loss=[0.3201172 0.3717764], train_acc=[0.8945  0.87435]
60/100: weight=tensor([0.6901, 0.7238], device='cuda:0', requires_grad=True) train_loss=[0.3181984  0.37514243], train_acc=[0.89525 0.87415]
62/100: weight=tensor([0.7124, 0.7018], device='cuda:0', requires_grad=True) train_loss=[0.30322903 0.36661503], train_acc=[0.89995 0.8778 ]
64/100: weight=tensor([0.6684, 0.7438], device='cuda:0', requires_grad=True) train_loss=[0.3025094 0.3687172], train_acc=[0.90095 0.8754 ]
66/100: weight=tensor([0.7191, 0.6949], device='cuda:0', requires_grad=True) train_loss=[0.304374   0.37546057], train_acc=[0.8993 0.8734]
68/100: weight=tensor([0.6776, 0.7354], device='cuda:0', requires_grad=True) train_loss=[0.30123723 0.3655874 ], train_acc=[0.90065 0.8776 ]
70/100: weight=tensor([0.6934, 0.7205], device='cuda:0', requires_grad=True) train_loss=[0.29900116 0.3617946 ], train_acc=[0.9028 0.8799]
72/100: weight=tensor([0.7134, 0.7007], device='cuda:0', requires_grad=True) train_loss=[0.29870442 0.36408046], train_acc=[0.9008 0.8784]
74/100: weight=tensor([0.6675, 0.7446], device='cuda:0', requires_grad=True) train_loss=[0.3018409  0.35685042], train_acc=[0.9018 0.8812]
76/100: weight=tensor([0.6982, 0.7159], device='cuda:0', requires_grad=True) train_loss=[0.29791543 0.3623512 ], train_acc=[0.90225 0.88   ]
78/100: weight=tensor([0.7069, 0.7073], device='cuda:0', requires_grad=True) train_loss=[0.2913664 0.3538064], train_acc=[0.90445 0.88255]
80/100: weight=tensor([0.6754, 0.7375], device='cuda:0', requires_grad=True) train_loss=[0.2926976  0.35984153], train_acc=[0.9039 0.8806]
82/100: weight=tensor([0.7236, 0.6903], device='cuda:0', requires_grad=True) train_loss=[0.29666048 0.35903427], train_acc=[0.90455 0.88025]
84/100: weight=tensor([0.7290, 0.6846], device='cuda:0', requires_grad=True) train_loss=[0.299194   0.35536137], train_acc=[0.90255 0.88025]
86/100: weight=tensor([0.7107, 0.7035], device='cuda:0', requires_grad=True) train_loss=[0.28918454 0.3546056 ], train_acc=[0.9047  0.88135]
88/100: weight=tensor([0.6927, 0.7213], device='cuda:0', requires_grad=True) train_loss=[0.29174536 0.35857275], train_acc=[0.90535 0.881  ]
90/100: weight=tensor([0.7055, 0.7087], device='cuda:0', requires_grad=True) train_loss=[0.28742012 0.34601992], train_acc=[0.9055  0.88335]
92/100: weight=tensor([0.6930, 0.7209], device='cuda:0', requires_grad=True) train_loss=[0.28787178 0.3592087 ], train_acc=[0.90635 0.87955]
94/100: weight=tensor([0.6853, 0.7283], device='cuda:0', requires_grad=True) train_loss=[0.29459774 0.35220864], train_acc=[0.90345 0.88095]
96/100: weight=tensor([0.6923, 0.7216], device='cuda:0', requires_grad=True) train_loss=[0.28470126 0.3460779 ], train_acc=[0.90635 0.88355]
98/100: weight=tensor([0.6820, 0.7314], device='cuda:0', requires_grad=True) train_loss=[0.28734657 0.34372252], train_acc=[0.9053 0.8844]
100/100: weight=tensor([0.6905, 0.7233], device='cuda:0', requires_grad=True) train_loss=[0.2888383  0.34393206], train_acc=[0.90555 0.88405]
**** Time taken for mnist_2 = 3594.3444423675537
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.5903, 0.8072], device='cuda:0', requires_grad=True) train_loss=[1.5065196 1.7358831], train_acc=[0.4922  0.40765]
2/100: weight=tensor([0.6433, 0.7657], device='cuda:0', requires_grad=True) train_loss=[1.0969267 1.2108667], train_acc=[0.6348 0.5976]
4/100: weight=tensor([0.6684, 0.7438], device='cuda:0', requires_grad=True) train_loss=[0.7770073 0.8933743], train_acc=[0.74475 0.6994 ]
6/100: weight=tensor([0.6265, 0.7794], device='cuda:0', requires_grad=True) train_loss=[0.64355606 0.76144814], train_acc=[0.79155 0.74615]
8/100: weight=tensor([0.6234, 0.7819], device='cuda:0', requires_grad=True) train_loss=[0.5752657 0.665041 ], train_acc=[0.81175 0.77785]
10/100: weight=tensor([0.6174, 0.7867], device='cuda:0', requires_grad=True) train_loss=[0.54223335 0.6254288 ], train_acc=[0.823   0.79105]
12/100: weight=tensor([0.6630, 0.7487], device='cuda:0', requires_grad=True) train_loss=[0.5016744 0.5991653], train_acc=[0.83625 0.79775]
14/100: weight=tensor([0.6789, 0.7343], device='cuda:0', requires_grad=True) train_loss=[0.46779275 0.5648065 ], train_acc=[0.8472  0.81365]
16/100: weight=tensor([0.5986, 0.8011], device='cuda:0', requires_grad=True) train_loss=[0.45006713 0.54259986], train_acc=[0.85485 0.8196 ]
18/100: weight=tensor([0.6207, 0.7841], device='cuda:0', requires_grad=True) train_loss=[0.4462109 0.5418665], train_acc=[0.85385 0.82245]
20/100: weight=tensor([0.6697, 0.7426], device='cuda:0', requires_grad=True) train_loss=[0.4204357  0.50251615], train_acc=[0.8609  0.83285]
22/100: weight=tensor([0.6347, 0.7728], device='cuda:0', requires_grad=True) train_loss=[0.4270014  0.49855274], train_acc=[0.85855 0.8328 ]
24/100: weight=tensor([0.6664, 0.7456], device='cuda:0', requires_grad=True) train_loss=[0.40338817 0.48236606], train_acc=[0.86905 0.8379 ]
26/100: weight=tensor([0.6410, 0.7676], device='cuda:0', requires_grad=True) train_loss=[0.40594357 0.47701448], train_acc=[0.8671  0.83795]
28/100: weight=tensor([0.6441, 0.7650], device='cuda:0', requires_grad=True) train_loss=[0.39638916 0.47062907], train_acc=[0.87115 0.8418 ]
30/100: weight=tensor([0.6563, 0.7545], device='cuda:0', requires_grad=True) train_loss=[0.3966321  0.44951513], train_acc=[0.869   0.85015]
32/100: weight=tensor([0.6233, 0.7820], device='cuda:0', requires_grad=True) train_loss=[0.38820118 0.44163767], train_acc=[0.87425 0.85155]
34/100: weight=tensor([0.6315, 0.7754], device='cuda:0', requires_grad=True) train_loss=[0.3774761  0.45261317], train_acc=[0.87635 0.84715]
36/100: weight=tensor([0.6735, 0.7392], device='cuda:0', requires_grad=True) train_loss=[0.37235013 0.44834554], train_acc=[0.878  0.8473]
38/100: weight=tensor([0.6547, 0.7559], device='cuda:0', requires_grad=True) train_loss=[0.36661202 0.43391368], train_acc=[0.881   0.85565]
40/100: weight=tensor([0.6739, 0.7388], device='cuda:0', requires_grad=True) train_loss=[0.36102027 0.4262808 ], train_acc=[0.8813  0.85635]
42/100: weight=tensor([0.6703, 0.7421], device='cuda:0', requires_grad=True) train_loss=[0.36380917 0.4204673 ], train_acc=[0.87915 0.8592 ]
44/100: weight=tensor([0.6647, 0.7471], device='cuda:0', requires_grad=True) train_loss=[0.3543929  0.40809575], train_acc=[0.88475 0.864  ]
46/100: weight=tensor([0.6772, 0.7358], device='cuda:0', requires_grad=True) train_loss=[0.35327086 0.4049495 ], train_acc=[0.88385 0.8646 ]
48/100: weight=tensor([0.6631, 0.7486], device='cuda:0', requires_grad=True) train_loss=[0.3602795  0.41384077], train_acc=[0.8833 0.864 ]
50/100: weight=tensor([0.6326, 0.7745], device='cuda:0', requires_grad=True) train_loss=[0.35934654 0.4154092 ], train_acc=[0.8809  0.86115]
52/100: weight=tensor([0.6690, 0.7432], device='cuda:0', requires_grad=True) train_loss=[0.3499052  0.40994027], train_acc=[0.8867 0.8635]
54/100: weight=tensor([0.6683, 0.7439], device='cuda:0', requires_grad=True) train_loss=[0.35574603 0.4100991 ], train_acc=[0.88325 0.8642 ]
56/100: weight=tensor([0.6489, 0.7609], device='cuda:0', requires_grad=True) train_loss=[0.34796304 0.4057727 ], train_acc=[0.88415 0.8652 ]
58/100: weight=tensor([0.6730, 0.7396], device='cuda:0', requires_grad=True) train_loss=[0.3342258  0.39016265], train_acc=[0.8888  0.87095]
60/100: weight=tensor([0.7315, 0.6819], device='cuda:0', requires_grad=True) train_loss=[0.3430698  0.39044392], train_acc=[0.8852  0.86915]
62/100: weight=tensor([0.6735, 0.7391], device='cuda:0', requires_grad=True) train_loss=[0.34143817 0.40360042], train_acc=[0.8879 0.8655]
64/100: weight=tensor([0.6527, 0.7576], device='cuda:0', requires_grad=True) train_loss=[0.33217934 0.38598147], train_acc=[0.8914  0.87195]
66/100: weight=tensor([0.6500, 0.7599], device='cuda:0', requires_grad=True) train_loss=[0.33173433 0.37802187], train_acc=[0.88955 0.87465]
68/100: weight=tensor([0.6807, 0.7326], device='cuda:0', requires_grad=True) train_loss=[0.33251408 0.39736438], train_acc=[0.88895 0.8679 ]
70/100: weight=tensor([0.6356, 0.7720], device='cuda:0', requires_grad=True) train_loss=[0.3260376  0.38019305], train_acc=[0.89245 0.87535]
72/100: weight=tensor([0.5780, 0.8160], device='cuda:0', requires_grad=True) train_loss=[0.3229489 0.3731712], train_acc=[0.89315 0.87775]
74/100: weight=tensor([0.6717, 0.7408], device='cuda:0', requires_grad=True) train_loss=[0.32131    0.37825957], train_acc=[0.89185 0.87435]
76/100: weight=tensor([0.6471, 0.7624], device='cuda:0', requires_grad=True) train_loss=[0.32934085 0.38460702], train_acc=[0.8925 0.8725]
78/100: weight=tensor([0.6581, 0.7529], device='cuda:0', requires_grad=True) train_loss=[0.32183826 0.37245846], train_acc=[0.89195 0.87735]
80/100: weight=tensor([0.6262, 0.7797], device='cuda:0', requires_grad=True) train_loss=[0.32124054 0.36933398], train_acc=[0.89655 0.8783 ]
82/100: weight=tensor([0.6566, 0.7542], device='cuda:0', requires_grad=True) train_loss=[0.34253168 0.38045305], train_acc=[0.8874  0.87365]
84/100: weight=tensor([0.6797, 0.7335], device='cuda:0', requires_grad=True) train_loss=[0.31856754 0.37194404], train_acc=[0.89505 0.87715]
86/100: weight=tensor([0.6220, 0.7830], device='cuda:0', requires_grad=True) train_loss=[0.31455994 0.3654285 ], train_acc=[0.89515 0.8808 ]
88/100: weight=tensor([0.6934, 0.7206], device='cuda:0', requires_grad=True) train_loss=[0.31488112 0.3591455 ], train_acc=[0.8953  0.88165]
90/100: weight=tensor([0.6542, 0.7563], device='cuda:0', requires_grad=True) train_loss=[0.32508212 0.36781234], train_acc=[0.8928  0.87765]
92/100: weight=tensor([0.6141, 0.7892], device='cuda:0', requires_grad=True) train_loss=[0.31127444 0.363373  ], train_acc=[0.8973  0.88055]
94/100: weight=tensor([0.6601, 0.7512], device='cuda:0', requires_grad=True) train_loss=[0.3154604  0.36107495], train_acc=[0.89595 0.88185]
96/100: weight=tensor([0.6361, 0.7716], device='cuda:0', requires_grad=True) train_loss=[0.31102654 0.36410806], train_acc=[0.89685 0.88135]
98/100: weight=tensor([0.6331, 0.7741], device='cuda:0', requires_grad=True) train_loss=[0.30500934 0.3537156 ], train_acc=[0.8986 0.883 ]
100/100: weight=tensor([0.6320, 0.7749], device='cuda:0', requires_grad=True) train_loss=[0.31858194 0.3574688 ], train_acc=[0.89735 0.88285]
**** Time taken for mnist_3 = 3651.0421414375305
loading dataset mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7068, 0.7074], device='cuda:0', requires_grad=True) train_loss=[1.5280745 1.7327179], train_acc=[0.4829  0.39955]
2/100: weight=tensor([0.7316, 0.6818], device='cuda:0', requires_grad=True) train_loss=[1.011393  1.1916939], train_acc=[0.6663 0.5951]
4/100: weight=tensor([0.7319, 0.6815], device='cuda:0', requires_grad=True) train_loss=[0.75200355 0.8673522 ], train_acc=[0.75705 0.70675]
6/100: weight=tensor([0.7096, 0.7046], device='cuda:0', requires_grad=True) train_loss=[0.63290733 0.7291674 ], train_acc=[0.79415 0.7538 ]
8/100: weight=tensor([0.7139, 0.7002], device='cuda:0', requires_grad=True) train_loss=[0.554136  0.6634423], train_acc=[0.8191 0.7789]
10/100: weight=tensor([0.7226, 0.6913], device='cuda:0', requires_grad=True) train_loss=[0.51293314 0.613924  ], train_acc=[0.83175 0.7957 ]
12/100: weight=tensor([0.7286, 0.6849], device='cuda:0', requires_grad=True) train_loss=[0.49652675 0.5699776 ], train_acc=[0.8371  0.80935]
14/100: weight=tensor([0.6999, 0.7142], device='cuda:0', requires_grad=True) train_loss=[0.46125755 0.55598944], train_acc=[0.84825 0.81485]
16/100: weight=tensor([0.6964, 0.7176], device='cuda:0', requires_grad=True) train_loss=[0.45818505 0.52845067], train_acc=[0.8501  0.82155]
18/100: weight=tensor([0.7168, 0.6973], device='cuda:0', requires_grad=True) train_loss=[0.43879277 0.5134732 ], train_acc=[0.8577  0.82665]
20/100: weight=tensor([0.6394, 0.7689], device='cuda:0', requires_grad=True) train_loss=[0.42104772 0.49475214], train_acc=[0.86165 0.83335]
22/100: weight=tensor([0.7089, 0.7053], device='cuda:0', requires_grad=True) train_loss=[0.43658796 0.4878245 ], train_acc=[0.85655 0.83805]
24/100: weight=tensor([0.7014, 0.7128], device='cuda:0', requires_grad=True) train_loss=[0.41248825 0.47630423], train_acc=[0.8666 0.8407]
26/100: weight=tensor([0.7214, 0.6925], device='cuda:0', requires_grad=True) train_loss=[0.41112307 0.47311223], train_acc=[0.8656 0.8412]
28/100: weight=tensor([0.6733, 0.7393], device='cuda:0', requires_grad=True) train_loss=[0.3766263  0.45524868], train_acc=[0.8772 0.8485]
30/100: weight=tensor([0.6704, 0.7420], device='cuda:0', requires_grad=True) train_loss=[0.37175447 0.4601711 ], train_acc=[0.8804 0.8449]
32/100: weight=tensor([0.6962, 0.7179], device='cuda:0', requires_grad=True) train_loss=[0.3814016  0.48487753], train_acc=[0.87535 0.8355 ]
34/100: weight=tensor([0.7234, 0.6904], device='cuda:0', requires_grad=True) train_loss=[0.367801   0.43926477], train_acc=[0.87955 0.85285]
36/100: weight=tensor([0.6945, 0.7194], device='cuda:0', requires_grad=True) train_loss=[0.37230873 0.4428404 ], train_acc=[0.8785  0.85295]
38/100: weight=tensor([0.7054, 0.7088], device='cuda:0', requires_grad=True) train_loss=[0.36181143 0.42374402], train_acc=[0.88225 0.86025]
40/100: weight=tensor([0.6736, 0.7391], device='cuda:0', requires_grad=True) train_loss=[0.3777654 0.4532666], train_acc=[0.87485 0.84825]
42/100: weight=tensor([0.6756, 0.7373], device='cuda:0', requires_grad=True) train_loss=[0.35048828 0.42176428], train_acc=[0.88615 0.86095]
44/100: weight=tensor([0.6595, 0.7517], device='cuda:0', requires_grad=True) train_loss=[0.37694588 0.41939595], train_acc=[0.875   0.85895]
46/100: weight=tensor([0.6820, 0.7314], device='cuda:0', requires_grad=True) train_loss=[0.3617246  0.42740372], train_acc=[0.88285 0.85655]
48/100: weight=tensor([0.6685, 0.7437], device='cuda:0', requires_grad=True) train_loss=[0.33667606 0.4050333 ], train_acc=[0.89095 0.86615]
50/100: weight=tensor([0.7253, 0.6884], device='cuda:0', requires_grad=True) train_loss=[0.33167782 0.40578038], train_acc=[0.89445 0.8658 ]
52/100: weight=tensor([0.6700, 0.7423], device='cuda:0', requires_grad=True) train_loss=[0.34478065 0.42475012], train_acc=[0.88645 0.85995]
54/100: weight=tensor([0.6912, 0.7226], device='cuda:0', requires_grad=True) train_loss=[0.35071275 0.40261346], train_acc=[0.88435 0.86655]
56/100: weight=tensor([0.7042, 0.7100], device='cuda:0', requires_grad=True) train_loss=[0.3285295 0.3974109], train_acc=[0.8955 0.8685]
58/100: weight=tensor([0.6716, 0.7409], device='cuda:0', requires_grad=True) train_loss=[0.33545515 0.40826088], train_acc=[0.89045 0.8639 ]
60/100: weight=tensor([0.6818, 0.7315], device='cuda:0', requires_grad=True) train_loss=[0.33165902 0.39563635], train_acc=[0.89235 0.86775]
62/100: weight=tensor([0.6866, 0.7270], device='cuda:0', requires_grad=True) train_loss=[0.32946682 0.3910372 ], train_acc=[0.8909  0.87185]
64/100: weight=tensor([0.6750, 0.7379], device='cuda:0', requires_grad=True) train_loss=[0.32299596 0.40264052], train_acc=[0.8954  0.86665]
66/100: weight=tensor([0.6445, 0.7646], device='cuda:0', requires_grad=True) train_loss=[0.32677934 0.42400202], train_acc=[0.89315 0.8564 ]
68/100: weight=tensor([0.6784, 0.7347], device='cuda:0', requires_grad=True) train_loss=[0.31560898 0.39464068], train_acc=[0.89595 0.8693 ]
70/100: weight=tensor([0.6625, 0.7491], device='cuda:0', requires_grad=True) train_loss=[0.31296372 0.38685104], train_acc=[0.89735 0.8708 ]
72/100: weight=tensor([0.7301, 0.6833], device='cuda:0', requires_grad=True) train_loss=[0.3127568  0.38917235], train_acc=[0.89845 0.87095]
74/100: weight=tensor([0.6795, 0.7337], device='cuda:0', requires_grad=True) train_loss=[0.32820845 0.39915523], train_acc=[0.894 0.866]
76/100: weight=tensor([0.6615, 0.7499], device='cuda:0', requires_grad=True) train_loss=[0.32457304 0.38263857], train_acc=[0.8938 0.8707]
78/100: weight=tensor([0.7186, 0.6955], device='cuda:0', requires_grad=True) train_loss=[0.31241855 0.3798098 ], train_acc=[0.89995 0.87355]
80/100: weight=tensor([0.7350, 0.6780], device='cuda:0', requires_grad=True) train_loss=[0.33129933 0.3845071 ], train_acc=[0.893  0.8723]
82/100: weight=tensor([0.6711, 0.7414], device='cuda:0', requires_grad=True) train_loss=[0.31518865 0.3833421 ], train_acc=[0.8966  0.87405]
84/100: weight=tensor([0.7146, 0.6995], device='cuda:0', requires_grad=True) train_loss=[0.30313313 0.3695171 ], train_acc=[0.90205 0.87715]
86/100: weight=tensor([0.6907, 0.7231], device='cuda:0', requires_grad=True) train_loss=[0.30814204 0.37306944], train_acc=[0.89995 0.8746 ]
88/100: weight=tensor([0.7358, 0.6772], device='cuda:0', requires_grad=True) train_loss=[0.30895752 0.3744787 ], train_acc=[0.8999  0.87705]
90/100: weight=tensor([0.6926, 0.7213], device='cuda:0', requires_grad=True) train_loss=[0.3195994  0.36575022], train_acc=[0.89675 0.8778 ]
92/100: weight=tensor([0.7096, 0.7047], device='cuda:0', requires_grad=True) train_loss=[0.30168748 0.37738255], train_acc=[0.9009 0.8749]
94/100: weight=tensor([0.6994, 0.7147], device='cuda:0', requires_grad=True) train_loss=[0.29907465 0.37355763], train_acc=[0.90235 0.8763 ]
96/100: weight=tensor([0.7158, 0.6983], device='cuda:0', requires_grad=True) train_loss=[0.30342245 0.36871198], train_acc=[0.90065 0.87755]
98/100: weight=tensor([0.7005, 0.7137], device='cuda:0', requires_grad=True) train_loss=[0.3077804 0.3627783], train_acc=[0.89865 0.88025]
100/100: weight=tensor([0.6647, 0.7471], device='cuda:0', requires_grad=True) train_loss=[0.29756767 0.36970985], train_acc=[0.904   0.87515]
**** Time taken for mnist_4 = 3685.0150842666626
**** Time taken for mnist = 18055.09316587448
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7021, 0.7121], device='cuda:0', requires_grad=True) train_loss=[1.3057108 1.3822087], train_acc=[0.51285 0.4953 ]
2/100: weight=tensor([0.7322, 0.6811], device='cuda:0', requires_grad=True) train_loss=[1.0511527 1.1685965], train_acc=[0.59805 0.5743 ]
4/100: weight=tensor([0.7457, 0.6663], device='cuda:0', requires_grad=True) train_loss=[0.88965726 0.9718839 ], train_acc=[0.6619  0.63825]
6/100: weight=tensor([0.6971, 0.7170], device='cuda:0', requires_grad=True) train_loss=[0.81107354 0.86935526], train_acc=[0.6909 0.683 ]
8/100: weight=tensor([0.7065, 0.7077], device='cuda:0', requires_grad=True) train_loss=[0.765833  0.8267697], train_acc=[0.7134 0.6983]
10/100: weight=tensor([0.7200, 0.6940], device='cuda:0', requires_grad=True) train_loss=[0.73946923 0.78746986], train_acc=[0.72185 0.7076 ]
12/100: weight=tensor([0.7435, 0.6688], device='cuda:0', requires_grad=True) train_loss=[0.7664042 0.7778483], train_acc=[0.709  0.7146]
14/100: weight=tensor([0.7037, 0.7105], device='cuda:0', requires_grad=True) train_loss=[0.7216799 0.7437331], train_acc=[0.72995 0.721  ]
16/100: weight=tensor([0.7028, 0.7114], device='cuda:0', requires_grad=True) train_loss=[0.6917269 0.7143292], train_acc=[0.73815 0.73065]
18/100: weight=tensor([0.7194, 0.6946], device='cuda:0', requires_grad=True) train_loss=[0.68842024 0.70506084], train_acc=[0.7344  0.74065]
20/100: weight=tensor([0.7345, 0.6786], device='cuda:0', requires_grad=True) train_loss=[0.662178 0.691655], train_acc=[0.751  0.7427]
22/100: weight=tensor([0.6910, 0.7229], device='cuda:0', requires_grad=True) train_loss=[0.6579281  0.68577844], train_acc=[0.75395 0.74545]
24/100: weight=tensor([0.6204, 0.7843], device='cuda:0', requires_grad=True) train_loss=[0.6561597  0.67031044], train_acc=[0.7535  0.75045]
26/100: weight=tensor([0.6683, 0.7439], device='cuda:0', requires_grad=True) train_loss=[0.6434152  0.66761684], train_acc=[0.75895 0.7539 ]
28/100: weight=tensor([0.7074, 0.7068], device='cuda:0', requires_grad=True) train_loss=[0.6349586 0.6602541], train_acc=[0.76115 0.75745]
30/100: weight=tensor([0.6874, 0.7263], device='cuda:0', requires_grad=True) train_loss=[0.6303799 0.6475387], train_acc=[0.76245 0.7607 ]
32/100: weight=tensor([0.7455, 0.6665], device='cuda:0', requires_grad=True) train_loss=[0.6356196  0.64712006], train_acc=[0.7589 0.7616]
34/100: weight=tensor([0.6600, 0.7512], device='cuda:0', requires_grad=True) train_loss=[0.61948675 0.6342583 ], train_acc=[0.7704 0.7665]
36/100: weight=tensor([0.6429, 0.7660], device='cuda:0', requires_grad=True) train_loss=[0.61746633 0.63271374], train_acc=[0.7693  0.76535]
38/100: weight=tensor([0.7185, 0.6956], device='cuda:0', requires_grad=True) train_loss=[0.6320845  0.62937796], train_acc=[0.7652  0.76865]
40/100: weight=tensor([0.6883, 0.7254], device='cuda:0', requires_grad=True) train_loss=[0.60575396 0.62667453], train_acc=[0.7724 0.7673]
42/100: weight=tensor([0.7133, 0.7008], device='cuda:0', requires_grad=True) train_loss=[0.59833175 0.6205267 ], train_acc=[0.77565 0.7712 ]
44/100: weight=tensor([0.7331, 0.6802], device='cuda:0', requires_grad=True) train_loss=[0.6015489 0.6088811], train_acc=[0.77175 0.7773 ]
46/100: weight=tensor([0.6759, 0.7370], device='cuda:0', requires_grad=True) train_loss=[0.6052079  0.63548845], train_acc=[0.7719  0.76975]
48/100: weight=tensor([0.7247, 0.6891], device='cuda:0', requires_grad=True) train_loss=[0.5893306 0.6226025], train_acc=[0.7794 0.7711]
50/100: weight=tensor([0.6884, 0.7253], device='cuda:0', requires_grad=True) train_loss=[0.5961437  0.61791706], train_acc=[0.77655 0.7695 ]
52/100: weight=tensor([0.7018, 0.7124], device='cuda:0', requires_grad=True) train_loss=[0.5817873  0.60033387], train_acc=[0.78415 0.77975]
54/100: weight=tensor([0.7094, 0.7048], device='cuda:0', requires_grad=True) train_loss=[0.59183425 0.6124313 ], train_acc=[0.77765 0.7694 ]
56/100: weight=tensor([0.6478, 0.7618], device='cuda:0', requires_grad=True) train_loss=[0.595066   0.60761154], train_acc=[0.77345 0.77605]
58/100: weight=tensor([0.7151, 0.6990], device='cuda:0', requires_grad=True) train_loss=[0.5739465  0.59572655], train_acc=[0.78695 0.7786 ]
60/100: weight=tensor([0.6797, 0.7335], device='cuda:0', requires_grad=True) train_loss=[0.57124525 0.5930634 ], train_acc=[0.78315 0.78665]
62/100: weight=tensor([0.7712, 0.6366], device='cuda:0', requires_grad=True) train_loss=[0.5708657  0.59462154], train_acc=[0.789   0.78275]
64/100: weight=tensor([0.7085, 0.7057], device='cuda:0', requires_grad=True) train_loss=[0.57208145 0.5875673 ], train_acc=[0.7852  0.78575]
66/100: weight=tensor([0.6695, 0.7428], device='cuda:0', requires_grad=True) train_loss=[0.56707245 0.5840623 ], train_acc=[0.7878  0.78515]
68/100: weight=tensor([0.7182, 0.6959], device='cuda:0', requires_grad=True) train_loss=[0.58465   0.5872229], train_acc=[0.7806 0.7839]
70/100: weight=tensor([0.6985, 0.7156], device='cuda:0', requires_grad=True) train_loss=[0.58172244 0.5926386 ], train_acc=[0.783  0.7819]
72/100: weight=tensor([0.6987, 0.7154], device='cuda:0', requires_grad=True) train_loss=[0.56972194 0.57771623], train_acc=[0.7888 0.7873]
74/100: weight=tensor([0.7239, 0.6899], device='cuda:0', requires_grad=True) train_loss=[0.56209373 0.5821978 ], train_acc=[0.7894 0.7839]
76/100: weight=tensor([0.6808, 0.7325], device='cuda:0', requires_grad=True) train_loss=[0.5743985 0.584671 ], train_acc=[0.78605 0.78295]
78/100: weight=tensor([0.6537, 0.7567], device='cuda:0', requires_grad=True) train_loss=[0.56055903 0.57796717], train_acc=[0.7902  0.78725]
80/100: weight=tensor([0.6919, 0.7220], device='cuda:0', requires_grad=True) train_loss=[0.56689703 0.5823428 ], train_acc=[0.78765 0.78685]
82/100: weight=tensor([0.7040, 0.7102], device='cuda:0', requires_grad=True) train_loss=[0.55355585 0.59040755], train_acc=[0.79325 0.7854 ]
84/100: weight=tensor([0.7149, 0.6993], device='cuda:0', requires_grad=True) train_loss=[0.5628289  0.57707083], train_acc=[0.79005 0.7901 ]
86/100: weight=tensor([0.7072, 0.7070], device='cuda:0', requires_grad=True) train_loss=[0.55092925 0.57425   ], train_acc=[0.7942  0.78995]
88/100: weight=tensor([0.6886, 0.7252], device='cuda:0', requires_grad=True) train_loss=[0.55277854 0.57077855], train_acc=[0.79595 0.79255]
90/100: weight=tensor([0.6821, 0.7313], device='cuda:0', requires_grad=True) train_loss=[0.5559981 0.5758385], train_acc=[0.7913 0.7893]
92/100: weight=tensor([0.7369, 0.6760], device='cuda:0', requires_grad=True) train_loss=[0.56274384 0.5775087 ], train_acc=[0.7929  0.78565]
94/100: weight=tensor([0.6999, 0.7142], device='cuda:0', requires_grad=True) train_loss=[0.5475127  0.56332517], train_acc=[0.79555 0.79295]
96/100: weight=tensor([0.7066, 0.7076], device='cuda:0', requires_grad=True) train_loss=[0.55367106 0.56495893], train_acc=[0.7961  0.79505]
98/100: weight=tensor([0.7399, 0.6727], device='cuda:0', requires_grad=True) train_loss=[0.5610191  0.56225795], train_acc=[0.7959  0.79355]
100/100: weight=tensor([0.6825, 0.7309], device='cuda:0', requires_grad=True) train_loss=[0.5547897  0.56308115], train_acc=[0.79385 0.79395]
**** Time taken for fashion_0 = 3652.922260761261
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7593, 0.6507], device='cuda:0', requires_grad=True) train_loss=[1.2439184 1.3216165], train_acc=[0.5278 0.512 ]
2/100: weight=tensor([0.7547, 0.6560], device='cuda:0', requires_grad=True) train_loss=[1.0020622 1.1086389], train_acc=[0.62535 0.59445]
4/100: weight=tensor([0.7101, 0.7041], device='cuda:0', requires_grad=True) train_loss=[0.9039457  0.94554836], train_acc=[0.6677 0.655 ]
6/100: weight=tensor([0.6634, 0.7482], device='cuda:0', requires_grad=True) train_loss=[0.8832822  0.89446056], train_acc=[0.6709 0.6758]
8/100: weight=tensor([0.7110, 0.7032], device='cuda:0', requires_grad=True) train_loss=[0.89635825 0.8540812 ], train_acc=[0.6757  0.68755]
10/100: weight=tensor([0.6781, 0.7349], device='cuda:0', requires_grad=True) train_loss=[0.8257423  0.83201474], train_acc=[0.6937 0.6967]
12/100: weight=tensor([0.6856, 0.7279], device='cuda:0', requires_grad=True) train_loss=[0.76065546 0.78269076], train_acc=[0.723  0.7098]
14/100: weight=tensor([0.6457, 0.7636], device='cuda:0', requires_grad=True) train_loss=[0.7516747  0.77045894], train_acc=[0.72345 0.7148 ]
16/100: weight=tensor([0.7220, 0.6919], device='cuda:0', requires_grad=True) train_loss=[0.723693   0.73927027], train_acc=[0.732  0.7313]
18/100: weight=tensor([0.7161, 0.6980], device='cuda:0', requires_grad=True) train_loss=[0.7091945  0.72586364], train_acc=[0.735  0.7302]
20/100: weight=tensor([0.7163, 0.6978], device='cuda:0', requires_grad=True) train_loss=[0.69258434 0.72084516], train_acc=[0.7453  0.73465]
22/100: weight=tensor([0.6799, 0.7333], device='cuda:0', requires_grad=True) train_loss=[0.6910437 0.743931 ], train_acc=[0.74345 0.7254 ]
24/100: weight=tensor([0.6574, 0.7535], device='cuda:0', requires_grad=True) train_loss=[0.6746082 0.7166536], train_acc=[0.74945 0.7396 ]
26/100: weight=tensor([0.6847, 0.7288], device='cuda:0', requires_grad=True) train_loss=[0.7379679 0.682829 ], train_acc=[0.7261 0.7502]
28/100: weight=tensor([0.7112, 0.7030], device='cuda:0', requires_grad=True) train_loss=[0.6623857 0.6841387], train_acc=[0.75515 0.7472 ]
30/100: weight=tensor([0.6920, 0.7219], device='cuda:0', requires_grad=True) train_loss=[0.6549839  0.66843736], train_acc=[0.75685 0.7541 ]
32/100: weight=tensor([0.6981, 0.7160], device='cuda:0', requires_grad=True) train_loss=[0.6518637 0.6642163], train_acc=[0.7568  0.75535]
34/100: weight=tensor([0.7009, 0.7132], device='cuda:0', requires_grad=True) train_loss=[0.6607954 0.6619263], train_acc=[0.7555 0.7578]
36/100: weight=tensor([0.7693, 0.6389], device='cuda:0', requires_grad=True) train_loss=[0.6347435 0.6498621], train_acc=[0.76545 0.76155]
38/100: weight=tensor([0.7087, 0.7055], device='cuda:0', requires_grad=True) train_loss=[0.63592374 0.6558611 ], train_acc=[0.76735 0.75875]
40/100: weight=tensor([0.6155, 0.7881], device='cuda:0', requires_grad=True) train_loss=[0.6297009  0.65593797], train_acc=[0.76515 0.7554 ]
42/100: weight=tensor([0.6988, 0.7153], device='cuda:0', requires_grad=True) train_loss=[0.6330367 0.6687136], train_acc=[0.76535 0.7552 ]
44/100: weight=tensor([0.6619, 0.7496], device='cuda:0', requires_grad=True) train_loss=[0.62143826 0.6537089 ], train_acc=[0.7722  0.75965]
46/100: weight=tensor([0.6747, 0.7381], device='cuda:0', requires_grad=True) train_loss=[0.6219602 0.6218621], train_acc=[0.77015 0.77125]
48/100: weight=tensor([0.6992, 0.7150], device='cuda:0', requires_grad=True) train_loss=[0.6092261 0.6302596], train_acc=[0.7753 0.7688]
50/100: weight=tensor([0.6602, 0.7511], device='cuda:0', requires_grad=True) train_loss=[0.6135956 0.6295585], train_acc=[0.77475 0.7649 ]
52/100: weight=tensor([0.6747, 0.7381], device='cuda:0', requires_grad=True) train_loss=[0.60682786 0.6276895 ], train_acc=[0.77605 0.76885]
54/100: weight=tensor([0.7267, 0.6869], device='cuda:0', requires_grad=True) train_loss=[0.60919625 0.62037754], train_acc=[0.7767 0.7717]
56/100: weight=tensor([0.7001, 0.7141], device='cuda:0', requires_grad=True) train_loss=[0.60421056 0.61046106], train_acc=[0.7769  0.77505]
58/100: weight=tensor([0.6988, 0.7153], device='cuda:0', requires_grad=True) train_loss=[0.5941126 0.6095064], train_acc=[0.7844  0.77545]
60/100: weight=tensor([0.6670, 0.7450], device='cuda:0', requires_grad=True) train_loss=[0.59408146 0.61653477], train_acc=[0.78055 0.7719 ]
62/100: weight=tensor([0.6951, 0.7189], device='cuda:0', requires_grad=True) train_loss=[0.6146917  0.61702305], train_acc=[0.77105 0.77185]
64/100: weight=tensor([0.7127, 0.7015], device='cuda:0', requires_grad=True) train_loss=[0.6011685 0.6275952], train_acc=[0.77685 0.76605]
66/100: weight=tensor([0.7038, 0.7104], device='cuda:0', requires_grad=True) train_loss=[0.60726327 0.61472356], train_acc=[0.77355 0.7738 ]
68/100: weight=tensor([0.7304, 0.6830], device='cuda:0', requires_grad=True) train_loss=[0.5958496 0.6170581], train_acc=[0.78265 0.7731 ]
70/100: weight=tensor([0.6790, 0.7341], device='cuda:0', requires_grad=True) train_loss=[0.582003  0.6146354], train_acc=[0.7862 0.7729]
72/100: weight=tensor([0.7218, 0.6921], device='cuda:0', requires_grad=True) train_loss=[0.5846726  0.61867535], train_acc=[0.78575 0.7749 ]
74/100: weight=tensor([0.6737, 0.7390], device='cuda:0', requires_grad=True) train_loss=[0.57719976 0.5913271 ], train_acc=[0.7885  0.78265]
76/100: weight=tensor([0.6880, 0.7257], device='cuda:0', requires_grad=True) train_loss=[0.5740233 0.5940889], train_acc=[0.7906  0.77945]
78/100: weight=tensor([0.6808, 0.7325], device='cuda:0', requires_grad=True) train_loss=[0.5770254 0.6046737], train_acc=[0.78785 0.77335]
80/100: weight=tensor([0.6830, 0.7305], device='cuda:0', requires_grad=True) train_loss=[0.57356256 0.59595114], train_acc=[0.792   0.78225]
82/100: weight=tensor([0.6916, 0.7223], device='cuda:0', requires_grad=True) train_loss=[0.5716758 0.5893221], train_acc=[0.7911 0.7853]
84/100: weight=tensor([0.7078, 0.7064], device='cuda:0', requires_grad=True) train_loss=[0.57210565 0.58712256], train_acc=[0.79075 0.78575]
86/100: weight=tensor([0.7057, 0.7085], device='cuda:0', requires_grad=True) train_loss=[0.58273584 0.5851833 ], train_acc=[0.7857 0.7841]
88/100: weight=tensor([0.6916, 0.7222], device='cuda:0', requires_grad=True) train_loss=[0.56347096 0.58221453], train_acc=[0.79655 0.7877 ]
90/100: weight=tensor([0.7129, 0.7013], device='cuda:0', requires_grad=True) train_loss=[0.56992215 0.5829849 ], train_acc=[0.7927  0.78535]
92/100: weight=tensor([0.6906, 0.7233], device='cuda:0', requires_grad=True) train_loss=[0.57002026 0.58595586], train_acc=[0.79175 0.78455]
94/100: weight=tensor([0.6685, 0.7437], device='cuda:0', requires_grad=True) train_loss=[0.57918555 0.58541924], train_acc=[0.78695 0.78775]
96/100: weight=tensor([0.6704, 0.7420], device='cuda:0', requires_grad=True) train_loss=[0.56275725 0.5841127 ], train_acc=[0.79275 0.7867 ]
98/100: weight=tensor([0.6578, 0.7532], device='cuda:0', requires_grad=True) train_loss=[0.57260203 0.5808151 ], train_acc=[0.79125 0.787  ]
100/100: weight=tensor([0.6649, 0.7470], device='cuda:0', requires_grad=True) train_loss=[0.5606123  0.56882936], train_acc=[0.79555 0.7914 ]
**** Time taken for fashion_1 = 3311.514326095581
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.8673, 0.4978], device='cuda:0', requires_grad=True) train_loss=[1.213161  1.5166813], train_acc=[0.55675 0.44795]
2/100: weight=tensor([0.7946, 0.6071], device='cuda:0', requires_grad=True) train_loss=[1.0994271 1.1960666], train_acc=[0.5821  0.56755]
4/100: weight=tensor([0.7617, 0.6480], device='cuda:0', requires_grad=True) train_loss=[0.9134826 1.0340312], train_acc=[0.6444 0.6172]
6/100: weight=tensor([0.8019, 0.5975], device='cuda:0', requires_grad=True) train_loss=[0.8118625 0.9057035], train_acc=[0.69515 0.6685 ]
8/100: weight=tensor([0.7800, 0.6258], device='cuda:0', requires_grad=True) train_loss=[0.77194506 0.8493067 ], train_acc=[0.7037  0.67905]
10/100: weight=tensor([0.7354, 0.6776], device='cuda:0', requires_grad=True) train_loss=[0.75343394 0.8037413 ], train_acc=[0.71845 0.7007 ]
12/100: weight=tensor([0.7770, 0.6295], device='cuda:0', requires_grad=True) train_loss=[0.76316553 0.781122  ], train_acc=[0.70405 0.71155]
14/100: weight=tensor([0.7575, 0.6528], device='cuda:0', requires_grad=True) train_loss=[0.71819055 0.758397  ], train_acc=[0.7362  0.71265]
16/100: weight=tensor([0.7642, 0.6450], device='cuda:0', requires_grad=True) train_loss=[0.6674756 0.7480257], train_acc=[0.75155 0.72465]
18/100: weight=tensor([0.7953, 0.6062], device='cuda:0', requires_grad=True) train_loss=[0.6642413 0.7279445], train_acc=[0.751   0.73125]
20/100: weight=tensor([0.7212, 0.6927], device='cuda:0', requires_grad=True) train_loss=[0.66219556 0.72570074], train_acc=[0.7539  0.72725]
22/100: weight=tensor([0.7836, 0.6213], device='cuda:0', requires_grad=True) train_loss=[0.6509249  0.70615757], train_acc=[0.7546  0.74305]
24/100: weight=tensor([0.7665, 0.6423], device='cuda:0', requires_grad=True) train_loss=[0.6344152 0.7015995], train_acc=[0.7596 0.7323]
26/100: weight=tensor([0.7726, 0.6349], device='cuda:0', requires_grad=True) train_loss=[0.6286978 0.6790912], train_acc=[0.766  0.7484]
28/100: weight=tensor([0.7599, 0.6500], device='cuda:0', requires_grad=True) train_loss=[0.6194614 0.6711718], train_acc=[0.7704  0.74905]
30/100: weight=tensor([0.7315, 0.6818], device='cuda:0', requires_grad=True) train_loss=[0.6182665 0.6658338], train_acc=[0.771  0.7509]
32/100: weight=tensor([0.7337, 0.6795], device='cuda:0', requires_grad=True) train_loss=[0.620288   0.65863144], train_acc=[0.76415 0.7585 ]
34/100: weight=tensor([0.7555, 0.6551], device='cuda:0', requires_grad=True) train_loss=[0.6004184 0.6545929], train_acc=[0.7728 0.7579]
36/100: weight=tensor([0.7469, 0.6649], device='cuda:0', requires_grad=True) train_loss=[0.6415845 0.6564407], train_acc=[0.7537  0.76175]
38/100: weight=tensor([0.7834, 0.6215], device='cuda:0', requires_grad=True) train_loss=[0.6023359 0.6379082], train_acc=[0.7759  0.76415]
40/100: weight=tensor([0.7193, 0.6947], device='cuda:0', requires_grad=True) train_loss=[0.5871636  0.64122486], train_acc=[0.7816 0.7644]
42/100: weight=tensor([0.7743, 0.6328], device='cuda:0', requires_grad=True) train_loss=[0.59636456 0.6300249 ], train_acc=[0.77755 0.76795]
44/100: weight=tensor([0.7591, 0.6509], device='cuda:0', requires_grad=True) train_loss=[0.5794753 0.6225548], train_acc=[0.7859  0.76975]
46/100: weight=tensor([0.7350, 0.6781], device='cuda:0', requires_grad=True) train_loss=[0.57241976 0.6326365 ], train_acc=[0.7872 0.7672]
48/100: weight=tensor([0.7646, 0.6445], device='cuda:0', requires_grad=True) train_loss=[0.57233834 0.6187624 ], train_acc=[0.79135 0.77015]
50/100: weight=tensor([0.7738, 0.6334], device='cuda:0', requires_grad=True) train_loss=[0.57008433 0.628525  ], train_acc=[0.79225 0.76605]
52/100: weight=tensor([0.7937, 0.6083], device='cuda:0', requires_grad=True) train_loss=[0.5675256 0.6136879], train_acc=[0.78975 0.77215]
54/100: weight=tensor([0.7579, 0.6524], device='cuda:0', requires_grad=True) train_loss=[0.59144217 0.60345554], train_acc=[0.77945 0.7754 ]
56/100: weight=tensor([0.7509, 0.6604], device='cuda:0', requires_grad=True) train_loss=[0.5667494  0.60556674], train_acc=[0.79055 0.775  ]
58/100: weight=tensor([0.7505, 0.6608], device='cuda:0', requires_grad=True) train_loss=[0.5723607 0.6124025], train_acc=[0.7881 0.7698]
60/100: weight=tensor([0.7738, 0.6334], device='cuda:0', requires_grad=True) train_loss=[0.5681249 0.5940727], train_acc=[0.78935 0.7793 ]
62/100: weight=tensor([0.7733, 0.6340], device='cuda:0', requires_grad=True) train_loss=[0.56153226 0.6057241 ], train_acc=[0.79125 0.77285]
64/100: weight=tensor([0.7298, 0.6837], device='cuda:0', requires_grad=True) train_loss=[0.56130904 0.5968844 ], train_acc=[0.7961 0.7782]
66/100: weight=tensor([0.7565, 0.6540], device='cuda:0', requires_grad=True) train_loss=[0.55760247 0.6177116 ], train_acc=[0.7909  0.77455]
68/100: weight=tensor([0.7423, 0.6701], device='cuda:0', requires_grad=True) train_loss=[0.5623167  0.61060333], train_acc=[0.7932 0.7741]
70/100: weight=tensor([0.7868, 0.6172], device='cuda:0', requires_grad=True) train_loss=[0.549219  0.5859503], train_acc=[0.7956  0.78315]
72/100: weight=tensor([0.7931, 0.6091], device='cuda:0', requires_grad=True) train_loss=[0.555542   0.59185535], train_acc=[0.795   0.78265]
74/100: weight=tensor([0.7730, 0.6344], device='cuda:0', requires_grad=True) train_loss=[0.55798966 0.59285426], train_acc=[0.7924 0.7822]
76/100: weight=tensor([0.8018, 0.5976], device='cuda:0', requires_grad=True) train_loss=[0.5716939 0.6068181], train_acc=[0.79265 0.77865]
78/100: weight=tensor([0.7612, 0.6486], device='cuda:0', requires_grad=True) train_loss=[0.5480407  0.58221805], train_acc=[0.79655 0.78435]
80/100: weight=tensor([0.7742, 0.6329], device='cuda:0', requires_grad=True) train_loss=[0.55918205 0.58892095], train_acc=[0.79035 0.78365]
82/100: weight=tensor([0.7844, 0.6203], device='cuda:0', requires_grad=True) train_loss=[0.5466177 0.5850054], train_acc=[0.79755 0.78595]
84/100: weight=tensor([0.7071, 0.7072], device='cuda:0', requires_grad=True) train_loss=[0.537665   0.57899487], train_acc=[0.79985 0.7883 ]
86/100: weight=tensor([0.7658, 0.6431], device='cuda:0', requires_grad=True) train_loss=[0.56026703 0.5781457 ], train_acc=[0.78955 0.78775]
88/100: weight=tensor([0.7927, 0.6096], device='cuda:0', requires_grad=True) train_loss=[0.53718036 0.58271885], train_acc=[0.7994  0.78435]
90/100: weight=tensor([0.7578, 0.6525], device='cuda:0', requires_grad=True) train_loss=[0.5485714 0.5727227], train_acc=[0.79665 0.78735]
92/100: weight=tensor([0.7735, 0.6338], device='cuda:0', requires_grad=True) train_loss=[0.5398009 0.5781071], train_acc=[0.80275 0.7871 ]
94/100: weight=tensor([0.7632, 0.6461], device='cuda:0', requires_grad=True) train_loss=[0.53722054 0.5821911 ], train_acc=[0.7994 0.7804]
96/100: weight=tensor([0.7552, 0.6555], device='cuda:0', requires_grad=True) train_loss=[0.5483619 0.5681332], train_acc=[0.7975 0.79  ]
98/100: weight=tensor([0.7791, 0.6269], device='cuda:0', requires_grad=True) train_loss=[0.53901106 0.56853855], train_acc=[0.7988 0.7872]
100/100: weight=tensor([0.7832, 0.6218], device='cuda:0', requires_grad=True) train_loss=[0.53596264 0.5752861 ], train_acc=[0.80295 0.78915]
**** Time taken for fashion_2 = 3203.207101583481
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6722, 0.7404], device='cuda:0', requires_grad=True) train_loss=[1.399926  1.4256716], train_acc=[0.4844 0.472 ]
2/100: weight=tensor([0.6116, 0.7912], device='cuda:0', requires_grad=True) train_loss=[1.1462283 1.2270781], train_acc=[0.56935 0.5527 ]
4/100: weight=tensor([0.6442, 0.7648], device='cuda:0', requires_grad=True) train_loss=[0.98977005 0.98376364], train_acc=[0.62145 0.63585]
6/100: weight=tensor([0.6382, 0.7698], device='cuda:0', requires_grad=True) train_loss=[0.9006603 0.8984177], train_acc=[0.66115 0.672  ]
8/100: weight=tensor([0.6247, 0.7808], device='cuda:0', requires_grad=True) train_loss=[0.83866394 0.8473938 ], train_acc=[0.68715 0.6837 ]
10/100: weight=tensor([0.5808, 0.8140], device='cuda:0', requires_grad=True) train_loss=[0.8075521 0.8135386], train_acc=[0.69865 0.6997 ]
12/100: weight=tensor([0.5989, 0.8008], device='cuda:0', requires_grad=True) train_loss=[0.7887222  0.79638404], train_acc=[0.7071 0.7056]
14/100: weight=tensor([0.6135, 0.7897], device='cuda:0', requires_grad=True) train_loss=[0.773486  0.7644446], train_acc=[0.7087  0.71715]
16/100: weight=tensor([0.6097, 0.7926], device='cuda:0', requires_grad=True) train_loss=[0.7643258  0.76002824], train_acc=[0.71325 0.7158 ]
18/100: weight=tensor([0.5457, 0.8380], device='cuda:0', requires_grad=True) train_loss=[0.75188833 0.7371979 ], train_acc=[0.71935 0.7262 ]
20/100: weight=tensor([0.6182, 0.7860], device='cuda:0', requires_grad=True) train_loss=[0.7335328 0.7176727], train_acc=[0.7262  0.73705]
22/100: weight=tensor([0.6013, 0.7990], device='cuda:0', requires_grad=True) train_loss=[0.7220799  0.70211273], train_acc=[0.7326  0.73975]
24/100: weight=tensor([0.5760, 0.8174], device='cuda:0', requires_grad=True) train_loss=[0.72989774 0.7010663 ], train_acc=[0.72525 0.7392 ]
26/100: weight=tensor([0.5308, 0.8475], device='cuda:0', requires_grad=True) train_loss=[0.73535746 0.7032304 ], train_acc=[0.72675 0.7315 ]
28/100: weight=tensor([0.6044, 0.7967], device='cuda:0', requires_grad=True) train_loss=[0.7039671 0.6847163], train_acc=[0.73615 0.7497 ]
30/100: weight=tensor([0.5752, 0.8180], device='cuda:0', requires_grad=True) train_loss=[0.69602096 0.6612253 ], train_acc=[0.7409  0.75405]
32/100: weight=tensor([0.5606, 0.8281], device='cuda:0', requires_grad=True) train_loss=[0.69044816 0.6580925 ], train_acc=[0.7443 0.7572]
34/100: weight=tensor([0.5303, 0.8478], device='cuda:0', requires_grad=True) train_loss=[0.68299454 0.6631334 ], train_acc=[0.74585 0.7524 ]
36/100: weight=tensor([0.5287, 0.8488], device='cuda:0', requires_grad=True) train_loss=[0.6800197 0.647917 ], train_acc=[0.74815 0.7624 ]
38/100: weight=tensor([0.5096, 0.8604], device='cuda:0', requires_grad=True) train_loss=[0.68706197 0.6412465 ], train_acc=[0.74345 0.76655]
40/100: weight=tensor([0.5971, 0.8021], device='cuda:0', requires_grad=True) train_loss=[0.6721654 0.6354119], train_acc=[0.74785 0.76545]
42/100: weight=tensor([0.6065, 0.7951], device='cuda:0', requires_grad=True) train_loss=[0.6703229  0.63168126], train_acc=[0.75045 0.7697 ]
44/100: weight=tensor([0.5725, 0.8199], device='cuda:0', requires_grad=True) train_loss=[0.66320825 0.6302393 ], train_acc=[0.75375 0.76885]
46/100: weight=tensor([0.5631, 0.8264], device='cuda:0', requires_grad=True) train_loss=[0.6579394  0.61754227], train_acc=[0.7559  0.77425]
48/100: weight=tensor([0.5497, 0.8354], device='cuda:0', requires_grad=True) train_loss=[0.65297693 0.62494516], train_acc=[0.7578 0.7738]
50/100: weight=tensor([0.5387, 0.8425], device='cuda:0', requires_grad=True) train_loss=[0.6525485 0.6226288], train_acc=[0.75675 0.77435]
52/100: weight=tensor([0.5858, 0.8105], device='cuda:0', requires_grad=True) train_loss=[0.6485241 0.6135131], train_acc=[0.7597 0.7744]
54/100: weight=tensor([0.5971, 0.8022], device='cuda:0', requires_grad=True) train_loss=[0.64956915 0.60361075], train_acc=[0.75665 0.77855]
56/100: weight=tensor([0.5545, 0.8322], device='cuda:0', requires_grad=True) train_loss=[0.6464313  0.60980105], train_acc=[0.75955 0.7746 ]
58/100: weight=tensor([0.5676, 0.8233], device='cuda:0', requires_grad=True) train_loss=[0.63929826 0.60743153], train_acc=[0.76155 0.77815]
60/100: weight=tensor([0.5720, 0.8202], device='cuda:0', requires_grad=True) train_loss=[0.64030015 0.5964103 ], train_acc=[0.75835 0.7808 ]
62/100: weight=tensor([0.5673, 0.8235], device='cuda:0', requires_grad=True) train_loss=[0.6295592  0.60158914], train_acc=[0.7657 0.7805]
64/100: weight=tensor([0.5504, 0.8349], device='cuda:0', requires_grad=True) train_loss=[0.6292543 0.6015192], train_acc=[0.764   0.77745]
66/100: weight=tensor([0.5788, 0.8154], device='cuda:0', requires_grad=True) train_loss=[0.64030963 0.6102569 ], train_acc=[0.75905 0.77445]
68/100: weight=tensor([0.5593, 0.8290], device='cuda:0', requires_grad=True) train_loss=[0.6253293 0.6026354], train_acc=[0.7658  0.77625]
70/100: weight=tensor([0.5289, 0.8487], device='cuda:0', requires_grad=True) train_loss=[0.6404251 0.5871187], train_acc=[0.75945 0.78585]
72/100: weight=tensor([0.5231, 0.8523], device='cuda:0', requires_grad=True) train_loss=[0.62767553 0.5943258 ], train_acc=[0.76625 0.7816 ]
74/100: weight=tensor([0.5279, 0.8493], device='cuda:0', requires_grad=True) train_loss=[0.6172333  0.58902615], train_acc=[0.76935 0.7816 ]
76/100: weight=tensor([0.5624, 0.8269], device='cuda:0', requires_grad=True) train_loss=[0.6173759 0.5925971], train_acc=[0.7688 0.781 ]
78/100: weight=tensor([0.5925, 0.8055], device='cuda:0', requires_grad=True) train_loss=[0.6247108 0.5932603], train_acc=[0.76175 0.7801 ]
80/100: weight=tensor([0.5364, 0.8439], device='cuda:0', requires_grad=True) train_loss=[0.6186496 0.5779812], train_acc=[0.76715 0.7865 ]
82/100: weight=tensor([0.5350, 0.8449], device='cuda:0', requires_grad=True) train_loss=[0.6101575 0.5810059], train_acc=[0.77025 0.7886 ]
84/100: weight=tensor([0.5768, 0.8169], device='cuda:0', requires_grad=True) train_loss=[0.61291444 0.57735115], train_acc=[0.7697 0.7882]
86/100: weight=tensor([0.5684, 0.8228], device='cuda:0', requires_grad=True) train_loss=[0.61152124 0.5842237 ], train_acc=[0.7721 0.786 ]
88/100: weight=tensor([0.5898, 0.8075], device='cuda:0', requires_grad=True) train_loss=[0.60497683 0.57851666], train_acc=[0.77325 0.78725]
90/100: weight=tensor([0.5744, 0.8186], device='cuda:0', requires_grad=True) train_loss=[0.60156363 0.5702928 ], train_acc=[0.7744  0.78645]
92/100: weight=tensor([0.5738, 0.8190], device='cuda:0', requires_grad=True) train_loss=[0.60214984 0.5677087 ], train_acc=[0.7745 0.7901]
94/100: weight=tensor([0.5618, 0.8273], device='cuda:0', requires_grad=True) train_loss=[0.60802066 0.58578706], train_acc=[0.7719  0.78495]
96/100: weight=tensor([0.5738, 0.8190], device='cuda:0', requires_grad=True) train_loss=[0.6067252 0.5661656], train_acc=[0.7751  0.79065]
98/100: weight=tensor([0.5766, 0.8170], device='cuda:0', requires_grad=True) train_loss=[0.59499377 0.5676804 ], train_acc=[0.7795 0.7895]
100/100: weight=tensor([0.6023, 0.7983], device='cuda:0', requires_grad=True) train_loss=[0.59625643 0.5690131 ], train_acc=[0.7762 0.7903]
**** Time taken for fashion_3 = 3163.1331465244293
loading dataset fashion
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6641, 0.7477], device='cuda:0', requires_grad=True) train_loss=[1.1704307 1.224272 ], train_acc=[0.56425 0.5451 ]
2/100: weight=tensor([0.6787, 0.7344], device='cuda:0', requires_grad=True) train_loss=[0.99878085 1.0631264 ], train_acc=[0.6247 0.5962]
4/100: weight=tensor([0.6811, 0.7322], device='cuda:0', requires_grad=True) train_loss=[0.85859525 0.9400684 ], train_acc=[0.6789  0.65385]
6/100: weight=tensor([0.6903, 0.7235], device='cuda:0', requires_grad=True) train_loss=[0.79631615 0.8588029 ], train_acc=[0.70475 0.67715]
8/100: weight=tensor([0.7278, 0.6858], device='cuda:0', requires_grad=True) train_loss=[0.7583349  0.78261465], train_acc=[0.71815 0.7069 ]
10/100: weight=tensor([0.6909, 0.7229], device='cuda:0', requires_grad=True) train_loss=[0.7488707 0.7597091], train_acc=[0.71935 0.7147 ]
12/100: weight=tensor([0.6550, 0.7557], device='cuda:0', requires_grad=True) train_loss=[0.7378049 0.7567141], train_acc=[0.73105 0.714  ]
14/100: weight=tensor([0.6918, 0.7221], device='cuda:0', requires_grad=True) train_loss=[0.724018  0.7241108], train_acc=[0.73005 0.7367 ]
16/100: weight=tensor([0.6769, 0.7361], device='cuda:0', requires_grad=True) train_loss=[0.7036011 0.700309 ], train_acc=[0.7342 0.7399]
18/100: weight=tensor([0.7223, 0.6916], device='cuda:0', requires_grad=True) train_loss=[0.6672561  0.69191545], train_acc=[0.7521 0.7415]
20/100: weight=tensor([0.7193, 0.6947], device='cuda:0', requires_grad=True) train_loss=[0.6540538 0.6915354], train_acc=[0.7611 0.7426]
22/100: weight=tensor([0.7014, 0.7127], device='cuda:0', requires_grad=True) train_loss=[0.65259826 0.66180253], train_acc=[0.75735 0.75365]
24/100: weight=tensor([0.6811, 0.7322], device='cuda:0', requires_grad=True) train_loss=[0.6404999 0.6688869], train_acc=[0.763   0.75715]
26/100: weight=tensor([0.7074, 0.7068], device='cuda:0', requires_grad=True) train_loss=[0.6519269 0.6778577], train_acc=[0.75855 0.74915]
28/100: weight=tensor([0.6242, 0.7813], device='cuda:0', requires_grad=True) train_loss=[0.6220721 0.6483508], train_acc=[0.77345 0.7629 ]
30/100: weight=tensor([0.6924, 0.7215], device='cuda:0', requires_grad=True) train_loss=[0.6225414  0.65686643], train_acc=[0.77175 0.75485]
32/100: weight=tensor([0.6639, 0.7479], device='cuda:0', requires_grad=True) train_loss=[0.6152328 0.6561657], train_acc=[0.7721  0.76035]
34/100: weight=tensor([0.6425, 0.7663], device='cuda:0', requires_grad=True) train_loss=[0.6150436 0.6379587], train_acc=[0.77665 0.76435]
36/100: weight=tensor([0.6636, 0.7481], device='cuda:0', requires_grad=True) train_loss=[0.60349417 0.6240531 ], train_acc=[0.77805 0.76985]
38/100: weight=tensor([0.6393, 0.7690], device='cuda:0', requires_grad=True) train_loss=[0.62289506 0.6279915 ], train_acc=[0.77   0.7723]
40/100: weight=tensor([0.6902, 0.7236], device='cuda:0', requires_grad=True) train_loss=[0.60203266 0.613116  ], train_acc=[0.7766  0.77665]
42/100: weight=tensor([0.6838, 0.7297], device='cuda:0', requires_grad=True) train_loss=[0.5944371 0.6205797], train_acc=[0.78195 0.7755 ]
44/100: weight=tensor([0.7052, 0.7090], device='cuda:0', requires_grad=True) train_loss=[0.58256125 0.61422926], train_acc=[0.7847 0.7757]
46/100: weight=tensor([0.7162, 0.6979], device='cuda:0', requires_grad=True) train_loss=[0.5840215 0.6112061], train_acc=[0.7872 0.7733]
48/100: weight=tensor([0.6847, 0.7288], device='cuda:0', requires_grad=True) train_loss=[0.5802523  0.60971904], train_acc=[0.78475 0.77355]
50/100: weight=tensor([0.6631, 0.7485], device='cuda:0', requires_grad=True) train_loss=[0.57587266 0.5966003 ], train_acc=[0.7897  0.78375]
52/100: weight=tensor([0.6517, 0.7585], device='cuda:0', requires_grad=True) train_loss=[0.5779542  0.59983546], train_acc=[0.7877  0.77985]
54/100: weight=tensor([0.6588, 0.7524], device='cuda:0', requires_grad=True) train_loss=[0.57598186 0.6054875 ], train_acc=[0.7892  0.77455]
56/100: weight=tensor([0.6727, 0.7399], device='cuda:0', requires_grad=True) train_loss=[0.57375866 0.59073687], train_acc=[0.78985 0.7843 ]
58/100: weight=tensor([0.6372, 0.7707], device='cuda:0', requires_grad=True) train_loss=[0.57688314 0.59242094], train_acc=[0.78655 0.783  ]
60/100: weight=tensor([0.6653, 0.7466], device='cuda:0', requires_grad=True) train_loss=[0.56106645 0.6094506 ], train_acc=[0.7946 0.7745]
62/100: weight=tensor([0.6898, 0.7240], device='cuda:0', requires_grad=True) train_loss=[0.56148267 0.5960543 ], train_acc=[0.79455 0.78055]
64/100: weight=tensor([0.6773, 0.7357], device='cuda:0', requires_grad=True) train_loss=[0.56651074 0.59160066], train_acc=[0.78915 0.7843 ]
66/100: weight=tensor([0.6675, 0.7446], device='cuda:0', requires_grad=True) train_loss=[0.56383836 0.5843242 ], train_acc=[0.7923 0.7865]
68/100: weight=tensor([0.7081, 0.7061], device='cuda:0', requires_grad=True) train_loss=[0.5579479 0.5817517], train_acc=[0.79635 0.785  ]
70/100: weight=tensor([0.6350, 0.7725], device='cuda:0', requires_grad=True) train_loss=[0.5574471 0.580922 ], train_acc=[0.79735 0.7845 ]
72/100: weight=tensor([0.6327, 0.7744], device='cuda:0', requires_grad=True) train_loss=[0.5715169 0.571838 ], train_acc=[0.7922  0.78895]
74/100: weight=tensor([0.6878, 0.7259], device='cuda:0', requires_grad=True) train_loss=[0.5504287 0.5814964], train_acc=[0.79525 0.7883 ]
76/100: weight=tensor([0.6604, 0.7509], device='cuda:0', requires_grad=True) train_loss=[0.55734223 0.5766096 ], train_acc=[0.79335 0.7898 ]
78/100: weight=tensor([0.6757, 0.7372], device='cuda:0', requires_grad=True) train_loss=[0.5710052  0.58439827], train_acc=[0.7892 0.7827]
80/100: weight=tensor([0.6807, 0.7326], device='cuda:0', requires_grad=True) train_loss=[0.54811025 0.5757028 ], train_acc=[0.80025 0.7859 ]
82/100: weight=tensor([0.6624, 0.7491], device='cuda:0', requires_grad=True) train_loss=[0.5525659 0.5641348], train_acc=[0.7977 0.7919]
84/100: weight=tensor([0.7286, 0.6849], device='cuda:0', requires_grad=True) train_loss=[0.5448745  0.56417257], train_acc=[0.80195 0.7936 ]
86/100: weight=tensor([0.6777, 0.7353], device='cuda:0', requires_grad=True) train_loss=[0.542234   0.56865895], train_acc=[0.7995  0.79145]
88/100: weight=tensor([0.6766, 0.7364], device='cuda:0', requires_grad=True) train_loss=[0.5425299  0.56735176], train_acc=[0.8031  0.79135]
90/100: weight=tensor([0.6913, 0.7226], device='cuda:0', requires_grad=True) train_loss=[0.5459193 0.5754958], train_acc=[0.8017 0.7841]
92/100: weight=tensor([0.6783, 0.7348], device='cuda:0', requires_grad=True) train_loss=[0.54308224 0.5789862 ], train_acc=[0.80125 0.78885]
94/100: weight=tensor([0.6799, 0.7333], device='cuda:0', requires_grad=True) train_loss=[0.5384511 0.5647651], train_acc=[0.80485 0.79215]
96/100: weight=tensor([0.6561, 0.7547], device='cuda:0', requires_grad=True) train_loss=[0.54139084 0.5640709 ], train_acc=[0.8028  0.79035]
98/100: weight=tensor([0.6396, 0.7687], device='cuda:0', requires_grad=True) train_loss=[0.5479722  0.56475776], train_acc=[0.79945 0.7945 ]
100/100: weight=tensor([0.6511, 0.7590], device='cuda:0', requires_grad=True) train_loss=[0.53492993 0.5607527 ], train_acc=[0.80525 0.79065]
**** Time taken for fashion_4 = 3167.825947999954
**** Time taken for fashion = 16498.65412211418
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.6667, 0.7453], device='cuda:0', requires_grad=True) train_loss=[1.6327789 1.1550765], train_acc=[0.4444 0.572 ]
2/100: weight=tensor([0.6473, 0.7623], device='cuda:0', requires_grad=True) train_loss=[1.1300051 0.9541739], train_acc=[0.6324 0.6417]
4/100: weight=tensor([0.5677, 0.8232], device='cuda:0', requires_grad=True) train_loss=[0.8189756 0.7672649], train_acc=[0.73235 0.7198 ]
6/100: weight=tensor([0.6288, 0.7775], device='cuda:0', requires_grad=True) train_loss=[0.7179751 0.7056407], train_acc=[0.7658 0.7398]
8/100: weight=tensor([0.5538, 0.8327], device='cuda:0', requires_grad=True) train_loss=[0.6891512  0.67752683], train_acc=[0.7699 0.7531]
10/100: weight=tensor([0.6089, 0.7932], device='cuda:0', requires_grad=True) train_loss=[0.580584  0.6403336], train_acc=[0.8108 0.764 ]
12/100: weight=tensor([0.5535, 0.8328], device='cuda:0', requires_grad=True) train_loss=[0.5498496 0.629258 ], train_acc=[0.82045 0.76765]
14/100: weight=tensor([0.5860, 0.8103], device='cuda:0', requires_grad=True) train_loss=[0.507261   0.62217695], train_acc=[0.83595 0.772  ]
16/100: weight=tensor([0.5930, 0.8052], device='cuda:0', requires_grad=True) train_loss=[0.4885761 0.6084918], train_acc=[0.8388 0.776 ]
18/100: weight=tensor([0.6431, 0.7657], device='cuda:0', requires_grad=True) train_loss=[0.4651048  0.63242316], train_acc=[0.8503  0.76635]
20/100: weight=tensor([0.5896, 0.8077], device='cuda:0', requires_grad=True) train_loss=[0.4542558 0.5873445], train_acc=[0.8516 0.7793]
22/100: weight=tensor([0.6376, 0.7704], device='cuda:0', requires_grad=True) train_loss=[0.43694133 0.57416517], train_acc=[0.8588 0.7851]
24/100: weight=tensor([0.6207, 0.7840], device='cuda:0', requires_grad=True) train_loss=[0.4163015 0.5817479], train_acc=[0.86465 0.78805]
26/100: weight=tensor([0.5528, 0.8333], device='cuda:0', requires_grad=True) train_loss=[0.41507336 0.57233614], train_acc=[0.86775 0.78195]
28/100: weight=tensor([0.6098, 0.7926], device='cuda:0', requires_grad=True) train_loss=[0.413925  0.5567503], train_acc=[0.866   0.79535]
30/100: weight=tensor([0.6624, 0.7492], device='cuda:0', requires_grad=True) train_loss=[0.38952914 0.5413501 ], train_acc=[0.8731  0.79915]
32/100: weight=tensor([0.6022, 0.7983], device='cuda:0', requires_grad=True) train_loss=[0.39247766 0.5433124 ], train_acc=[0.8749  0.79805]
34/100: weight=tensor([0.6597, 0.7515], device='cuda:0', requires_grad=True) train_loss=[0.3907647 0.5359243], train_acc=[0.87535 0.79865]
36/100: weight=tensor([0.6703, 0.7421], device='cuda:0', requires_grad=True) train_loss=[0.36543685 0.5456349 ], train_acc=[0.8835 0.7939]
38/100: weight=tensor([0.6338, 0.7735], device='cuda:0', requires_grad=True) train_loss=[0.36003828 0.5506376 ], train_acc=[0.88415 0.7918 ]
40/100: weight=tensor([0.6264, 0.7795], device='cuda:0', requires_grad=True) train_loss=[0.35080704 0.53111315], train_acc=[0.88885 0.8023 ]
42/100: weight=tensor([0.6128, 0.7902], device='cuda:0', requires_grad=True) train_loss=[0.3545705 0.5253932], train_acc=[0.8861 0.8054]
44/100: weight=tensor([0.6658, 0.7462], device='cuda:0', requires_grad=True) train_loss=[0.34583586 0.52376163], train_acc=[0.88895 0.8037 ]
46/100: weight=tensor([0.6216, 0.7833], device='cuda:0', requires_grad=True) train_loss=[0.34333146 0.5210398 ], train_acc=[0.88935 0.8056 ]
48/100: weight=tensor([0.6576, 0.7534], device='cuda:0', requires_grad=True) train_loss=[0.356826 0.532934], train_acc=[0.8847 0.7972]
50/100: weight=tensor([0.6337, 0.7736], device='cuda:0', requires_grad=True) train_loss=[0.31897002 0.5189414 ], train_acc=[0.8966 0.809 ]
52/100: weight=tensor([0.6117, 0.7911], device='cuda:0', requires_grad=True) train_loss=[0.33369088 0.5195006 ], train_acc=[0.89325 0.8052 ]
54/100: weight=tensor([0.6478, 0.7618], device='cuda:0', requires_grad=True) train_loss=[0.34027493 0.51732033], train_acc=[0.89155 0.80645]
56/100: weight=tensor([0.6677, 0.7444], device='cuda:0', requires_grad=True) train_loss=[0.31429213 0.51206136], train_acc=[0.89885 0.8108 ]
58/100: weight=tensor([0.6404, 0.7680], device='cuda:0', requires_grad=True) train_loss=[0.30963945 0.5050704 ], train_acc=[0.9004  0.81295]
60/100: weight=tensor([0.6308, 0.7759], device='cuda:0', requires_grad=True) train_loss=[0.30414313 0.4971433 ], train_acc=[0.90405 0.81495]
62/100: weight=tensor([0.7114, 0.7028], device='cuda:0', requires_grad=True) train_loss=[0.3004865 0.5075317], train_acc=[0.9037 0.8101]
64/100: weight=tensor([0.6476, 0.7620], device='cuda:0', requires_grad=True) train_loss=[0.30403745 0.50044394], train_acc=[0.9029  0.81495]
66/100: weight=tensor([0.6323, 0.7747], device='cuda:0', requires_grad=True) train_loss=[0.2994831  0.49789342], train_acc=[0.90425 0.81815]
68/100: weight=tensor([0.6773, 0.7357], device='cuda:0', requires_grad=True) train_loss=[0.29498154 0.49720064], train_acc=[0.90645 0.81525]
70/100: weight=tensor([0.6851, 0.7284], device='cuda:0', requires_grad=True) train_loss=[0.29445374 0.49707472], train_acc=[0.90655 0.81515]
72/100: weight=tensor([0.6469, 0.7626], device='cuda:0', requires_grad=True) train_loss=[0.2852957 0.4948633], train_acc=[0.91025 0.8174 ]
74/100: weight=tensor([0.6460, 0.7633], device='cuda:0', requires_grad=True) train_loss=[0.30349436 0.5040539 ], train_acc=[0.90335 0.81095]
76/100: weight=tensor([0.6405, 0.7679], device='cuda:0', requires_grad=True) train_loss=[0.28401053 0.48980632], train_acc=[0.9097 0.8187]
78/100: weight=tensor([0.6901, 0.7237], device='cuda:0', requires_grad=True) train_loss=[0.27695563 0.49302447], train_acc=[0.91225 0.8204 ]
80/100: weight=tensor([0.6505, 0.7595], device='cuda:0', requires_grad=True) train_loss=[0.2886262 0.4911265], train_acc=[0.90845 0.8199 ]
82/100: weight=tensor([0.6351, 0.7724], device='cuda:0', requires_grad=True) train_loss=[0.29573038 0.48409855], train_acc=[0.90715 0.8206 ]
84/100: weight=tensor([0.6467, 0.7627], device='cuda:0', requires_grad=True) train_loss=[0.271103  0.4892212], train_acc=[0.91435 0.82125]
86/100: weight=tensor([0.6889, 0.7249], device='cuda:0', requires_grad=True) train_loss=[0.26649377 0.48388344], train_acc=[0.9169  0.82415]
88/100: weight=tensor([0.6654, 0.7465], device='cuda:0', requires_grad=True) train_loss=[0.27374756 0.4842626 ], train_acc=[0.91355 0.82195]
90/100: weight=tensor([0.7333, 0.6799], device='cuda:0', requires_grad=True) train_loss=[0.26343203 0.4816939 ], train_acc=[0.917  0.8224]
92/100: weight=tensor([0.6595, 0.7517], device='cuda:0', requires_grad=True) train_loss=[0.26656732 0.47688743], train_acc=[0.9159 0.8245]
94/100: weight=tensor([0.7192, 0.6948], device='cuda:0', requires_grad=True) train_loss=[0.27524304 0.4796228 ], train_acc=[0.91315 0.8213 ]
96/100: weight=tensor([0.6869, 0.7267], device='cuda:0', requires_grad=True) train_loss=[0.2699671  0.49510628], train_acc=[0.91575 0.8194 ]
98/100: weight=tensor([0.6378, 0.7702], device='cuda:0', requires_grad=True) train_loss=[0.25709683 0.47201487], train_acc=[0.9195  0.82745]
100/100: weight=tensor([0.7061, 0.7081], device='cuda:0', requires_grad=True) train_loss=[0.26961234 0.48447675], train_acc=[0.9152 0.8217]
**** Time taken for fashion_and_mnist_0 = 3123.2393460273743
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7148, 0.6993], device='cuda:0', requires_grad=True) train_loss=[1.3289801 1.0382113], train_acc=[0.54615 0.6133 ]
2/100: weight=tensor([0.6625, 0.7491], device='cuda:0', requires_grad=True) train_loss=[1.0135857 0.8701539], train_acc=[0.65415 0.6694 ]
4/100: weight=tensor([0.6730, 0.7397], device='cuda:0', requires_grad=True) train_loss=[0.8433111 0.7509033], train_acc=[0.717   0.72085]
6/100: weight=tensor([0.5940, 0.8044], device='cuda:0', requires_grad=True) train_loss=[0.6862041  0.70459133], train_acc=[0.77315 0.73865]
8/100: weight=tensor([0.6425, 0.7663], device='cuda:0', requires_grad=True) train_loss=[0.6096672  0.67216647], train_acc=[0.79705 0.7518 ]
10/100: weight=tensor([0.6296, 0.7769], device='cuda:0', requires_grad=True) train_loss=[0.56471187 0.6594973 ], train_acc=[0.8137 0.7502]
12/100: weight=tensor([0.5844, 0.8114], device='cuda:0', requires_grad=True) train_loss=[0.5308751  0.62990016], train_acc=[0.8276 0.7653]
14/100: weight=tensor([0.6206, 0.7841], device='cuda:0', requires_grad=True) train_loss=[0.5023467 0.6287166], train_acc=[0.83595 0.76275]
16/100: weight=tensor([0.6129, 0.7902], device='cuda:0', requires_grad=True) train_loss=[0.46888694 0.60925925], train_acc=[0.84785 0.77385]
18/100: weight=tensor([0.6162, 0.7876], device='cuda:0', requires_grad=True) train_loss=[0.45288315 0.5875207 ], train_acc=[0.85465 0.78155]
20/100: weight=tensor([0.6459, 0.7635], device='cuda:0', requires_grad=True) train_loss=[0.41841722 0.5831451 ], train_acc=[0.86585 0.7837 ]
22/100: weight=tensor([0.5415, 0.8407], device='cuda:0', requires_grad=True) train_loss=[0.41027924 0.5797394 ], train_acc=[0.86965 0.7856 ]
24/100: weight=tensor([0.6602, 0.7511], device='cuda:0', requires_grad=True) train_loss=[0.3914962  0.55500245], train_acc=[0.875  0.7957]
26/100: weight=tensor([0.6126, 0.7904], device='cuda:0', requires_grad=True) train_loss=[0.38118473 0.5524167 ], train_acc=[0.8797  0.79565]
28/100: weight=tensor([0.6139, 0.7894], device='cuda:0', requires_grad=True) train_loss=[0.37435925 0.5420543 ], train_acc=[0.88085 0.8005 ]
30/100: weight=tensor([0.6108, 0.7918], device='cuda:0', requires_grad=True) train_loss=[0.37349087 0.54527944], train_acc=[0.88205 0.79855]
32/100: weight=tensor([0.5956, 0.8033], device='cuda:0', requires_grad=True) train_loss=[0.37238207 0.54145336], train_acc=[0.8778  0.79865]
34/100: weight=tensor([0.5947, 0.8039], device='cuda:0', requires_grad=True) train_loss=[0.35016134 0.539279  ], train_acc=[0.8893  0.80365]
36/100: weight=tensor([0.6134, 0.7898], device='cuda:0', requires_grad=True) train_loss=[0.34368673 0.5426994 ], train_acc=[0.89205 0.8046 ]
38/100: weight=tensor([0.6429, 0.7660], device='cuda:0', requires_grad=True) train_loss=[0.33205977 0.53466207], train_acc=[0.89525 0.8023 ]
40/100: weight=tensor([0.6083, 0.7937], device='cuda:0', requires_grad=True) train_loss=[0.32968107 0.52965945], train_acc=[0.8941 0.803 ]
42/100: weight=tensor([0.5833, 0.8123], device='cuda:0', requires_grad=True) train_loss=[0.3415859  0.54399663], train_acc=[0.89165 0.80175]
44/100: weight=tensor([0.6409, 0.7676], device='cuda:0', requires_grad=True) train_loss=[0.33341023 0.5147997 ], train_acc=[0.895   0.81055]
46/100: weight=tensor([0.6119, 0.7909], device='cuda:0', requires_grad=True) train_loss=[0.31378698 0.52747583], train_acc=[0.90015 0.80515]
48/100: weight=tensor([0.6475, 0.7621], device='cuda:0', requires_grad=True) train_loss=[0.30987597 0.50812584], train_acc=[0.90125 0.8128 ]
50/100: weight=tensor([0.6238, 0.7816], device='cuda:0', requires_grad=True) train_loss=[0.31703144 0.510039  ], train_acc=[0.89835 0.81255]
52/100: weight=tensor([0.6240, 0.7814], device='cuda:0', requires_grad=True) train_loss=[0.30465767 0.5080871 ], train_acc=[0.90405 0.81475]
54/100: weight=tensor([0.6489, 0.7609], device='cuda:0', requires_grad=True) train_loss=[0.30476812 0.5012599 ], train_acc=[0.90275 0.81755]
56/100: weight=tensor([0.6616, 0.7498], device='cuda:0', requires_grad=True) train_loss=[0.30478516 0.5178229 ], train_acc=[0.902 0.805]
58/100: weight=tensor([0.5723, 0.8200], device='cuda:0', requires_grad=True) train_loss=[0.300257   0.49906734], train_acc=[0.90415 0.81845]
60/100: weight=tensor([0.6664, 0.7456], device='cuda:0', requires_grad=True) train_loss=[0.32719213 0.49679098], train_acc=[0.89675 0.81625]
62/100: weight=tensor([0.6409, 0.7676], device='cuda:0', requires_grad=True) train_loss=[0.30522674 0.50267744], train_acc=[0.90175 0.8157 ]
64/100: weight=tensor([0.6383, 0.7698], device='cuda:0', requires_grad=True) train_loss=[0.2861493  0.49912745], train_acc=[0.9094 0.8187]
66/100: weight=tensor([0.6718, 0.7407], device='cuda:0', requires_grad=True) train_loss=[0.289622  0.4922657], train_acc=[0.90815 0.81935]
68/100: weight=tensor([0.6904, 0.7235], device='cuda:0', requires_grad=True) train_loss=[0.29552582 0.49073866], train_acc=[0.90415 0.82155]
70/100: weight=tensor([0.6622, 0.7493], device='cuda:0', requires_grad=True) train_loss=[0.30775285 0.5047335 ], train_acc=[0.89935 0.81375]
72/100: weight=tensor([0.5968, 0.8024], device='cuda:0', requires_grad=True) train_loss=[0.28602475 0.4960645 ], train_acc=[0.9081 0.8172]
74/100: weight=tensor([0.6691, 0.7432], device='cuda:0', requires_grad=True) train_loss=[0.29832864 0.48882073], train_acc=[0.9048  0.82195]
76/100: weight=tensor([0.6578, 0.7532], device='cuda:0', requires_grad=True) train_loss=[0.28837553 0.49261418], train_acc=[0.9074  0.81955]
78/100: weight=tensor([0.6695, 0.7428], device='cuda:0', requires_grad=True) train_loss=[0.28067192 0.49572793], train_acc=[0.91065 0.8174 ]
80/100: weight=tensor([0.6382, 0.7699], device='cuda:0', requires_grad=True) train_loss=[0.29446816 0.4941667 ], train_acc=[0.9051 0.819 ]
82/100: weight=tensor([0.5625, 0.8268], device='cuda:0', requires_grad=True) train_loss=[0.29205397 0.4857826 ], train_acc=[0.9069  0.82165]
84/100: weight=tensor([0.6621, 0.7495], device='cuda:0', requires_grad=True) train_loss=[0.28213117 0.5022013 ], train_acc=[0.9087 0.8203]
86/100: weight=tensor([0.6807, 0.7325], device='cuda:0', requires_grad=True) train_loss=[0.28314897 0.5022604 ], train_acc=[0.90865 0.81505]
88/100: weight=tensor([0.6570, 0.7539], device='cuda:0', requires_grad=True) train_loss=[0.27711332 0.49251422], train_acc=[0.9115  0.82225]
90/100: weight=tensor([0.6675, 0.7446], device='cuda:0', requires_grad=True) train_loss=[0.26957014 0.48322183], train_acc=[0.91275 0.8229 ]
92/100: weight=tensor([0.6504, 0.7596], device='cuda:0', requires_grad=True) train_loss=[0.28292885 0.5064188 ], train_acc=[0.90865 0.8103 ]
94/100: weight=tensor([0.6763, 0.7366], device='cuda:0', requires_grad=True) train_loss=[0.27155796 0.49629638], train_acc=[0.91355 0.8197 ]
96/100: weight=tensor([0.6402, 0.7682], device='cuda:0', requires_grad=True) train_loss=[0.27043134 0.509068  ], train_acc=[0.9117 0.8118]
98/100: weight=tensor([0.6786, 0.7345], device='cuda:0', requires_grad=True) train_loss=[0.26841167 0.4890707 ], train_acc=[0.91475 0.8208 ]
100/100: weight=tensor([0.6801, 0.7331], device='cuda:0', requires_grad=True) train_loss=[0.27256176 0.47795537], train_acc=[0.91285 0.8239 ]
**** Time taken for fashion_and_mnist_1 = 2052.85257935524
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7478, 0.6640], device='cuda:0', requires_grad=True) train_loss=[1.31087   1.1578711], train_acc=[0.55695 0.59945]
2/100: weight=tensor([0.6783, 0.7348], device='cuda:0', requires_grad=True) train_loss=[0.9484519  0.92377716], train_acc=[0.6854  0.66995]
4/100: weight=tensor([0.6534, 0.7570], device='cuda:0', requires_grad=True) train_loss=[0.68911713 0.77941173], train_acc=[0.77495 0.70975]
6/100: weight=tensor([0.6678, 0.7443], device='cuda:0', requires_grad=True) train_loss=[0.6337117  0.69452715], train_acc=[0.7901  0.74545]
8/100: weight=tensor([0.6174, 0.7866], device='cuda:0', requires_grad=True) train_loss=[0.5406411 0.6548133], train_acc=[0.82405 0.75295]
10/100: weight=tensor([0.5547, 0.8321], device='cuda:0', requires_grad=True) train_loss=[0.4952934 0.6235252], train_acc=[0.8396  0.77155]
12/100: weight=tensor([0.6185, 0.7858], device='cuda:0', requires_grad=True) train_loss=[0.52436495 0.6281495 ], train_acc=[0.82745 0.77105]
14/100: weight=tensor([0.5129, 0.8584], device='cuda:0', requires_grad=True) train_loss=[0.4422057 0.6013216], train_acc=[0.8576  0.77815]
16/100: weight=tensor([0.5944, 0.8042], device='cuda:0', requires_grad=True) train_loss=[0.47943932 0.5838996 ], train_acc=[0.8429  0.78415]
18/100: weight=tensor([0.5724, 0.8200], device='cuda:0', requires_grad=True) train_loss=[0.40559503 0.5676213 ], train_acc=[0.8709  0.78805]
20/100: weight=tensor([0.5530, 0.8331], device='cuda:0', requires_grad=True) train_loss=[0.39604414 0.56315506], train_acc=[0.8725 0.791 ]
22/100: weight=tensor([0.5517, 0.8340], device='cuda:0', requires_grad=True) train_loss=[0.39387107 0.5528729 ], train_acc=[0.87405 0.79625]
24/100: weight=tensor([0.5560, 0.8312], device='cuda:0', requires_grad=True) train_loss=[0.39593747 0.55916744], train_acc=[0.87185 0.79725]
26/100: weight=tensor([0.5523, 0.8337], device='cuda:0', requires_grad=True) train_loss=[0.37426612 0.5460861 ], train_acc=[0.87995 0.8021 ]
28/100: weight=tensor([0.5564, 0.8309], device='cuda:0', requires_grad=True) train_loss=[0.3600026 0.5485495], train_acc=[0.88405 0.7986 ]
30/100: weight=tensor([0.5483, 0.8363], device='cuda:0', requires_grad=True) train_loss=[0.36822376 0.53975344], train_acc=[0.88245 0.7997 ]
32/100: weight=tensor([0.5605, 0.8282], device='cuda:0', requires_grad=True) train_loss=[0.3544612 0.5266052], train_acc=[0.8887 0.806 ]
34/100: weight=tensor([0.5229, 0.8524], device='cuda:0', requires_grad=True) train_loss=[0.34007782 0.52953917], train_acc=[0.89365 0.80675]
36/100: weight=tensor([0.5754, 0.8178], device='cuda:0', requires_grad=True) train_loss=[0.3364068 0.5287566], train_acc=[0.8936 0.8037]
38/100: weight=tensor([0.5388, 0.8425], device='cuda:0', requires_grad=True) train_loss=[0.3401611 0.5103255], train_acc=[0.8923  0.81255]
40/100: weight=tensor([0.5747, 0.8183], device='cuda:0', requires_grad=True) train_loss=[0.33274767 0.5189467 ], train_acc=[0.8928  0.80905]
42/100: weight=tensor([0.5716, 0.8205], device='cuda:0', requires_grad=True) train_loss=[0.33471882 0.51563245], train_acc=[0.89275 0.8115 ]
44/100: weight=tensor([0.5823, 0.8130], device='cuda:0', requires_grad=True) train_loss=[0.3202116 0.5024426], train_acc=[0.89905 0.8168 ]
46/100: weight=tensor([0.5983, 0.8013], device='cuda:0', requires_grad=True) train_loss=[0.32608685 0.502511  ], train_acc=[0.89725 0.8178 ]
48/100: weight=tensor([0.5313, 0.8472], device='cuda:0', requires_grad=True) train_loss=[0.3115248 0.5119014], train_acc=[0.90025 0.8148 ]
50/100: weight=tensor([0.5264, 0.8502], device='cuda:0', requires_grad=True) train_loss=[0.3137943 0.5115898], train_acc=[0.89985 0.81235]
52/100: weight=tensor([0.5249, 0.8511], device='cuda:0', requires_grad=True) train_loss=[0.3094223  0.49125615], train_acc=[0.9016  0.82265]
54/100: weight=tensor([0.5192, 0.8546], device='cuda:0', requires_grad=True) train_loss=[0.30501875 0.4928277 ], train_acc=[0.903   0.82215]
56/100: weight=tensor([0.5594, 0.8289], device='cuda:0', requires_grad=True) train_loss=[0.3114943  0.49795827], train_acc=[0.90065 0.8173 ]
58/100: weight=tensor([0.5757, 0.8177], device='cuda:0', requires_grad=True) train_loss=[0.30284536 0.48606372], train_acc=[0.90315 0.821  ]
60/100: weight=tensor([0.5970, 0.8022], device='cuda:0', requires_grad=True) train_loss=[0.29656756 0.49481487], train_acc=[0.90565 0.81995]
62/100: weight=tensor([0.5525, 0.8335], device='cuda:0', requires_grad=True) train_loss=[0.3239087 0.4978164], train_acc=[0.89605 0.8204 ]
64/100: weight=tensor([0.5481, 0.8364], device='cuda:0', requires_grad=True) train_loss=[0.37601376 0.4858834 ], train_acc=[0.8788  0.82395]
66/100: weight=tensor([0.5403, 0.8415], device='cuda:0', requires_grad=True) train_loss=[0.29992288 0.482272  ], train_acc=[0.9042 0.8238]
68/100: weight=tensor([0.5108, 0.8597], device='cuda:0', requires_grad=True) train_loss=[0.2911818 0.4772012], train_acc=[0.90705 0.82745]
70/100: weight=tensor([0.5626, 0.8267], device='cuda:0', requires_grad=True) train_loss=[0.30060163 0.48246598], train_acc=[0.9032  0.82575]
72/100: weight=tensor([0.5287, 0.8488], device='cuda:0', requires_grad=True) train_loss=[0.2931443  0.48051155], train_acc=[0.90635 0.8252 ]
74/100: weight=tensor([0.5358, 0.8444], device='cuda:0', requires_grad=True) train_loss=[0.2904273  0.48015085], train_acc=[0.9079  0.82365]
76/100: weight=tensor([0.5505, 0.8349], device='cuda:0', requires_grad=True) train_loss=[0.28491753 0.49236387], train_acc=[0.90995 0.8222 ]
78/100: weight=tensor([0.5030, 0.8643], device='cuda:0', requires_grad=True) train_loss=[0.2829761  0.49240568], train_acc=[0.9089  0.82175]
80/100: weight=tensor([0.6251, 0.7806], device='cuda:0', requires_grad=True) train_loss=[0.2876434  0.46614087], train_acc=[0.9081 0.8292]
82/100: weight=tensor([0.5717, 0.8205], device='cuda:0', requires_grad=True) train_loss=[0.2790191 0.4931952], train_acc=[0.9095 0.8185]
84/100: weight=tensor([0.4772, 0.8788], device='cuda:0', requires_grad=True) train_loss=[0.2790314  0.46606052], train_acc=[0.9097  0.82935]
86/100: weight=tensor([0.5286, 0.8489], device='cuda:0', requires_grad=True) train_loss=[0.28099528 0.48756507], train_acc=[0.91035 0.81835]
88/100: weight=tensor([0.5284, 0.8490], device='cuda:0', requires_grad=True) train_loss=[0.30366153 0.47209096], train_acc=[0.90285 0.82875]
90/100: weight=tensor([0.5761, 0.8174], device='cuda:0', requires_grad=True) train_loss=[0.27441365 0.47144154], train_acc=[0.9116  0.82695]
92/100: weight=tensor([0.5797, 0.8148], device='cuda:0', requires_grad=True) train_loss=[0.31669194 0.48290214], train_acc=[0.899   0.82705]
94/100: weight=tensor([0.5321, 0.8467], device='cuda:0', requires_grad=True) train_loss=[0.28698957 0.46888894], train_acc=[0.90745 0.82675]
96/100: weight=tensor([0.5224, 0.8527], device='cuda:0', requires_grad=True) train_loss=[0.27615628 0.46180794], train_acc=[0.91075 0.83275]
98/100: weight=tensor([0.5862, 0.8102], device='cuda:0', requires_grad=True) train_loss=[0.27278286 0.46523213], train_acc=[0.91125 0.8293 ]
100/100: weight=tensor([0.5713, 0.8208], device='cuda:0', requires_grad=True) train_loss=[0.27789593 0.45921564], train_acc=[0.9126 0.8332]
**** Time taken for fashion_and_mnist_2 = 2047.0648128986359
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.7911, 0.6117], device='cuda:0', requires_grad=True) train_loss=[1.3227733 1.308171 ], train_acc=[0.5496  0.53975]
2/100: weight=tensor([0.7416, 0.6708], device='cuda:0', requires_grad=True) train_loss=[0.9932285  0.91808194], train_acc=[0.66635 0.6588 ]
4/100: weight=tensor([0.6283, 0.7780], device='cuda:0', requires_grad=True) train_loss=[0.77025515 0.7717001 ], train_acc=[0.7449  0.71295]
6/100: weight=tensor([0.5680, 0.8230], device='cuda:0', requires_grad=True) train_loss=[0.6746749  0.71503645], train_acc=[0.7724 0.7377]
8/100: weight=tensor([0.6273, 0.7788], device='cuda:0', requires_grad=True) train_loss=[0.62090397 0.69192517], train_acc=[0.79475 0.74635]
10/100: weight=tensor([0.5360, 0.8442], device='cuda:0', requires_grad=True) train_loss=[0.5768446  0.67204905], train_acc=[0.8116  0.75265]
12/100: weight=tensor([0.5403, 0.8415], device='cuda:0', requires_grad=True) train_loss=[0.6042739 0.6530292], train_acc=[0.7985 0.7565]
14/100: weight=tensor([0.5664, 0.8241], device='cuda:0', requires_grad=True) train_loss=[0.56636494 0.63379776], train_acc=[0.8108  0.76635]
16/100: weight=tensor([0.4096, 0.9123], device='cuda:0', requires_grad=True) train_loss=[0.5281384  0.62429124], train_acc=[0.82375 0.7663 ]
18/100: weight=tensor([0.5595, 0.8288], device='cuda:0', requires_grad=True) train_loss=[0.49624312 0.61220074], train_acc=[0.83925 0.77565]
20/100: weight=tensor([0.4539, 0.8911], device='cuda:0', requires_grad=True) train_loss=[0.4855812 0.6412873], train_acc=[0.84225 0.7586 ]
22/100: weight=tensor([0.4674, 0.8841], device='cuda:0', requires_grad=True) train_loss=[0.46300787 0.5935365 ], train_acc=[0.8504  0.77945]
24/100: weight=tensor([0.5076, 0.8616], device='cuda:0', requires_grad=True) train_loss=[0.4538128 0.5975028], train_acc=[0.8526  0.77695]
26/100: weight=tensor([0.4725, 0.8813], device='cuda:0', requires_grad=True) train_loss=[0.44570383 0.5981131 ], train_acc=[0.8572 0.7718]
28/100: weight=tensor([0.3952, 0.9186], device='cuda:0', requires_grad=True) train_loss=[0.44632018 0.5734581 ], train_acc=[0.8546 0.7885]
30/100: weight=tensor([0.4238, 0.9058], device='cuda:0', requires_grad=True) train_loss=[0.4549315  0.56400526], train_acc=[0.8522  0.79115]
32/100: weight=tensor([0.4793, 0.8776], device='cuda:0', requires_grad=True) train_loss=[0.41266948 0.55497986], train_acc=[0.86795 0.7917 ]
34/100: weight=tensor([0.4350, 0.9004], device='cuda:0', requires_grad=True) train_loss=[0.41201618 0.55656046], train_acc=[0.8661  0.79295]
36/100: weight=tensor([0.4856, 0.8742], device='cuda:0', requires_grad=True) train_loss=[0.4088689  0.55605155], train_acc=[0.8657  0.79245]
38/100: weight=tensor([0.4965, 0.8680], device='cuda:0', requires_grad=True) train_loss=[0.40759143 0.55503297], train_acc=[0.87    0.79465]
40/100: weight=tensor([0.4788, 0.8779], device='cuda:0', requires_grad=True) train_loss=[0.39577273 0.55435556], train_acc=[0.8732 0.7965]
42/100: weight=tensor([0.5243, 0.8515], device='cuda:0', requires_grad=True) train_loss=[0.39596263 0.53957194], train_acc=[0.8718 0.7998]
44/100: weight=tensor([0.4723, 0.8814], device='cuda:0', requires_grad=True) train_loss=[0.41785645 0.53353214], train_acc=[0.8648 0.8009]
46/100: weight=tensor([0.4655, 0.8850], device='cuda:0', requires_grad=True) train_loss=[0.38163006 0.52636456], train_acc=[0.8776 0.8047]
48/100: weight=tensor([0.4786, 0.8780], device='cuda:0', requires_grad=True) train_loss=[0.3718704  0.52716184], train_acc=[0.8817  0.80545]
50/100: weight=tensor([0.5234, 0.8521], device='cuda:0', requires_grad=True) train_loss=[0.37193435 0.52898055], train_acc=[0.8815 0.8059]
52/100: weight=tensor([0.3958, 0.9183], device='cuda:0', requires_grad=True) train_loss=[0.37067613 0.526277  ], train_acc=[0.88065 0.80345]
54/100: weight=tensor([0.4919, 0.8706], device='cuda:0', requires_grad=True) train_loss=[0.37163913 0.5278544 ], train_acc=[0.8799  0.80405]
56/100: weight=tensor([0.4316, 0.9020], device='cuda:0', requires_grad=True) train_loss=[0.40630838 0.5408139 ], train_acc=[0.86705 0.8006 ]
58/100: weight=tensor([0.5085, 0.8611], device='cuda:0', requires_grad=True) train_loss=[0.39867172 0.537769  ], train_acc=[0.87075 0.8053 ]
60/100: weight=tensor([0.5018, 0.8650], device='cuda:0', requires_grad=True) train_loss=[0.35689282 0.52603614], train_acc=[0.88625 0.8089 ]
62/100: weight=tensor([0.4775, 0.8786], device='cuda:0', requires_grad=True) train_loss=[0.40159747 0.52704436], train_acc=[0.8685  0.80625]
64/100: weight=tensor([0.4503, 0.8929], device='cuda:0', requires_grad=True) train_loss=[0.37098974 0.539053  ], train_acc=[0.8791  0.80185]
66/100: weight=tensor([0.5238, 0.8519], device='cuda:0', requires_grad=True) train_loss=[0.37758762 0.50945187], train_acc=[0.8788 0.8149]
68/100: weight=tensor([0.5097, 0.8603], device='cuda:0', requires_grad=True) train_loss=[0.35891864 0.53487635], train_acc=[0.88545 0.8069 ]
70/100: weight=tensor([0.4968, 0.8679], device='cuda:0', requires_grad=True) train_loss=[0.3417128 0.5498196], train_acc=[0.8894  0.79545]
72/100: weight=tensor([0.4414, 0.8973], device='cuda:0', requires_grad=True) train_loss=[0.3638277  0.51035357], train_acc=[0.88125 0.81225]
74/100: weight=tensor([0.4344, 0.9007], device='cuda:0', requires_grad=True) train_loss=[0.3801986  0.49807698], train_acc=[0.8751  0.81855]
76/100: weight=tensor([0.4341, 0.9009], device='cuda:0', requires_grad=True) train_loss=[0.33582684 0.49535826], train_acc=[0.89145 0.82065]
78/100: weight=tensor([0.4800, 0.8773], device='cuda:0', requires_grad=True) train_loss=[0.34005958 0.50658673], train_acc=[0.8918 0.8141]
80/100: weight=tensor([0.4668, 0.8843], device='cuda:0', requires_grad=True) train_loss=[0.3319821 0.5018557], train_acc=[0.89355 0.81665]
82/100: weight=tensor([0.4286, 0.9035], device='cuda:0', requires_grad=True) train_loss=[0.34622458 0.5076769 ], train_acc=[0.88685 0.817  ]
84/100: weight=tensor([0.4688, 0.8833], device='cuda:0', requires_grad=True) train_loss=[0.34530815 0.49362174], train_acc=[0.8862  0.82255]
86/100: weight=tensor([0.4798, 0.8774], device='cuda:0', requires_grad=True) train_loss=[0.33124265 0.49895695], train_acc=[0.8924 0.818 ]
88/100: weight=tensor([0.4821, 0.8761], device='cuda:0', requires_grad=True) train_loss=[0.3253194 0.4878437], train_acc=[0.8959 0.8234]
90/100: weight=tensor([0.4860, 0.8740], device='cuda:0', requires_grad=True) train_loss=[0.35384354 0.5051709 ], train_acc=[0.8856  0.81765]
92/100: weight=tensor([0.4313, 0.9022], device='cuda:0', requires_grad=True) train_loss=[0.32521057 0.5055163 ], train_acc=[0.895   0.81535]
94/100: weight=tensor([0.4417, 0.8972], device='cuda:0', requires_grad=True) train_loss=[0.31971163 0.48722136], train_acc=[0.8977 0.8246]
96/100: weight=tensor([0.4573, 0.8893], device='cuda:0', requires_grad=True) train_loss=[0.31623456 0.49224305], train_acc=[0.89855 0.8224 ]
98/100: weight=tensor([0.4794, 0.8776], device='cuda:0', requires_grad=True) train_loss=[0.3237071 0.4843156], train_acc=[0.8943 0.8249]
100/100: weight=tensor([0.4761, 0.8794], device='cuda:0', requires_grad=True) train_loss=[0.3287076  0.49478132], train_acc=[0.8945  0.81915]
**** Time taken for fashion_and_mnist_3 = 2117.9986538887024
loading dataset fashion_and_mnist
==>>> total trainning batch number: 469
==>>> total testing batch number: 79
1/100: weight=tensor([0.8759, 0.4825], device='cuda:0', requires_grad=True) train_loss=[1.2548819 1.3838718], train_acc=[0.57175 0.48625]
2/100: weight=tensor([0.8322, 0.5545], device='cuda:0', requires_grad=True) train_loss=[1.0188391 1.01581  ], train_acc=[0.6612  0.61355]
4/100: weight=tensor([0.7753, 0.6315], device='cuda:0', requires_grad=True) train_loss=[0.70328987 0.8236287 ], train_acc=[0.76715 0.6963 ]
6/100: weight=tensor([0.7294, 0.6841], device='cuda:0', requires_grad=True) train_loss=[0.6158731  0.78221345], train_acc=[0.7967 0.7126]
8/100: weight=tensor([0.7881, 0.6155], device='cuda:0', requires_grad=True) train_loss=[0.56804174 0.7295684 ], train_acc=[0.8109  0.72745]
10/100: weight=tensor([0.7513, 0.6599], device='cuda:0', requires_grad=True) train_loss=[0.535188  0.7010674], train_acc=[0.82285 0.73785]
12/100: weight=tensor([0.7271, 0.6865], device='cuda:0', requires_grad=True) train_loss=[0.4833939  0.70415646], train_acc=[0.84295 0.7369 ]
14/100: weight=tensor([0.6719, 0.7406], device='cuda:0', requires_grad=True) train_loss=[0.4995027 0.6573285], train_acc=[0.8348 0.7531]
16/100: weight=tensor([0.6865, 0.7271], device='cuda:0', requires_grad=True) train_loss=[0.45732573 0.645324  ], train_acc=[0.85405 0.7621 ]
18/100: weight=tensor([0.7442, 0.6680], device='cuda:0', requires_grad=True) train_loss=[0.42350698 0.6402161 ], train_acc=[0.86205 0.76065]
20/100: weight=tensor([0.7402, 0.6724], device='cuda:0', requires_grad=True) train_loss=[0.43554756 0.6329752 ], train_acc=[0.8588 0.7638]
22/100: weight=tensor([0.7592, 0.6508], device='cuda:0', requires_grad=True) train_loss=[0.39429083 0.6132001 ], train_acc=[0.87355 0.77165]
24/100: weight=tensor([0.7230, 0.6909], device='cuda:0', requires_grad=True) train_loss=[0.39417115 0.6208949 ], train_acc=[0.8735 0.7679]
26/100: weight=tensor([0.5776, 0.8163], device='cuda:0', requires_grad=True) train_loss=[0.45348597 0.609143  ], train_acc=[0.851   0.77365]
28/100: weight=tensor([0.7550, 0.6557], device='cuda:0', requires_grad=True) train_loss=[0.36245376 0.5949136 ], train_acc=[0.8834 0.7813]
30/100: weight=tensor([0.7294, 0.6841], device='cuda:0', requires_grad=True) train_loss=[0.3824479 0.5903726], train_acc=[0.87495 0.7805 ]
32/100: weight=tensor([0.7337, 0.6795], device='cuda:0', requires_grad=True) train_loss=[0.35299683 0.60293627], train_acc=[0.8884  0.77325]
34/100: weight=tensor([0.7245, 0.6892], device='cuda:0', requires_grad=True) train_loss=[0.34766245 0.5803148 ], train_acc=[0.88805 0.784  ]
36/100: weight=tensor([0.7148, 0.6993], device='cuda:0', requires_grad=True) train_loss=[0.37406582 0.58351445], train_acc=[0.878  0.7813]
38/100: weight=tensor([0.7439, 0.6683], device='cuda:0', requires_grad=True) train_loss=[0.35003605 0.57209575], train_acc=[0.8867  0.78965]
40/100: weight=tensor([0.7110, 0.7032], device='cuda:0', requires_grad=True) train_loss=[0.34795934 0.5725629 ], train_acc=[0.8848 0.7886]
42/100: weight=tensor([0.6822, 0.7311], device='cuda:0', requires_grad=True) train_loss=[0.33219743 0.6460909 ], train_acc=[0.89405 0.75405]
44/100: weight=tensor([0.7010, 0.7131], device='cuda:0', requires_grad=True) train_loss=[0.32605043 0.58391654], train_acc=[0.89445 0.7824 ]
46/100: weight=tensor([0.7524, 0.6587], device='cuda:0', requires_grad=True) train_loss=[0.31713647 0.55613244], train_acc=[0.8975 0.7929]
48/100: weight=tensor([0.6590, 0.7521], device='cuda:0', requires_grad=True) train_loss=[0.349816  0.5616456], train_acc=[0.886  0.7909]
50/100: weight=tensor([0.7105, 0.7037], device='cuda:0', requires_grad=True) train_loss=[0.3250464  0.60929495], train_acc=[0.89475 0.76845]
52/100: weight=tensor([0.7292, 0.6843], device='cuda:0', requires_grad=True) train_loss=[0.3646143 0.5535306], train_acc=[0.88085 0.7946 ]
54/100: weight=tensor([0.7157, 0.6984], device='cuda:0', requires_grad=True) train_loss=[0.34470975 0.55637467], train_acc=[0.88865 0.79895]
56/100: weight=tensor([0.7553, 0.6554], device='cuda:0', requires_grad=True) train_loss=[0.33724165 0.55014527], train_acc=[0.888  0.7984]
58/100: weight=tensor([0.6984, 0.7157], device='cuda:0', requires_grad=True) train_loss=[0.30521417 0.54225934], train_acc=[0.90195 0.8001 ]
60/100: weight=tensor([0.6565, 0.7544], device='cuda:0', requires_grad=True) train_loss=[0.31970617 0.5618349 ], train_acc=[0.8963  0.79185]
62/100: weight=tensor([0.7553, 0.6554], device='cuda:0', requires_grad=True) train_loss=[0.30826586 0.54769206], train_acc=[0.89915 0.80165]
64/100: weight=tensor([0.7042, 0.7100], device='cuda:0', requires_grad=True) train_loss=[0.31610432 0.5451065 ], train_acc=[0.8958  0.79945]
66/100: weight=tensor([0.6738, 0.7389], device='cuda:0', requires_grad=True) train_loss=[0.3064618  0.53326637], train_acc=[0.90055 0.8049 ]
68/100: weight=tensor([0.7293, 0.6841], device='cuda:0', requires_grad=True) train_loss=[0.29368144 0.5330778 ], train_acc=[0.9038 0.8077]
70/100: weight=tensor([0.7045, 0.7097], device='cuda:0', requires_grad=True) train_loss=[0.30265194 0.5291763 ], train_acc=[0.902   0.80565]
72/100: weight=tensor([0.7035, 0.7107], device='cuda:0', requires_grad=True) train_loss=[0.30042076 0.5360151 ], train_acc=[0.9035  0.80235]
74/100: weight=tensor([0.6563, 0.7545], device='cuda:0', requires_grad=True) train_loss=[0.29150185 0.5548129 ], train_acc=[0.9054 0.7945]
76/100: weight=tensor([0.6721, 0.7405], device='cuda:0', requires_grad=True) train_loss=[0.3033328 0.5216081], train_acc=[0.9015 0.8077]
78/100: weight=tensor([0.6981, 0.7160], device='cuda:0', requires_grad=True) train_loss=[0.30392736 0.52190447], train_acc=[0.9026 0.8082]
80/100: weight=tensor([0.6852, 0.7284], device='cuda:0', requires_grad=True) train_loss=[0.29595906 0.51656324], train_acc=[0.9048 0.8108]
82/100: weight=tensor([0.7174, 0.6966], device='cuda:0', requires_grad=True) train_loss=[0.2803267 0.5132817], train_acc=[0.9096  0.81115]
84/100: weight=tensor([0.6947, 0.7193], device='cuda:0', requires_grad=True) train_loss=[0.28383082 0.51930153], train_acc=[0.9098 0.8098]
86/100: weight=tensor([0.6969, 0.7172], device='cuda:0', requires_grad=True) train_loss=[0.29928207 0.5254118 ], train_acc=[0.90375 0.8094 ]
88/100: weight=tensor([0.7115, 0.7027], device='cuda:0', requires_grad=True) train_loss=[0.2818677 0.5248262], train_acc=[0.9086  0.80525]
90/100: weight=tensor([0.6902, 0.7236], device='cuda:0', requires_grad=True) train_loss=[0.29711682 0.51746136], train_acc=[0.9039  0.80935]
92/100: weight=tensor([0.7100, 0.7042], device='cuda:0', requires_grad=True) train_loss=[0.28063232 0.5077014 ], train_acc=[0.90915 0.81375]
94/100: weight=tensor([0.7030, 0.7112], device='cuda:0', requires_grad=True) train_loss=[0.2731446  0.50316286], train_acc=[0.91235 0.8157 ]
96/100: weight=tensor([0.6712, 0.7413], device='cuda:0', requires_grad=True) train_loss=[0.28190666 0.5090559 ], train_acc=[0.9086  0.81535]
98/100: weight=tensor([0.7571, 0.6533], device='cuda:0', requires_grad=True) train_loss=[0.38890126 0.50622964], train_acc=[0.8783 0.8133]
100/100: weight=tensor([0.7118, 0.7023], device='cuda:0', requires_grad=True) train_loss=[0.28532535 0.51217043], train_acc=[0.90715 0.8141 ]
**** Time taken for fashion_and_mnist_4 = 2146.1183149814606
**** Time taken for fashion_and_mnist = 11487.319563150406
